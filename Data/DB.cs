// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BusinessWeb.Models.DB;
using Microsoft.EntityFrameworkCore;

namespace BusinessWeb.Data;

public partial class DB : DbContext
{
    public DB()
    {

    }
    public DB(DbContextOptions<DB> options)
        : base(options)
    {
    }

    public virtual DbSet<API_T_Affectation> API_T_Affectation { get; set; }

    public virtual DbSet<API_T_AgenceArticle> API_T_AgenceArticle { get; set; }

    public virtual DbSet<API_T_AgenceBooking> API_T_AgenceBooking { get; set; }

    public virtual DbSet<API_T_AgenceBookingDetail> API_T_AgenceBookingDetail { get; set; }

    public virtual DbSet<API_T_AgenceBookingOffre> API_T_AgenceBookingOffre { get; set; }

    public virtual DbSet<API_T_AgenceBookingPax> API_T_AgenceBookingPax { get; set; }

    public virtual DbSet<API_T_AgenceContrat> API_T_AgenceContrat { get; set; }

    public virtual DbSet<API_T_AgenceContratDate> API_T_AgenceContratDate { get; set; }

    public virtual DbSet<API_T_AgenceContratDetail> API_T_AgenceContratDetail { get; set; }

    public virtual DbSet<API_T_AgenceContratLigne> API_T_AgenceContratLigne { get; set; }

    public virtual DbSet<API_T_AgenceOffre> API_T_AgenceOffre { get; set; }

    public virtual DbSet<API_T_Assurance> API_T_Assurance { get; set; }

    public virtual DbSet<API_T_Attachement> API_T_Attachement { get; set; }

    public virtual DbSet<API_T_AttachementDetail> API_T_AttachementDetail { get; set; }

    public virtual DbSet<API_T_AttachementHorsBD> API_T_AttachementHorsBD { get; set; }

    public virtual DbSet<API_T_Attribute> API_T_Attribute { get; set; }

    public virtual DbSet<API_T_AttributeDetail> API_T_AttributeDetail { get; set; }

    public virtual DbSet<API_T_AttributeTable> API_T_AttributeTable { get; set; }

    public virtual DbSet<API_T_AuditLog> API_T_AuditLog { get; set; }

    public virtual DbSet<API_T_Audit_F_COMPTEA> API_T_Audit_F_COMPTEA { get; set; }

    public virtual DbSet<API_T_Audit_F_COMPTEG> API_T_Audit_F_COMPTEG { get; set; }

    public virtual DbSet<API_T_Audit_F_COMPTET> API_T_Audit_F_COMPTET { get; set; }

    public virtual DbSet<API_T_Audit_F_CREGLEMENT> API_T_Audit_F_CREGLEMENT { get; set; }

    public virtual DbSet<API_T_Audit_F_DOCENTETE> API_T_Audit_F_DOCENTETE { get; set; }

    public virtual DbSet<API_T_Audit_F_DOCLIGNE> API_T_Audit_F_DOCLIGNE { get; set; }

    public virtual DbSet<API_T_Audit_F_ECRITUREC> API_T_Audit_F_ECRITUREC { get; set; }

    public virtual DbSet<API_T_Audit_F_REGLECH> API_T_Audit_F_REGLECH { get; set; }

    public virtual DbSet<API_T_Authorize> API_T_Authorize { get; set; }

    public virtual DbSet<API_T_AvancementDetail> API_T_AvancementDetail { get; set; }

    public virtual DbSet<API_T_AvancementHorsBD> API_T_AvancementHorsBD { get; set; }

    public virtual DbSet<API_T_Bordereau> API_T_Bordereau { get; set; }

    public virtual DbSet<API_T_BordereauDetail> API_T_BordereauDetail { get; set; }

    public virtual DbSet<API_T_Caisse> API_T_Caisse { get; set; }

    public virtual DbSet<API_T_CaisseEntete> API_T_CaisseEntete { get; set; }

    public virtual DbSet<API_T_CaisseLigne> API_T_CaisseLigne { get; set; }

    public virtual DbSet<API_T_Caisse_User> API_T_Caisse_User { get; set; }

    public virtual DbSet<API_T_CarteDisque> API_T_CarteDisque { get; set; }

    public virtual DbSet<API_T_Caution> API_T_Caution { get; set; }

    public virtual DbSet<API_T_CentreCharge> API_T_CentreCharge { get; set; }

    public virtual DbSet<API_T_CentreChargeDetail> API_T_CentreChargeDetail { get; set; }

    public virtual DbSet<API_T_CertifAutoclaves> API_T_CertifAutoclaves { get; set; }

    public virtual DbSet<API_T_CertifDecharge> API_T_CertifDecharge { get; set; }

    public virtual DbSet<API_T_CertifDechargeLigne> API_T_CertifDechargeLigne { get; set; }

    public virtual DbSet<API_T_CertifDocument> API_T_CertifDocument { get; set; }

    public virtual DbSet<API_T_CertifEntete> API_T_CertifEntete { get; set; }

    public virtual DbSet<API_T_CertifFiche> API_T_CertifFiche { get; set; }

    public virtual DbSet<API_T_CertifGrilleDialogue> API_T_CertifGrilleDialogue { get; set; }

    public virtual DbSet<API_T_CertifGrilleDialogueExigence> API_T_CertifGrilleDialogueExigence { get; set; }

    public virtual DbSet<API_T_CertifGrilleDialogueModif> API_T_CertifGrilleDialogueModif { get; set; }

    public virtual DbSet<API_T_CertifInstrument> API_T_CertifInstrument { get; set; }

    public virtual DbSet<API_T_CertifLigne> API_T_CertifLigne { get; set; }

    public virtual DbSet<API_T_CertifMission> API_T_CertifMission { get; set; }

    public virtual DbSet<API_T_CertifOrdreMission> API_T_CertifOrdreMission { get; set; }

    public virtual DbSet<API_T_CertifOrdreMissionLigne> API_T_CertifOrdreMissionLigne { get; set; }

    public virtual DbSet<API_T_CertifOuvertureDossier> API_T_CertifOuvertureDossier { get; set; }

    public virtual DbSet<API_T_CertifPointage> API_T_CertifPointage { get; set; }

    public virtual DbSet<API_T_CertifRapportMission> API_T_CertifRapportMission { get; set; }

    public virtual DbSet<API_T_CertifRapportMissionLigne> API_T_CertifRapportMissionLigne { get; set; }

    public virtual DbSet<API_T_CertifReception> API_T_CertifReception { get; set; }

    public virtual DbSet<API_T_CertifReceptionLigne> API_T_CertifReceptionLigne { get; set; }

    public virtual DbSet<API_T_CertifSuiviDossier> API_T_CertifSuiviDossier { get; set; }

    public virtual DbSet<API_T_Config> API_T_Config { get; set; }

    public virtual DbSet<API_T_Depot_User> API_T_Depot_User { get; set; }

    public virtual DbSet<API_T_DocumentEntete> API_T_DocumentEntete { get; set; }

    public virtual DbSet<API_T_DocumentLigne> API_T_DocumentLigne { get; set; }

    public virtual DbSet<API_T_DroitConstate> API_T_DroitConstate { get; set; }

    public virtual DbSet<API_T_FC_Charges> API_T_FC_Charges { get; set; }

    public virtual DbSet<API_T_FC_MasseSalariale> API_T_FC_MasseSalariale { get; set; }

    public virtual DbSet<API_T_FC_Repas> API_T_FC_Repas { get; set; }

    public virtual DbSet<API_T_FC_RepasCompose> API_T_FC_RepasCompose { get; set; }

    public virtual DbSet<API_T_FC_RepasComposeDetail> API_T_FC_RepasComposeDetail { get; set; }

    public virtual DbSet<API_T_FraisEntete> API_T_FraisEntete { get; set; }

    public virtual DbSet<API_T_FraisLigne> API_T_FraisLigne { get; set; }

    public virtual DbSet<API_T_HistoriqueConnexion> API_T_HistoriqueConnexion { get; set; }

    public virtual DbSet<API_T_HistoriquePiece> API_T_HistoriquePiece { get; set; }

    public virtual DbSet<API_T_ImportLog> API_T_ImportLog { get; set; }

    public virtual DbSet<API_T_Information> API_T_Information { get; set; }

    public virtual DbSet<API_T_Materiel> API_T_Materiel { get; set; }

    public virtual DbSet<API_T_MaterielEntretien> API_T_MaterielEntretien { get; set; }

    public virtual DbSet<API_T_MaterielEntretienDetail> API_T_MaterielEntretienDetail { get; set; }

    public virtual DbSet<API_T_Nantissement> API_T_Nantissement { get; set; }

    public virtual DbSet<API_T_OrdreFabrication> API_T_OrdreFabrication { get; set; }

    public virtual DbSet<API_T_OrdreFabricationDetail> API_T_OrdreFabricationDetail { get; set; }

    public virtual DbSet<API_T_OrdreFabricationLigne> API_T_OrdreFabricationLigne { get; set; }

    public virtual DbSet<API_T_OrdreFabricationOperation> API_T_OrdreFabricationOperation { get; set; }

    public virtual DbSet<API_T_OrdreFabricationPointage> API_T_OrdreFabricationPointage { get; set; }

    public virtual DbSet<API_T_Personnel> API_T_Personnel { get; set; }

    public virtual DbSet<API_T_PersonnelEquipe> API_T_PersonnelEquipe { get; set; }

    public virtual DbSet<API_T_PersonnelMateriel> API_T_PersonnelMateriel { get; set; }

    public virtual DbSet<API_T_Pointage> API_T_Pointage { get; set; }

    public virtual DbSet<API_T_PointageAnnee> API_T_PointageAnnee { get; set; }

    public virtual DbSet<API_T_PointageDetail> API_T_PointageDetail { get; set; }

    public virtual DbSet<API_T_PointageJournee> API_T_PointageJournee { get; set; }

    public virtual DbSet<API_T_PointageLigne> API_T_PointageLigne { get; set; }

    public virtual DbSet<API_T_PointageMois> API_T_PointageMois { get; set; }

    public virtual DbSet<API_T_PointageProjet> API_T_PointageProjet { get; set; }

    public virtual DbSet<API_T_Projet> API_T_Projet { get; set; }

    public virtual DbSet<API_T_ProjetAvenant> API_T_ProjetAvenant { get; set; }

    public virtual DbSet<API_T_ProjetDate> API_T_ProjetDate { get; set; }

    public virtual DbSet<API_T_ProjetPlanningDecompte> API_T_ProjetPlanningDecompte { get; set; }

    public virtual DbSet<API_T_ProjetReception> API_T_ProjetReception { get; set; }

    public virtual DbSet<API_T_Remarque> API_T_Remarque { get; set; }

    public virtual DbSet<API_T_RevisionPrix> API_T_RevisionPrix { get; set; }

    public virtual DbSet<API_T_Site> API_T_Site { get; set; }

    public virtual DbSet<API_T_Site_User> API_T_Site_User { get; set; }

    public virtual DbSet<API_T_TaxeTonnage> API_T_TaxeTonnage { get; set; }

    public virtual DbSet<API_T_Ville> API_T_Ville { get; set; }

    public virtual DbSet<API_V_ACHAT> API_V_ACHAT { get; set; }

    public virtual DbSet<API_V_AFFAIRE> API_V_AFFAIRE { get; set; }

    public virtual DbSet<API_V_AFFAIREAVANCEMENT> API_V_AFFAIREAVANCEMENT { get; set; }

    public virtual DbSet<API_V_AGENCEBOOKING> API_V_AGENCEBOOKING { get; set; }

    public virtual DbSet<API_V_AGENCECONTRAT> API_V_AGENCECONTRAT { get; set; }

    public virtual DbSet<API_V_ARTCLIENT> API_V_ARTCLIENT { get; set; }

    public virtual DbSet<API_V_ARTCOMPTA> API_V_ARTCOMPTA { get; set; }

    public virtual DbSet<API_V_ARTFOURNISS> API_V_ARTFOURNISS { get; set; }

    public virtual DbSet<API_V_ARTICLE> API_V_ARTICLE { get; set; }

    public virtual DbSet<API_V_ARTICLEMVT> API_V_ARTICLEMVT { get; set; }

    public virtual DbSet<API_V_ARTICLESTOCK> API_V_ARTICLESTOCK { get; set; }

    public virtual DbSet<API_V_ATTACHEMENT> API_V_ATTACHEMENT { get; set; }

    public virtual DbSet<API_V_AUDIT_F_COMPTET> API_V_AUDIT_F_COMPTET { get; set; }

    public virtual DbSet<API_V_AUDIT_F_CREGLEMENT> API_V_AUDIT_F_CREGLEMENT { get; set; }

    public virtual DbSet<API_V_AUDIT_F_DOCENTETE> API_V_AUDIT_F_DOCENTETE { get; set; }

    public virtual DbSet<API_V_AUDIT_F_DOCLIGNE> API_V_AUDIT_F_DOCLIGNE { get; set; }

    public virtual DbSet<API_V_AUDIT_F_ECRITUREC> API_V_AUDIT_F_ECRITUREC { get; set; }

    public virtual DbSet<API_V_BALANCEAGEECLIENT> API_V_BALANCEAGEECLIENT { get; set; }

    public virtual DbSet<API_V_BALANCEAGEEFOURNISSEUR> API_V_BALANCEAGEEFOURNISSEUR { get; set; }

    public virtual DbSet<API_V_BORDEREAU> API_V_BORDEREAU { get; set; }

    public virtual DbSet<API_V_CAISSEENTETE> API_V_CAISSEENTETE { get; set; }

    public virtual DbSet<API_V_CBSESSION> API_V_CBSESSION { get; set; }

    public virtual DbSet<API_V_CERTIFENTETE> API_V_CERTIFENTETE { get; set; }

    public virtual DbSet<API_V_COLLABORATEUR> API_V_COLLABORATEUR { get; set; }

    public virtual DbSet<API_V_COMPTET> API_V_COMPTET { get; set; }

    public virtual DbSet<API_V_CREGLEMENT> API_V_CREGLEMENT { get; set; }

    public virtual DbSet<API_V_DOCENTETE> API_V_DOCENTETE { get; set; }

    public virtual DbSet<API_V_DOCLIGNE> API_V_DOCLIGNE { get; set; }

    public virtual DbSet<API_V_ECRITUREC> API_V_ECRITUREC { get; set; }

    public virtual DbSet<API_V_FRAISENTETE> API_V_FRAISENTETE { get; set; }

    public virtual DbSet<API_V_HISTORIQUECONNEXION> API_V_HISTORIQUECONNEXION { get; set; }

    public virtual DbSet<API_V_MARGE> API_V_MARGE { get; set; }

    public virtual DbSet<API_V_MATERIEL> API_V_MATERIEL { get; set; }

    public virtual DbSet<API_V_MATERIELENTRETIEN> API_V_MATERIELENTRETIEN { get; set; }

    public virtual DbSet<API_V_PERSONNEL> API_V_PERSONNEL { get; set; }

    public virtual DbSet<API_V_POINTAGEDETAIL> API_V_POINTAGEDETAIL { get; set; }

    public virtual DbSet<API_V_PROJET> API_V_PROJET { get; set; }

    public virtual DbSet<API_V_REGLECH> API_V_REGLECH { get; set; }

    public virtual DbSet<API_V_REGLEMENTT> API_V_REGLEMENTT { get; set; }

    public virtual DbSet<API_V_RELEVE> API_V_RELEVE { get; set; }

    public virtual DbSet<F_ABOENTETE> F_ABOENTETE { get; set; }

    public virtual DbSet<F_ABOENTETEINFOS> F_ABOENTETEINFOS { get; set; }

    public virtual DbSet<F_ABOLIGNE> F_ABOLIGNE { get; set; }

    public virtual DbSet<F_ABOLIGNEINFOS> F_ABOLIGNEINFOS { get; set; }

    public virtual DbSet<F_ABONNEMENT> F_ABONNEMENT { get; set; }

    public virtual DbSet<F_ABOPERIODE> F_ABOPERIODE { get; set; }

    public virtual DbSet<F_ABOREGLEMENT> F_ABOREGLEMENT { get; set; }

    public virtual DbSet<F_AFFICHEUR> F_AFFICHEUR { get; set; }

    public virtual DbSet<F_AFFICHEURCAISSE> F_AFFICHEURCAISSE { get; set; }

    public virtual DbSet<F_AGENDA> F_AGENDA { get; set; }

    public virtual DbSet<F_AGENDADET> F_AGENDADET { get; set; }

    public virtual DbSet<F_ARTCLIENT> F_ARTCLIENT { get; set; }

    public virtual DbSet<F_ARTCOMPO> F_ARTCOMPO { get; set; }

    public virtual DbSet<F_ARTCOMPTA> F_ARTCOMPTA { get; set; }

    public virtual DbSet<F_ARTENUMREF> F_ARTENUMREF { get; set; }

    public virtual DbSet<F_ARTFOURNISS> F_ARTFOURNISS { get; set; }

    public virtual DbSet<F_ARTGAMME> F_ARTGAMME { get; set; }

    public virtual DbSet<F_ARTGLOSS> F_ARTGLOSS { get; set; }

    public virtual DbSet<F_ARTICLE> F_ARTICLE { get; set; }

    public virtual DbSet<F_ARTICLEMEDIA> F_ARTICLEMEDIA { get; set; }

    public virtual DbSet<F_ARTICLERESSOURCE> F_ARTICLERESSOURCE { get; set; }

    public virtual DbSet<F_ARTMODELE> F_ARTMODELE { get; set; }

    public virtual DbSet<F_ARTPRIX> F_ARTPRIX { get; set; }

    public virtual DbSet<F_ARTSTOCK> F_ARTSTOCK { get; set; }

    public virtual DbSet<F_ARTSTOCKEMPL> F_ARTSTOCKEMPL { get; set; }

    public virtual DbSet<F_BILLETPIECE> F_BILLETPIECE { get; set; }

    public virtual DbSet<F_BONAPAYERHISTO> F_BONAPAYERHISTO { get; set; }

    public virtual DbSet<F_BONAPAYERHISTOCIAL> F_BONAPAYERHISTOCIAL { get; set; }

    public virtual DbSet<F_BUDGET> F_BUDGET { get; set; }

    public virtual DbSet<F_CAISSE> F_CAISSE { get; set; }

    public virtual DbSet<F_CAISSECAISSIER> F_CAISSECAISSIER { get; set; }

    public virtual DbSet<F_CALENDRIER> F_CALENDRIER { get; set; }

    public virtual DbSet<F_CATALOGUE> F_CATALOGUE { get; set; }

    public virtual DbSet<F_CLAVIER> F_CLAVIER { get; set; }

    public virtual DbSet<F_CMLIEN> F_CMLIEN { get; set; }

    public virtual DbSet<F_COLLABORATEUR> F_COLLABORATEUR { get; set; }

    public virtual DbSet<F_COMMPLANIFIE> F_COMMPLANIFIE { get; set; }

    public virtual DbSet<F_COMPTEA> F_COMPTEA { get; set; }

    public virtual DbSet<F_COMPTEABUDGET> F_COMPTEABUDGET { get; set; }

    public virtual DbSet<F_COMPTEABUDGETG> F_COMPTEABUDGETG { get; set; }

    public virtual DbSet<F_COMPTEAMEDIA> F_COMPTEAMEDIA { get; set; }

    public virtual DbSet<F_COMPTEG> F_COMPTEG { get; set; }

    public virtual DbSet<F_COMPTEGA> F_COMPTEGA { get; set; }

    public virtual DbSet<F_COMPTEGBUDGET> F_COMPTEGBUDGET { get; set; }

    public virtual DbSet<F_COMPTEGBUDGETA> F_COMPTEGBUDGETA { get; set; }

    public virtual DbSet<F_COMPTEGNOTE> F_COMPTEGNOTE { get; set; }

    public virtual DbSet<F_COMPTER> F_COMPTER { get; set; }

    public virtual DbSet<F_COMPTET> F_COMPTET { get; set; }

    public virtual DbSet<F_COMPTETG> F_COMPTETG { get; set; }

    public virtual DbSet<F_COMPTETINFOS> F_COMPTETINFOS { get; set; }

    public virtual DbSet<F_COMPTETMEDIA> F_COMPTETMEDIA { get; set; }

    public virtual DbSet<F_COMPTETMODELE> F_COMPTETMODELE { get; set; }

    public virtual DbSet<F_COMPTETRAPPEL> F_COMPTETRAPPEL { get; set; }

    public virtual DbSet<F_CONDITION> F_CONDITION { get; set; }

    public virtual DbSet<F_CONTACTA> F_CONTACTA { get; set; }

    public virtual DbSet<F_CONTACTB> F_CONTACTB { get; set; }

    public virtual DbSet<F_CONTACTD> F_CONTACTD { get; set; }

    public virtual DbSet<F_CONTACTR> F_CONTACTR { get; set; }

    public virtual DbSet<F_CONTACTT> F_CONTACTT { get; set; }

    public virtual DbSet<F_CREGLEMENT> F_CREGLEMENT { get; set; }

    public virtual DbSet<F_CYCLECONS> F_CYCLECONS { get; set; }

    public virtual DbSet<F_CYCLEOBS> F_CYCLEOBS { get; set; }

    public virtual DbSet<F_DEPOT> F_DEPOT { get; set; }

    public virtual DbSet<F_DEPOTCONTACT> F_DEPOTCONTACT { get; set; }

    public virtual DbSet<F_DEPOTEMPL> F_DEPOTEMPL { get; set; }

    public virtual DbSet<F_DOCCURRENTPIECE> F_DOCCURRENTPIECE { get; set; }

    public virtual DbSet<F_DOCENTETE> F_DOCENTETE { get; set; }

    public virtual DbSet<F_DOCENTETEINFOS> F_DOCENTETEINFOS { get; set; }

    public virtual DbSet<F_DOCENTETETEXT> F_DOCENTETETEXT { get; set; }

    public virtual DbSet<F_DOCLIGNE> F_DOCLIGNE { get; set; }

    public virtual DbSet<F_DOCLIGNEEMPL> F_DOCLIGNEEMPL { get; set; }

    public virtual DbSet<F_DOCLIGNEINFOS> F_DOCLIGNEINFOS { get; set; }

    public virtual DbSet<F_DOCLIGNETEXT> F_DOCLIGNETEXT { get; set; }

    public virtual DbSet<F_DOCREGL> F_DOCREGL { get; set; }

    public virtual DbSet<F_DRECOUVREMENT> F_DRECOUVREMENT { get; set; }

    public virtual DbSet<F_DRECOUVREMENTEC> F_DRECOUVREMENTEC { get; set; }

    public virtual DbSet<F_DRECOUVREMENTIV> F_DRECOUVREMENTIV { get; set; }

    public virtual DbSet<F_EBUDGET> F_EBUDGET { get; set; }

    public virtual DbSet<F_ECALENDRIER> F_ECALENDRIER { get; set; }

    public virtual DbSet<F_ECRITUREA> F_ECRITUREA { get; set; }

    public virtual DbSet<F_ECRITUREC> F_ECRITUREC { get; set; }

    public virtual DbSet<F_ECRITURECMEDIA> F_ECRITURECMEDIA { get; set; }

    public virtual DbSet<F_ECRITUREF> F_ECRITUREF { get; set; }

    public virtual DbSet<F_ECRITURER> F_ECRITURER { get; set; }

    public virtual DbSet<F_EMODELEA> F_EMODELEA { get; set; }

    public virtual DbSet<F_EMODELEG> F_EMODELEG { get; set; }

    public virtual DbSet<F_EMODELER> F_EMODELER { get; set; }

    public virtual DbSet<F_ENUMCOND> F_ENUMCOND { get; set; }

    public virtual DbSet<F_ENUMGAMME> F_ENUMGAMME { get; set; }

    public virtual DbSet<F_ENUMLIBRECIAL> F_ENUMLIBRECIAL { get; set; }

    public virtual DbSet<F_ENUMLIBRECPTA> F_ENUMLIBRECPTA { get; set; }

    public virtual DbSet<F_ENUMSTAT> F_ENUMSTAT { get; set; }

    public virtual DbSet<F_ENUMSTATART> F_ENUMSTATART { get; set; }

    public virtual DbSet<F_EPROTECTIONCIAL> F_EPROTECTIONCIAL { get; set; }

    public virtual DbSet<F_EPROTECTIONCPTA> F_EPROTECTIONCPTA { get; set; }

    public virtual DbSet<F_ESCENARIO> F_ESCENARIO { get; set; }

    public virtual DbSet<F_ETABLEAU> F_ETABLEAU { get; set; }

    public virtual DbSet<F_ETAXE> F_ETAXE { get; set; }

    public virtual DbSet<F_FAMCLIENT> F_FAMCLIENT { get; set; }

    public virtual DbSet<F_FAMCOMPTA> F_FAMCOMPTA { get; set; }

    public virtual DbSet<F_FAMFOURNISS> F_FAMFOURNISS { get; set; }

    public virtual DbSet<F_FAMILLE> F_FAMILLE { get; set; }

    public virtual DbSet<F_FAMMODELE> F_FAMMODELE { get; set; }

    public virtual DbSet<F_FAMTARIF> F_FAMTARIF { get; set; }

    public virtual DbSet<F_FAMTARIFQTE> F_FAMTARIFQTE { get; set; }

    public virtual DbSet<F_FOURCHETTERESULTAT> F_FOURCHETTERESULTAT { get; set; }

    public virtual DbSet<F_GAMSTOCK> F_GAMSTOCK { get; set; }

    public virtual DbSet<F_GAMSTOCKEMPL> F_GAMSTOCKEMPL { get; set; }

    public virtual DbSet<F_GLOSSAIRE> F_GLOSSAIRE { get; set; }

    public virtual DbSet<F_INTERBANCAIRE> F_INTERBANCAIRE { get; set; }

    public virtual DbSet<F_JMOUV> F_JMOUV { get; set; }

    public virtual DbSet<F_JOURNAUX> F_JOURNAUX { get; set; }

    public virtual DbSet<F_JOURNAUXA> F_JOURNAUXA { get; set; }

    public virtual DbSet<F_LIBELLE> F_LIBELLE { get; set; }

    public virtual DbSet<F_LIENRECTIF> F_LIENRECTIF { get; set; }

    public virtual DbSet<F_LIGNEARCHIVE> F_LIGNEARCHIVE { get; set; }

    public virtual DbSet<F_LIVRAISON> F_LIVRAISON { get; set; }

    public virtual DbSet<F_LOTFIFO> F_LOTFIFO { get; set; }

    public virtual DbSet<F_LOTSERIE> F_LOTSERIE { get; set; }

    public virtual DbSet<F_MANDAT> F_MANDAT { get; set; }

    public virtual DbSet<F_MODELE> F_MODELE { get; set; }

    public virtual DbSet<F_MODELEA> F_MODELEA { get; set; }

    public virtual DbSet<F_MODELEG> F_MODELEG { get; set; }

    public virtual DbSet<F_MODELER> F_MODELER { get; set; }

    public virtual DbSet<F_NOMENCLAT> F_NOMENCLAT { get; set; }

    public virtual DbSet<F_PAYS> F_PAYS { get; set; }

    public virtual DbSet<F_PIECE> F_PIECE { get; set; }

    public virtual DbSet<F_PIECEA> F_PIECEA { get; set; }

    public virtual DbSet<F_PIECEG> F_PIECEG { get; set; }

    public virtual DbSet<F_PREVISION> F_PREVISION { get; set; }

    public virtual DbSet<F_PROJETFABRICATION> F_PROJETFABRICATION { get; set; }

    public virtual DbSet<F_PROJETHISTO> F_PROJETHISTO { get; set; }

    public virtual DbSet<F_PROJETLIGNE> F_PROJETLIGNE { get; set; }

    public virtual DbSet<F_PROJETPLANNING> F_PROJETPLANNING { get; set; }

    public virtual DbSet<F_PROTECTIONCIAL> F_PROTECTIONCIAL { get; set; }

    public virtual DbSet<F_PROTECTIONCPTA> F_PROTECTIONCPTA { get; set; }

    public virtual DbSet<F_RECTIFICATIONMOTIF> F_RECTIFICATIONMOTIF { get; set; }

    public virtual DbSet<F_REGLEARCHIVE> F_REGLEARCHIVE { get; set; }

    public virtual DbSet<F_REGLECH> F_REGLECH { get; set; }

    public virtual DbSet<F_REGLEMENTT> F_REGLEMENTT { get; set; }

    public virtual DbSet<F_REGREVISION> F_REGREVISION { get; set; }

    public virtual DbSet<F_REGTAXE> F_REGTAXE { get; set; }

    public virtual DbSet<F_REPCOM> F_REPCOM { get; set; }

    public virtual DbSet<F_RESSCENTRE> F_RESSCENTRE { get; set; }

    public virtual DbSet<F_RESSOURCEPROD> F_RESSOURCEPROD { get; set; }

    public virtual DbSet<F_SCENARIO> F_SCENARIO { get; set; }

    public virtual DbSet<F_TARIF> F_TARIF { get; set; }

    public virtual DbSet<F_TARIFCOND> F_TARIFCOND { get; set; }

    public virtual DbSet<F_TARIFGAM> F_TARIFGAM { get; set; }

    public virtual DbSet<F_TARIFQTE> F_TARIFQTE { get; set; }

    public virtual DbSet<F_TARIFREMISE> F_TARIFREMISE { get; set; }

    public virtual DbSet<F_TARIFSELECT> F_TARIFSELECT { get; set; }

    public virtual DbSet<F_TAXE> F_TAXE { get; set; }

    public virtual DbSet<F_TICKETARCHIVE> F_TICKETARCHIVE { get; set; }

    public virtual DbSet<P_ABOCLI> P_ABOCLI { get; set; }

    public virtual DbSet<P_ABOFOUR> P_ABOFOUR { get; set; }

    public virtual DbSet<P_ABOINT> P_ABOINT { get; set; }

    public virtual DbSet<P_AFFAIRE> P_AFFAIRE { get; set; }

    public virtual DbSet<P_AGENDAS> P_AGENDAS { get; set; }

    public virtual DbSet<P_ARRONDI> P_ARRONDI { get; set; }

    public virtual DbSet<P_AVANCEMENT> P_AVANCEMENT { get; set; }

    public virtual DbSet<P_BONAPAYER> P_BONAPAYER { get; set; }

    public virtual DbSet<P_CATCOMPTA> P_CATCOMPTA { get; set; }

    public virtual DbSet<P_CATTARIF> P_CATTARIF { get; set; }

    public virtual DbSet<P_CMDALIVRER> P_CMDALIVRER { get; set; }

    public virtual DbSet<P_CMDARTICLES> P_CMDARTICLES { get; set; }

    public virtual DbSet<P_CMDDETAIL> P_CMDDETAIL { get; set; }

    public virtual DbSet<P_COLONNCPTA> P_COLONNCPTA { get; set; }

    public virtual DbSet<P_COLREGLEMENT> P_COLREGLEMENT { get; set; }

    public virtual DbSet<P_COMMUNICATION> P_COMMUNICATION { get; set; }

    public virtual DbSet<P_COMPTOIR> P_COMPTOIR { get; set; }

    public virtual DbSet<P_CONDITIONNEMENT> P_CONDITIONNEMENT { get; set; }

    public virtual DbSet<P_CONDLIVR> P_CONDLIVR { get; set; }

    public virtual DbSet<P_CONTACT> P_CONTACT { get; set; }

    public virtual DbSet<P_CONTREMARQUECOM> P_CONTREMARQUECOM { get; set; }

    public virtual DbSet<P_CONTREMARQUELIV> P_CONTREMARQUELIV { get; set; }

    public virtual DbSet<P_CONVEUROCIAL> P_CONVEUROCIAL { get; set; }

    public virtual DbSet<P_CONVEUROCPTA> P_CONVEUROCPTA { get; set; }

    public virtual DbSet<P_CRISQUE> P_CRISQUE { get; set; }

    public virtual DbSet<P_DEVISE> P_DEVISE { get; set; }

    public virtual DbSet<P_DOCAFFAIRE> P_DOCAFFAIRE { get; set; }

    public virtual DbSet<P_DOSSIER> P_DOSSIER { get; set; }

    public virtual DbSet<P_DOSSIERCIAL> P_DOSSIERCIAL { get; set; }

    public virtual DbSet<P_ECHANGECIAL> P_ECHANGECIAL { get; set; }

    public virtual DbSet<P_EXPEDITION> P_EXPEDITION { get; set; }

    public virtual DbSet<P_FACTUREAFF> P_FACTUREAFF { get; set; }

    public virtual DbSet<P_FILTREREV> P_FILTREREV { get; set; }

    public virtual DbSet<P_FISCAL> P_FISCAL { get; set; }

    public virtual DbSet<P_GAMME> P_GAMME { get; set; }

    public virtual DbSet<P_GENAUTO> P_GENAUTO { get; set; }

    public virtual DbSet<P_INTERNE> P_INTERNE { get; set; }

    public virtual DbSet<P_INTERROCAISSE> P_INTERROCAISSE { get; set; }

    public virtual DbSet<P_INTERROCOMPTERESS> P_INTERROCOMPTERESS { get; set; }

    public virtual DbSet<P_INTERRODOCREPRES> P_INTERRODOCREPRES { get; set; }

    public virtual DbSet<P_INTERRONOMENCL> P_INTERRONOMENCL { get; set; }

    public virtual DbSet<P_INTERROREPRES> P_INTERROREPRES { get; set; }

    public virtual DbSet<P_INTERRORESS> P_INTERRORESS { get; set; }

    public virtual DbSet<P_INTERROSTO> P_INTERROSTO { get; set; }

    public virtual DbSet<P_INTERROSTONOMENCL> P_INTERROSTONOMENCL { get; set; }

    public virtual DbSet<P_INTERROTAR> P_INTERROTAR { get; set; }

    public virtual DbSet<P_INTERROTARNOMENCL> P_INTERROTARNOMENCL { get; set; }

    public virtual DbSet<P_INTSTATART> P_INTSTATART { get; set; }

    public virtual DbSet<P_LETTRAGE> P_LETTRAGE { get; set; }

    public virtual DbSet<P_LITIGE> P_LITIGE { get; set; }

    public virtual DbSet<P_NATURE> P_NATURE { get; set; }

    public virtual DbSet<P_ORGAACH> P_ORGAACH { get; set; }

    public virtual DbSet<P_ORGAART> P_ORGAART { get; set; }

    public virtual DbSet<P_ORGASTO> P_ORGASTO { get; set; }

    public virtual DbSet<P_ORGATIERS> P_ORGATIERS { get; set; }

    public virtual DbSet<P_ORGAVEN> P_ORGAVEN { get; set; }

    public virtual DbSet<P_PARAMETRECIAL> P_PARAMETRECIAL { get; set; }

    public virtual DbSet<P_PARAMETRELIVR> P_PARAMETRELIVR { get; set; }

    public virtual DbSet<P_PERIOD> P_PERIOD { get; set; }

    public virtual DbSet<P_PREFERENCES> P_PREFERENCES { get; set; }

    public virtual DbSet<P_PROJETAFF> P_PROJETAFF { get; set; }

    public virtual DbSet<P_PROJETFAB> P_PROJETFAB { get; set; }

    public virtual DbSet<P_RAPPEL> P_RAPPEL { get; set; }

    public virtual DbSet<P_REAPPRO> P_REAPPRO { get; set; }

    public virtual DbSet<P_RECHDOC> P_RECHDOC { get; set; }

    public virtual DbSet<P_RECHLIG> P_RECHLIG { get; set; }

    public virtual DbSet<P_RECOUVREMENT> P_RECOUVREMENT { get; set; }

    public virtual DbSet<P_REGISTRE> P_REGISTRE { get; set; }

    public virtual DbSet<P_REGLEMENT> P_REGLEMENT { get; set; }

    public virtual DbSet<P_REGULINV> P_REGULINV { get; set; }

    public virtual DbSet<P_REGULR> P_REGULR { get; set; }

    public virtual DbSet<P_REJET> P_REJET { get; set; }

    public virtual DbSet<P_RESILIATION> P_RESILIATION { get; set; }

    public virtual DbSet<P_RESOLUTION> P_RESOLUTION { get; set; }

    public virtual DbSet<P_RESULTAT> P_RESULTAT { get; set; }

    public virtual DbSet<P_SCDCLAVIER> P_SCDCLAVIER { get; set; }

    public virtual DbSet<P_SCDREGLEMENT> P_SCDREGLEMENT { get; set; }

    public virtual DbSet<P_SECURITYSTRATEGYCIAL> P_SECURITYSTRATEGYCIAL { get; set; }

    public virtual DbSet<P_SECURITYSTRATEGYCPTA> P_SECURITYSTRATEGYCPTA { get; set; }

    public virtual DbSet<P_SERVICECPTA> P_SERVICECPTA { get; set; }

    public virtual DbSet<P_SOUCHEACHAT> P_SOUCHEACHAT { get; set; }

    public virtual DbSet<P_SOUCHEINTERNE> P_SOUCHEINTERNE { get; set; }

    public virtual DbSet<P_SOUCHEVENTE> P_SOUCHEVENTE { get; set; }

    public virtual DbSet<P_STATISTIQUE> P_STATISTIQUE { get; set; }

    public virtual DbSet<P_TIERS> P_TIERS { get; set; }

    public virtual DbSet<P_TRACABILITE> P_TRACABILITE { get; set; }

    public virtual DbSet<P_UNITE> P_UNITE { get; set; }

    public virtual DbSet<P_VALIDPLGLOBALE> P_VALIDPLGLOBALE { get; set; }

    public virtual DbSet<P_VALIDPLUNITAIRE> P_VALIDPLUNITAIRE { get; set; }

    public virtual DbSet<cbUserSession> cbUserSession { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<API_T_Affectation>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Affectation_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_AgenceArticle>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceArticle_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Designation)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_AgenceBooking>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceBooking_id");

            entity.Property(e => e.ArrivalDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.ArrivalDateStart).HasColumnType("smalldatetime");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.NbrPax).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrPaxAdult).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrPaxChild).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrPaxInfant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUDevise).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SellingDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.SellingDateStart).HasColumnType("smalldatetime");
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");
        });

        modelBuilder.Entity<API_T_AgenceBookingDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceBookingDetail_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LibelleFA)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.PUDevise_CL).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUDevise_FR).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU_CL).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU_FR).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_AgenceBookingDetail)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencebookingdetail");
        });

        modelBuilder.Entity<API_T_AgenceBookingOffre>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceBookingOffre_id");

            entity.Property(e => e.ArrivalDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.ArrivalDateStart).HasColumnType("smalldatetime");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Remise).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SellingDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.SellingDateStart).HasColumnType("smalldatetime");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_AgenceBookingOffre)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencebookingoffre");
        });

        modelBuilder.Entity<API_T_AgenceBookingPax>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceBookingPax_id");

            entity.Property(e => e.Adresse)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CIN)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Naissance).HasColumnType("smalldatetime");
            entity.Property(e => e.Nom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Pays)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Ville)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_AgenceBookingPax)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencebookingpax");
        });

        modelBuilder.Entity<API_T_AgenceContrat>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceContrat_id");

            entity.Property(e => e.AdultStart).HasDefaultValue(6);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ChildEnd).HasDefaultValue(5);
            entity.Property(e => e.ChildStart).HasDefaultValue(2);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.DateDebut).HasColumnType("datetime");
            entity.Property(e => e.DateFin).HasColumnType("datetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.InfantEnd).HasDefaultValue(1);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RemiseChild).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.RemiseInfant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Tax).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.TiersNavigation).WithMany(p => p.API_T_AgenceContrat)
                .HasForeignKey(d => d.Tiers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencecontrat");
        });

        modelBuilder.Entity<API_T_AgenceContratDate>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceContratDate_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.ContratNavigation).WithMany(p => p.API_T_AgenceContratDate)
                .HasForeignKey(d => d.Contrat)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencecontratdate");
        });

        modelBuilder.Entity<API_T_AgenceContratDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceContratDetail_id");

            entity.Property(e => e.CL_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.FR_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUDevise).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.LigneNavigation).WithMany(p => p.API_T_AgenceContratDetail)
                .HasForeignKey(d => d.Ligne)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencecontratdetail");

            entity.HasOne(d => d.PeriodeNavigation).WithMany(p => p.API_T_AgenceContratDetail)
                .HasForeignKey(d => d.Periode)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencecontratdetail_periode");
        });

        modelBuilder.Entity<API_T_AgenceContratLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceContratLigne_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.LibelleFA).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUDevise).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.ArticleNavigation).WithMany(p => p.API_T_AgenceContratLigne)
                .HasForeignKey(d => d.Article)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencecontratligne_article");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_AgenceContratLigne)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agencecontratligne");
        });

        modelBuilder.Entity<API_T_AgenceOffre>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AgenceOffre_id");

            entity.Property(e => e.ArrivalDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.ArrivalDateStart).HasColumnType("smalldatetime");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Cumulative).HasDefaultValue(true);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Remise).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SellingDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.SellingDateStart).HasColumnType("smalldatetime");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_AgenceOffre)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agenceoffre");

            entity.HasOne(d => d.OffreNavigation).WithMany(p => p.API_T_AgenceOffre)
                .HasForeignKey(d => d.Offre)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_agenceoffre_info");
        });

        modelBuilder.Entity<API_T_Assurance>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Assurance_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.Fournisseur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NouvelleDateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.Prolongement).HasColumnType("decimal(24, 6)");
        });

        modelBuilder.Entity<API_T_Attachement>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Attachement_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDecompte).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroDecompte)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Statut).HasDefaultValue(0);
            entity.Property(e => e.TauxRabais).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_Attachement)
                .HasForeignKey(d => d.Projet)
                .HasConstraintName("fk_api_t_attachement");
        });

        modelBuilder.Entity<API_T_AttachementDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AttachementDetail_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consistance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateExecution).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QtePrec).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Taxe)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.AttachementNavigation).WithMany(p => p.API_T_AttachementDetail)
                .HasForeignKey(d => d.Attachement)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_attachementdetail");

            entity.HasOne(d => d.LigneNavigation).WithMany(p => p.API_T_AttachementDetail)
                .HasForeignKey(d => d.Ligne)
                .HasConstraintName("fk_api_t_attachementdetail_ligne");
        });

        modelBuilder.Entity<API_T_AttachementHorsBD>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AttachementHorsBD_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Article)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consistance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateExecution).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.AttachementNavigation).WithMany(p => p.API_T_AttachementHorsBD)
                .HasForeignKey(d => d.Attachement)
                .HasConstraintName("fk_api_t_attachementhorsbd");
        });

        modelBuilder.Entity<API_T_Attribute>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Attribute_id_0");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Intitule)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.TableName)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_AttributeDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Attribute_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateValue).HasColumnType("smalldatetime");
            entity.Property(e => e.DecimalValue).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.TableName)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Parent).WithMany(p => p.API_T_AttributeDetail)
                .HasForeignKey(d => d.ParentID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_API_T_attributedetail");
        });

        modelBuilder.Entity<API_T_AttributeTable>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AttributeTable_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.TextValue).IsRequired();

            entity.HasOne(d => d.Parent).WithMany(p => p.API_T_AttributeTable)
                .HasForeignKey(d => d.ParentID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_API_T_attributetable");
        });

        modelBuilder.Entity<API_T_AuditLog>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AuditLog_id");

            entity.Property(e => e.Action)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.EntityName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.NewValues).HasColumnType("text");
            entity.Property(e => e.OldValues).HasColumnType("text");
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
            entity.Property(e => e.UserName)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_Audit_F_COMPTEA>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_COMPTEA_id");

            entity.Property(e => e.CA_Achat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CA_Vente).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_COMPTEG>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_COMPTEG_id");

            entity.Property(e => e.CG_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CR_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_COMPTET>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_COMPTET_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumPrinc)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Adresse)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ape)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Classement)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodePostal)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodeRegion)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Coface)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Commentaire)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Complement)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Contact)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCode)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCodeSage)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Identifiant)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_LangueISO2)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Pays)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Qualite)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Raccourci)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentInt)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentNIF)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Siret)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Site)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique06)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique07)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique08)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique09)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique10)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_SvCotation)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvEffectif)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvFormeJuri)
                .HasMaxLength(33)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvObjetMaj)
                .HasMaxLength(61)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvRegul)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_CREGLEMENT>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_CREGLEMENT_id");

            entity.Property(e => e.CG_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumEcart)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeurOrig)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumEcart)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RG_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_Date).HasColumnType("datetime");
            entity.Property(e => e.RG_DateEchCont).HasColumnType("datetime");
            entity.Property(e => e.RG_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RG_Impaye).HasColumnType("datetime");
            entity.Property(e => e.RG_Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RG_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_MontantDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_MontantEcart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RG_Reference)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_DOCENTETE>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_DOCENTETE_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DO_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord01)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord02)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord03)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord04)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_FactureFrs)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DO_Motif)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DO_NoWeb)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_PieceOrig)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Tiers)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_DOCLIGNE>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_DOCLIGNE_id");

            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBC).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBL).HasColumnType("datetime");
            entity.Property(e => e.DL_DateDE).HasColumnType("datetime");
            entity.Property(e => e.DL_DatePL).HasColumnType("datetime");
            entity.Property(e => e.DL_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_NoColis)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DL_Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PieceBC)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PieceBL)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PieceDE)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PiecePL)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteDE).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_ECRITUREC>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_ECRITUREC_id");

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCont)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.EC_Date).HasColumnType("datetime");
            entity.Property(e => e.EC_DateCloture).HasColumnType("datetime");
            entity.Property(e => e.EC_DateOp).HasColumnType("datetime");
            entity.Property(e => e.EC_DatePenal).HasColumnType("datetime");
            entity.Property(e => e.EC_DateRappro).HasColumnType("datetime");
            entity.Property(e => e.EC_DateRegle).HasColumnType("datetime");
            entity.Property(e => e.EC_DateRelance).HasColumnType("datetime");
            entity.Property(e => e.EC_Devise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Echeance).HasColumnType("datetime");
            entity.Property(e => e.EC_Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EC_Lettrage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_LettrageQ)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_MontantRegle).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Parite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EC_Pointage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_RefPiece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EC_Reference)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EC_TresoPiece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.JM_Date).HasColumnType("datetime");
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Audit_F_REGLECH>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Audit_F_REGLECH_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RC_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_T_Authorize>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Authorize_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.SelectedAPP).HasDefaultValue(0);
            entity.Property(e => e.Url).HasMaxLength(100);
            entity.Property(e => e.UserID).HasMaxLength(450);
        });

        modelBuilder.Entity<API_T_AvancementDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AvancementDetail_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consistance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateExecution).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroPrix)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QtePrec).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.JourneeNavigation).WithMany(p => p.API_T_AvancementDetail)
                .HasForeignKey(d => d.Journee)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_avancementdetail");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_AvancementDetail)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_avancementdetail_pr");
        });

        modelBuilder.Entity<API_T_AvancementHorsBD>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_AvancementHorsBD_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Article)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consistance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateExecution).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.JourneeNavigation).WithMany(p => p.API_T_AvancementHorsBD)
                .HasForeignKey(d => d.Journee)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_avancementhorsbd");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_AvancementHorsBD)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_avancementhorsbd_pr");
        });

        modelBuilder.Entity<API_T_Bordereau>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Bordereau_id");

            entity.Property(e => e.CoutTotale).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Marge).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MargeP).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Rabais).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_Bordereau)
                .HasForeignKey(d => d.Projet)
                .HasConstraintName("fk_api_t_bordereau");
        });

        modelBuilder.Entity<API_T_BordereauDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_BordereauDetail_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consistance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoutTotal).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.CoutU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.MargeP).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MargeTotale).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MargeU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroPrix)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QteReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Taxe)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.BordereauNavigation).WithMany(p => p.API_T_BordereauDetail)
                .HasForeignKey(d => d.Bordereau)
                .HasConstraintName("fk_api_t_bordereaudetail");
        });

        modelBuilder.Entity<API_T_Caisse>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Caisse_id");

            entity.Property(e => e.CG_Num)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.C_DateCreation)
                .HasDefaultValueSql("(sysdatetime())")
                .HasColumnType("datetime");
            entity.Property(e => e.C_DateInitial)
                .HasDefaultValueSql("(sysdatetime())")
                .HasColumnType("datetime");
            entity.Property(e => e.C_Nom)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.C_Racine)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.C_Remarque)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.C_Solde).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.C_SoldeInitial).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.JO_Num)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_CaisseEntete>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CaisseEntete_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantLettre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Numero)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Remarque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ValideDate).HasColumnType("smalldatetime");

            entity.HasOne(d => d.CaisseNavigation).WithMany(p => p.API_T_CaisseEntete)
                .HasForeignKey(d => d.Caisse)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_caisseentete");
        });

        modelBuilder.Entity<API_T_CaisseLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CaisseLigne_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_CaisseLigne)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_caisseligne");
        });

        modelBuilder.Entity<API_T_Caisse_User>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Caisse_User_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.User)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CarteDisque>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CarteDisque_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.MaterielNavigation).WithMany(p => p.API_T_CarteDisque)
                .HasForeignKey(d => d.Materiel)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_cartedisque");
        });

        modelBuilder.Entity<API_T_Caution>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Caution_id");

            entity.Property(e => e.Banque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateAnnulationPrevue).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDepotClient).HasColumnType("smalldatetime");
            entity.Property(e => e.DateRetourBanque).HasColumnType("smalldatetime");
            entity.Property(e => e.DateRetraitBanque).HasColumnType("smalldatetime");
            entity.Property(e => e.Etape).HasDefaultValue(0);
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantEstime).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_Caution)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_caution_api_t_projet");
        });

        modelBuilder.Entity<API_T_CentreCharge>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CentreCharge_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(27, 6)");
        });

        modelBuilder.Entity<API_T_CentreChargeDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CentreChargeDetail_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(27, 6)");
        });

        modelBuilder.Entity<API_T_CertifAutoclaves>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifFiche_id_0");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.EntreeSondes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Essai)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Homogeneite)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Pression)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Stabilite)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TemperatureSterilisation)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TempsEquilibrage)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TempsSterilisation)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Tolerance)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ValeurSterilisatrice)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.DialogueNavigation).WithMany(p => p.API_T_CertifAutoclaves)
                .HasForeignKey(d => d.Dialogue)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifautoclaves");
        });

        modelBuilder.Entity<API_T_CertifDecharge>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__API_T_Ce__3213E83FBBA965AD");

            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.DateFiche).HasColumnType("smalldatetime");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.NumeroDossier)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroFiche)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroFicheReceptionCorrespondante)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SocieteNom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SoussigneNom)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifDechargeLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__API_T_Ce__3213E83F1A3EBABD");

            entity.Property(e => e.Accessoires)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Identification)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifDocument>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifDocument_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Numero)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Responsable)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.DossierNavigation).WithMany(p => p.API_T_CertifDocument)
                .HasForeignKey(d => d.Dossier)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifdocument");
        });

        modelBuilder.Entity<API_T_CertifEntete>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifEntete_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateLivraison).HasColumnType("smalldatetime");
            entity.Property(e => e.FactureDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FactureID).HasDefaultValue(0);
            entity.Property(e => e.FactureNum)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.IsFacture).HasDefaultValue(false);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroDossier)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroRapportMission)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Remarque).HasColumnType("text");
            entity.Property(e => e.Souche).HasDefaultValue((short)0);
        });

        modelBuilder.Entity<API_T_CertifFiche>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifFiche_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_CertifGrilleDialogue>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifGrilleDialogue_id");

            entity.Property(e => e.Adresse)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AdresseLivraisonExpedition)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AuditAuLaboratoireChar)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Commentaire)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateSouhaiteePrestation).HasColumnType("smalldatetime");
            entity.Property(e => e.DateTransmissionDocuments).HasColumnType("smalldatetime");
            entity.Property(e => e.DemandeParAutre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FonctionInterlocuteur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Interlocuteur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LieuPrestation)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ListePersonnelQualifieChar)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MethodeEtalonnageAutre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModeLivraisonExpedition)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.NaturePrestationAutre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Numero)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OldCompte).HasDefaultValue(false);
            entity.Property(e => e.OperationsAttendues).HasColumnType("text");
            entity.Property(e => e.PMQChar)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PeriodiciteEtalonnageEtiquettesPeriode)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PeriodiciteEtalonnageRapportsPeriode)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PointsEtalonnageAutre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PreuvesRaccordChar)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProcedureTraitementReclamationChar)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RaisonSocial)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e._AuditAuLaboratoire).HasColumnName(" AuditAuLaboratoire");
            entity.Property(e => e._ListePersonnelQualifie).HasColumnName(" ListePersonnelQualifie");
        });

        modelBuilder.Entity<API_T_CertifGrilleDialogueExigence>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifGrilleDialogueExigence_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.AutreSpecification).HasColumnType("text");
            entity.Property(e => e.Classe)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ErreurMaximalTolereUtilisateur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.PointsEtalonnage)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Utilisateur)
                .HasMaxLength(40)
                .IsUnicode(false);

            entity.HasOne(d => d.DialogueNavigation).WithMany(p => p.API_T_CertifGrilleDialogueExigence)
                .HasForeignKey(d => d.Dialogue)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifgrilledialogueexigence");
        });

        modelBuilder.Entity<API_T_CertifGrilleDialogueModif>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifGrilleDialogueModif_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Nature)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Responsable)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.DialogueNavigation).WithMany(p => p.API_T_CertifGrilleDialogueModif)
                .HasForeignKey(d => d.Dialogue)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifgrilledialoguemodif");
        });

        modelBuilder.Entity<API_T_CertifInstrument>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifInstrument_id_0");

            entity.Property(e => e.Etat)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.IdentificationInterne)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Remarque)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifLigne_id");

            entity.Property(e => e.AR_Design)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DL_CodeTaxe)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DL_MontantHT)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DL_MontantTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DL_PU)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DL_PUTTC)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DL_Taxe)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.QL_Qte)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_CertifLigne)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_Certifligne");
        });

        modelBuilder.Entity<API_T_CertifMission>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifMission_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_CertifOrdreMission>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifOrdreMission_id");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDepart).HasColumnType("smalldatetime");
            entity.Property(e => e.DateRetour).HasColumnType("smalldatetime");
            entity.Property(e => e.Lieu)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.MissionObjet)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MoyenTransport)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDossier)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifOrdreMissionLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifOrdreMissionLigne_id");

            entity.Property(e => e.Libelle)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.InstrumentNavigation).WithMany(p => p.API_T_CertifOrdreMissionLigne)
                .HasForeignKey(d => d.Instrument)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifordremissionligne_2");

            entity.HasOne(d => d.OrdreNavigation).WithMany(p => p.API_T_CertifOrdreMissionLigne)
                .HasForeignKey(d => d.Ordre)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifordremissionligne");
        });

        modelBuilder.Entity<API_T_CertifOuvertureDossier>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifOuvertureDossier_id");

            entity.Property(e => e.Adresse)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Commentaire)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateOuverture).HasColumnType("smalldatetime");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Interlocuteur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Numero)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDossier)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Service)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifPointage>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__API_T_Ce__3213E83FA8292B7A");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateCreation)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebutEtalonnage).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebutSaisie).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFinEtalonnage).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFinSaisie).HasColumnType("smalldatetime");
            entity.Property(e => e.DateLivraison).HasColumnType("smalldatetime");
            entity.Property(e => e.DateModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.DateReceptionDossier).HasColumnType("smalldatetime");
            entity.Property(e => e.Livreur).HasMaxLength(100);
            entity.Property(e => e.NumeroDE)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroFACBL).HasMaxLength(50);
            entity.Property(e => e.Ville).HasMaxLength(100);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.API_T_CertifPointage)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("fk_api_t_certifpointage");

            entity.HasOne(d => d.ResponsableEtalonnageNavigation).WithMany(p => p.API_T_CertifPointageResponsableEtalonnageNavigation)
                .HasForeignKey(d => d.ResponsableEtalonnage)
                .HasConstraintName("fk_api_t_certifpointage2");

            entity.HasOne(d => d.ResponsableEtalonnage2Navigation).WithMany(p => p.API_T_CertifPointageResponsableEtalonnage2Navigation)
                .HasForeignKey(d => d.ResponsableEtalonnage2)
                .HasConstraintName("fk_api_t_certifpointage5");

            entity.HasOne(d => d.ResponsableEtalonnage3Navigation).WithMany(p => p.API_T_CertifPointageResponsableEtalonnage3Navigation)
                .HasForeignKey(d => d.ResponsableEtalonnage3)
                .HasConstraintName("fk_api_t_certifpointage6");

            entity.HasOne(d => d.ResponsableImpressionNavigation).WithMany(p => p.API_T_CertifPointageResponsableImpressionNavigation)
                .HasForeignKey(d => d.ResponsableImpression)
                .HasConstraintName("fk_api_t_certifpointage4");

            entity.HasOne(d => d.ResponsableSaisieNavigation).WithMany(p => p.API_T_CertifPointageResponsableSaisieNavigation)
                .HasForeignKey(d => d.ResponsableSaisie)
                .HasConstraintName("fk_api_t_certifpointage3");

            entity.HasOne(d => d.VerificationApresImpressionNavigation).WithMany(p => p.API_T_CertifPointageVerificationApresImpressionNavigation)
                .HasForeignKey(d => d.VerificationApresImpression)
                .HasConstraintName("fk_api_t_certifpointage8");

            entity.HasOne(d => d.VerificationAvantImpressionNavigation).WithMany(p => p.API_T_CertifPointageVerificationAvantImpressionNavigation)
                .HasForeignKey(d => d.VerificationAvantImpression)
                .HasConstraintName("fk_api_t_certifpointage7");
        });

        modelBuilder.Entity<API_T_CertifRapportMission>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifRapportMission_id");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebutTravaux).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFinTravaux).HasColumnType("smalldatetime");
            entity.Property(e => e.EtendueResolution)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Lieu)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDossier)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroSerie)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifRapportMissionLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifRapportMissionLigne_id");

            entity.Property(e => e.Constructeur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Designation)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Emplacement)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EtendueResolution)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Identifiant)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroCertificat)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroSerie)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.InstrumentNavigation).WithMany(p => p.API_T_CertifRapportMissionLigne)
                .HasForeignKey(d => d.Instrument)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifrapportmissionligne_2");

            entity.HasOne(d => d.RapportNavigation).WithMany(p => p.API_T_CertifRapportMissionLigne)
                .HasForeignKey(d => d.Rapport)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_certifrapportmissionligne");
        });

        modelBuilder.Entity<API_T_CertifReception>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__API_T_Ce__3213E83FA134D9B3");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ClientNom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.DateEntreeLabo).HasColumnType("smalldatetime");
            entity.Property(e => e.DateReception).HasColumnType("date");
            entity.Property(e => e.DateSortieLabo).HasColumnType("smalldatetime");
            entity.Property(e => e.Livreur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.NaturePrestation)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDossier)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroEnregistrement)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Planification)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Priorite)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Recepteur)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifReceptionLigne>(entity =>
        {
            entity.HasKey(e => e.LigneID).HasName("PK__API_T_Ce__3B499C53DA61377D");

            entity.Property(e => e.Accessoires)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Identification)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Observations)
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_CertifSuiviDossier>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_CertifSuiviDossier_id");

            entity.Property(e => e.AutresDate).HasColumnType("smalldatetime");
            entity.Property(e => e.AutresRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AutresRemarque).HasColumnType("text");
            entity.Property(e => e.BordereauEnvoiDate).HasColumnType("smalldatetime");
            entity.Property(e => e.BordereauEnvoiRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.BordereauEnvoiRemarque).HasColumnType("text");
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CertificatEtalonnageDate).HasColumnType("smalldatetime");
            entity.Property(e => e.CertificatEtalonnageRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CertificatEtalonnageRemarque).HasColumnType("text");
            entity.Property(e => e.ConstatsVerificationDate).HasColumnType("smalldatetime");
            entity.Property(e => e.ConstatsVerificationRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ConstatsVerificationRemarque).HasColumnType("text");
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DechargeMaterielDate).HasColumnType("smalldatetime");
            entity.Property(e => e.DechargeMaterielRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DechargeMaterielRemarque).HasColumnType("text");
            entity.Property(e => e.EnqueteSatisfactionDate).HasColumnType("smalldatetime");
            entity.Property(e => e.EnqueteSatisfactionRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EnqueteSatisfactionRemarque).HasColumnType("text");
            entity.Property(e => e.FeuilleCalculIncertitudeDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FeuilleCalculIncertitudeRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FeuilleCalculIncertitudeRemarque).HasColumnType("text");
            entity.Property(e => e.FeuilleMesureDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FeuilleMesureRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FeuilleMesureRemarque).HasColumnType("text");
            entity.Property(e => e.FicheAnomalieTechniqueDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FicheAnomalieTechniqueRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FicheAnomalieTechniqueRemarque).HasColumnType("text");
            entity.Property(e => e.FicheReceptionDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FicheReceptionRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FicheReceptionRemarque).HasColumnType("text");
            entity.Property(e => e.OrdreMissionDate).HasColumnType("smalldatetime");
            entity.Property(e => e.OrdreMissionRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OrdreMissionRemarque).HasColumnType("text");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RapportMissionDate).HasColumnType("smalldatetime");
            entity.Property(e => e.RapportMissionRef)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RapportMissionRemarque).HasColumnType("text");
        });

        modelBuilder.Entity<API_T_Config>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Config_id");

            entity.Property(e => e.BL_BalanceClient).HasDefaultValue(true);
            entity.Property(e => e.BL_BalanceFournisseur).HasDefaultValue(true);
            entity.Property(e => e.BL_Marge).HasDefaultValue(true);
            entity.Property(e => e.BL_Releve).HasDefaultValue(true);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.EmailPassword)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmailPort)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmailReleveObjet)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EmailSenderEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmailSmtpServer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FA_BalanceClient).HasDefaultValue(true);
            entity.Property(e => e.FA_BalanceFournisseur).HasDefaultValue(true);
            entity.Property(e => e.FA_Marge).HasDefaultValue(true);
            entity.Property(e => e.FA_Releve).HasDefaultValue(true);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_Depot_User>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Depot_User_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.User)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_DocumentEntete>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_DocumentEntete_id");

            entity.Property(e => e.CAPI_T_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.JO_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.MontantHT).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.MontantTTC).HasColumnType("decimal(27, 6)");
        });

        modelBuilder.Entity<API_T_DocumentLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_DocumentLigne_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CAPI_T_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DL_CodeTaxe1)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.DL_Design)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.DL_MargePourcentage).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_MargeTotal).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_MargeU).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_MontantHT).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_MontantHTBC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_MontantTTCBC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_PUBC).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.DL_PrixBC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_PrixRevient).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_PrixUnitaire).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_QteBC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DL_QteDE).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.MargeLibre).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Superficie).HasColumnType("decimal(27, 6)");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_DocumentLigne)
                .HasForeignKey(d => d.Entete)
                .HasConstraintName("fk_API_T_documentligne");
        });

        modelBuilder.Entity<API_T_DroitConstate>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_DroitConstate_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DatePaiement).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PaiementP).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_DroitConstate)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_droitconstate");
        });

        modelBuilder.Entity<API_T_FC_Charges>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FC_Charges_id");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.MontantMensuel).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qté).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.API_T_FC_Charges)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("fk_api_t_fc_charges_f_comptet");
        });

        modelBuilder.Entity<API_T_FC_MasseSalariale>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FC_MasseSalariale_id");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Charges).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Effectif).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Libelle)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SalaireNet).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.API_T_FC_MasseSalariale)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("fk_api_t_fc_massesalariale");

            entity.HasOne(d => d.FonctionNavigation).WithMany(p => p.API_T_FC_MasseSalariale)
                .HasForeignKey(d => d.Fonction)
                .HasConstraintName("fk_api_t_fc_massesalariale_2");
        });

        modelBuilder.Entity<API_T_FC_Repas>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FC_Repas_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.API_T_FC_Repas)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("fk_api_t_fc_repas_f_article_3");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.API_T_FC_Repas)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("fk_api_t_fc_repas_f_comptet_2");

            entity.HasOne(d => d.LigneNavigation).WithMany(p => p.API_T_FC_Repas)
                .HasForeignKey(d => d.Ligne)
                .HasConstraintName("fk_api_t_fc_repas_f_artclient");
        });

        modelBuilder.Entity<API_T_FC_RepasCompose>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FC_RepasCompose_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.Designation)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.API_T_FC_RepasCompose)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("fk_api_t_fc_repascompose_3");

            entity.HasOne(d => d.RepasNavigation).WithMany(p => p.API_T_FC_RepasCompose)
                .HasForeignKey(d => d.Repas)
                .HasConstraintName("fk_api_t_fc_repascompose_2");

            entity.HasOne(d => d.TypeNavigation).WithMany(p => p.API_T_FC_RepasCompose)
                .HasForeignKey(d => d.Type)
                .HasConstraintName("fk_api_t_fc_repascompose");
        });

        modelBuilder.Entity<API_T_FC_RepasComposeDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FC_RepasComposeDetail_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.Designation)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.Frequence).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Grammage).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Total).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.ComposeNavigation).WithMany(p => p.API_T_FC_RepasComposeDetail)
                .HasForeignKey(d => d.Compose)
                .HasConstraintName("fk_api_t_fc_repascomposedetail");
        });

        modelBuilder.Entity<API_T_FraisEntete>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FraisEntete_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_FraisLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_FraisLigne_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.EnteteNavigation).WithMany(p => p.API_T_FraisLigne)
                .HasForeignKey(d => d.Entete)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_fraisligne");
        });

        modelBuilder.Entity<API_T_HistoriqueConnexion>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_T_HistoriqueConnexion_id");

            entity.Property(e => e.AdressIP)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CB_Type)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Computer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateOP).HasColumnType("datetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.SessionWindows)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TypeOP)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Utilisateur)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_HistoriquePiece>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_HistoriquePiece_id");

            entity.Property(e => e.CreatedAt).HasColumnType("smalldatetime");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Tab)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_ImportLog>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_ImportLog_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.TableName)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_Information>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Information_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Valeur)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_Materiel>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Materiel_id");

            entity.Property(e => e.BDG)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CarteGriseDebut).HasColumnType("datetime");
            entity.Property(e => e.CarteGriseFin).HasColumnType("datetime");
            entity.Property(e => e.Chassis)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consommation)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DMC)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DR)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DateAchat).HasColumnType("datetime");
            entity.Property(e => e.DateLocation).HasColumnType("datetime");
            entity.Property(e => e.Fournisseur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.INC)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Immatricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ImmatriculeWW)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MarqueVH)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Modele)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.NumeroContrat)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PTA)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Puissance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RC)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TIERCE)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TypeMoteur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TypeVH)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Usage)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.VOL)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ValeurAchat).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurGlage).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurLeasing).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.ValeurLocation).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.ValeurNeuf).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurPTA).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurVenale).HasColumnType("decimal(27, 6)");
        });

        modelBuilder.Entity<API_T_MaterielEntretien>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_MaterielEntretien_id");

            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.DatePaiement).HasColumnType("smalldatetime");
            entity.Property(e => e.DateSuivante).HasColumnType("smalldatetime");
            entity.Property(e => e.DateValidite).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.Fournisseur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Kilometrage).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.KilometrageSuivant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroQuittance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_MaterielEntretienDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_MaterielEntretienDetail_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.EntretienNavigation).WithMany(p => p.API_T_MaterielEntretienDetail)
                .HasForeignKey(d => d.Entretien)
                .HasConstraintName("fk_api_t_materielentretiendetail");
        });

        modelBuilder.Entity<API_T_Nantissement>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Nantissement_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_Nantissement)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_nantissement");
        });

        modelBuilder.Entity<API_T_OrdreFabrication>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_OrdreFabrication_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateLivraison).HasColumnType("smalldatetime");
            entity.Property(e => e.NumCommande)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.NumPreparationCommande)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Numero)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.CA_NumNavigation).WithMany(p => p.API_T_OrdreFabrication)
                .HasPrincipalKey(p => p.CA_Num)
                .HasForeignKey(d => d.CA_Num)
                .HasConstraintName("fk_api_t_ordrefabrication");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.API_T_OrdreFabrication)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("fk_api_t_ordrefabrication_2");

            entity.HasOne(d => d.ResponsableNavigation).WithMany(p => p.API_T_OrdreFabrication)
                .HasForeignKey(d => d.Responsable)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("fk_api_t_ordrefabrication_3");
        });

        modelBuilder.Entity<API_T_OrdreFabricationDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_OrdreFabricationDetail_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.FraisU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumDA)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.API_T_OrdreFabricationDetail)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("fk_api_t_ordrefabricationdetail_2");

            entity.HasOne(d => d.LigneNavigation).WithMany(p => p.API_T_OrdreFabricationDetail)
                .HasForeignKey(d => d.Ligne)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_ordrefabricationdetail");
        });

        modelBuilder.Entity<API_T_OrdreFabricationLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_OrderFabricationLigne_id");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.FraisU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Qte).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.API_T_OrdreFabricationLigne)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("fk_api_t_ordrefabricationligne");

            entity.HasOne(d => d.OrdreNavigation).WithMany(p => p.API_T_OrdreFabricationLigne)
                .HasForeignKey(d => d.Ordre)
                .HasConstraintName("fk_api_t_orderfabricationligne");
        });

        modelBuilder.Entity<API_T_OrdreFabricationOperation>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_OrdreFabricationOperation_id");

            entity.HasOne(d => d.LigneNavigation).WithMany(p => p.API_T_OrdreFabricationOperation)
                .HasForeignKey(d => d.Ligne)
                .HasConstraintName("fk_api_t_ordrefabricationoperation");
        });

        modelBuilder.Entity<API_T_OrdreFabricationPointage>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_OrdreFabricationPointage_id");

            entity.Property(e => e.AutresFrais).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.FraisJournalier).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.OrdreNavigation).WithMany(p => p.API_T_OrdreFabricationPointage)
                .HasForeignKey(d => d.Ordre)
                .HasConstraintName("fk_api_t_ordrefabricationpointage");

            entity.HasOne(d => d.PresonnelNavigation).WithMany(p => p.API_T_OrdreFabricationPointage)
                .HasForeignKey(d => d.Presonnel)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_ordrefabricationpointage_3");
        });

        modelBuilder.Entity<API_T_Personnel>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Personnel_id");

            entity.Property(e => e.AMO).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Activite)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Adresse)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Anc).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Banque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.BanqueID)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CIMR)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CIN)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CMR).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.CNSS).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.CleID)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CompteID)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateEmbauche).HasColumnType("smalldatetime");
            entity.Property(e => e.DateEmbouche).HasColumnType("smalldatetime");
            entity.Property(e => e.DateNaissance).HasColumnType("smalldatetime");
            entity.Property(e => e.DateSortie).HasColumnType("smalldatetime");
            entity.Property(e => e.Diplome)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ExpirationCIN).HasColumnType("smalldatetime");
            entity.Property(e => e.FonctionIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.GuichetID)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.IR).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.LieuNaissance)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Matricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Nom)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumCNSS)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PermisDateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.PermisDateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.PermisNum)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PermisType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Prenom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RIB)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RefContrat)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SalaireBase).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.SalaireBaseHoraire).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SalaireBaseJournalier).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SalaireBaseMensuel).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SalaireNet).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TauxAnc).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TauxRepos).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelephoneAutre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelephonePerso)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelephonePro)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_PersonnelEquipe>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PersonnelEquipe_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_PersonnelMateriel>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PersonnelMateriel_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_Pointage>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Pointage_id");

            entity.Property(e => e.Annee).HasDefaultValue(0);
            entity.Property(e => e.Cloture).HasDefaultValue(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Mois).HasDefaultValue(0);
            entity.Property(e => e.Type).HasDefaultValue(0);
        });

        modelBuilder.Entity<API_T_PointageAnnee>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PointageAnnee_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
        });

        modelBuilder.Entity<API_T_PointageDetail>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PointageDetail_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrHeure).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.JourneeNavigation).WithMany(p => p.API_T_PointageDetail)
                .HasForeignKey(d => d.Journee)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointagedetail_jr");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_PointageDetail)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointagedetail");
        });

        modelBuilder.Entity<API_T_PointageJournee>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PointageJournee_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.Annee).WithMany(p => p.API_T_PointageJournee)
                .HasForeignKey(d => d.AnneeID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointagejournee");

            entity.HasOne(d => d.Mois).WithMany(p => p.API_T_PointageJournee)
                .HasForeignKey(d => d.MoisID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointagejournee_mois");
        });

        modelBuilder.Entity<API_T_PointageLigne>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PointageLigne_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.NbrHeure).HasColumnType("decimal(24, 6)");

            entity.HasOne(d => d.PointageNavigation).WithMany(p => p.API_T_PointageLigne)
                .HasForeignKey(d => d.Pointage)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointageligne");
        });

        modelBuilder.Entity<API_T_PointageMois>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PointageMois_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Description)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.Annee).WithMany(p => p.API_T_PointageMois)
                .HasForeignKey(d => d.AnneeID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointagemois");
        });

        modelBuilder.Entity<API_T_PointageProjet>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PointageProjet_id");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.JourneeNavigation).WithMany(p => p.API_T_PointageProjet)
                .HasForeignKey(d => d.Journee)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_pointageprojet");
        });

        modelBuilder.Entity<API_T_Projet>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_ProjeAPI_T_id");

            entity.Property(e => e.CA_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoutMarchePrevisionnel).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateEnregistrement).HasColumnType("datetime");
            entity.Property(e => e.DateEnregistrementCPS).HasColumnType("datetime");
            entity.Property(e => e.DateEnregistrementExemplaire).HasColumnType("datetime");
            entity.Property(e => e.DateExemplaireUnique).HasColumnType("datetime");
            entity.Property(e => e.DateOrdreNotification).HasColumnType("datetime");
            entity.Property(e => e.DateOrdreService).HasColumnType("datetime");
            entity.Property(e => e.DateOuverturePils).HasColumnType("datetime");
            entity.Property(e => e.DatePublication).HasColumnType("datetime");
            entity.Property(e => e.DateReceptionDefinitiveEffective).HasColumnType("datetime");
            entity.Property(e => e.DateReceptionDefinitivePrevue).HasColumnType("datetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.MontantAppelOffreEstime).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantRetenueGarantie).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.NumeroAppelOffre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.ObjetDetail).HasColumnType("text");
            entity.Property(e => e.PeriodeExecutionDetail).HasColumnType("text");
            entity.Property(e => e.PeriodeExecutionResume)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Resultat).HasDefaultValue(false);
            entity.Property(e => e.ResultatMarchePV).HasColumnType("text");
            entity.Property(e => e.TauxRetenueGarantie).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TauxRetenueGarantieDecompte).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TotalMarcheHT).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TotalMarcheTTC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Utilisateur)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_ProjetAvenant>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_ProjetAvenanAPI_T_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateAvenant).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.MontantAvenant).HasColumnType("decimal(27, 6)");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_ProjetAvenant)
                .HasForeignKey(d => d.Projet)
                .HasConstraintName("fk_API_T_projetavenanAPI_T_API_T_projet");
        });

        modelBuilder.Entity<API_T_ProjetDate>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_ProjetDates_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateArret).HasColumnType("smalldatetime");
            entity.Property(e => e.DateReprise).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Motif).HasColumnType("text");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_ProjetDate)
                .HasForeignKey(d => d.Projet)
                .HasConstraintName("fk_API_T_projetdates_API_T_projet");
        });

        modelBuilder.Entity<API_T_ProjetPlanningDecompte>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_PlanningDecompte_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DatePrevue).HasColumnType("smalldatetime");
            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_ProjetPlanningDecompte)
                .HasForeignKey(d => d.Projet)
                .HasConstraintName("fk_API_T_planningdecompte_API_T_projet");
        });

        modelBuilder.Entity<API_T_ProjetReception>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_ProjetReception_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DateReception).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Nature).HasColumnType("text");

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_ProjetReception)
                .HasForeignKey(d => d.Projet)
                .HasConstraintName("fk_API_T_projetreception_API_T_projet");
        });

        modelBuilder.Entity<API_T_Remarque>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_T_Table_id_0");

            entity.Property(e => e.CAPI_T_Num)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateAlerte).HasColumnType("smalldatetime");
            entity.Property(e => e.Etape)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Remarque)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Utilisateur)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_RevisionPrix>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_RevisionPrix_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.ProjetNavigation).WithMany(p => p.API_T_RevisionPrix)
                .HasForeignKey(d => d.Projet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_revisionprix");
        });

        modelBuilder.Entity<API_T_Site>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Site_id");

            entity.Property(e => e.Adresse)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Intitule)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Ville)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_Site_User>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Site_User_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.User)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_T_TaxeTonnage>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_TaxeTonnage_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.DatePaiement).HasColumnType("smalldatetime");
            entity.Property(e => e.DateValidite).HasColumnType("smalldatetime");
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);

            entity.HasOne(d => d.MaterielNavigation).WithMany(p => p.API_T_TaxeTonnage)
                .HasForeignKey(d => d.Materiel)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_api_t_taxetonnage");
        });

        modelBuilder.Entity<API_T_Ville>(entity =>
        {
            entity.HasKey(e => e.id).HasName("Pk_API_T_Ville_id");

            entity.Property(e => e.Creation).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreationHost).HasMaxLength(255);
            entity.Property(e => e.CreationIP).HasMaxLength(45);
            entity.Property(e => e.CreationUser).HasMaxLength(255);
            entity.Property(e => e.Intitule)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModificationHost).HasMaxLength(255);
            entity.Property(e => e.ModificationIP).HasMaxLength(45);
            entity.Property(e => e.ModificationUser).HasMaxLength(255);
            entity.Property(e => e.Region)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_ACHAT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ACHAT");

            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.Annee).HasMaxLength(4000);
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .IsRequired()
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTVA).HasColumnType("numeric(25, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Mois).HasMaxLength(4000);
            entity.Property(e => e.MoisAnnee).HasMaxLength(4000);
            entity.Property(e => e.PU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PUNet).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.Remise1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Remise2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Remise3).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<API_V_AFFAIRE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AFFAIRE");

            entity.Property(e => e.Avancement).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CABL).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CADE).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CA_Achat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CA_DateAcceptAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_DateCreationAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_DateDebutAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_DateFinAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CA_Vente).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EcartCA).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.ResteCA).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_AFFAIREAVANCEMENT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AFFAIREAVANCEMENT");

            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.Avancement).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.BC).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.BL).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CABL).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CADE).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DE).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.EcartCA).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.EcartQte).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.PL).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.ResteCA).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.ResteQte).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.Unite)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_AGENCEBOOKING>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AGENCEBOOKING");

            entity.Property(e => e.ArrivalDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.ArrivalDateStart).HasColumnType("smalldatetime");
            entity.Property(e => e.ClientIntitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.FournisseurIntitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.NbrPax).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrPaxAdult).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrPaxChild).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrPaxInfant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PUDevise).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SellingDateEnd).HasColumnType("smalldatetime");
            entity.Property(e => e.SellingDateStart).HasColumnType("smalldatetime");
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");
        });

        modelBuilder.Entity<API_V_AGENCECONTRAT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AGENCECONTRAT");

            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.D_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.DateDebut).HasColumnType("datetime");
            entity.Property(e => e.DateFin).HasColumnType("datetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RemiseChild).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.RemiseInfant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Taux).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Tax).HasColumnType("decimal(24, 6)");
        });

        modelBuilder.Entity<API_V_ARTCLIENT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ARTCLIENT");

            entity.Property(e => e.AC_Coef).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_CoefNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixDevNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixVen).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixVenNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AC_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_RemiseNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CategorieTarif)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_ARTCOMPTA>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ARTCOMPTA");

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CompteG)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.Domaine)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Taux1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Taux2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Taux3).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<API_V_ARTFOURNISS>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ARTFOURNISS");

            entity.Property(e => e.AF_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_Colisage).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_ConvDiv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_Conversion).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_DateApplication).HasColumnType("smalldatetime");
            entity.Property(e => e.AF_PrixAch).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_PrixAchNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_PrixDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_PrixDevNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_QteMini).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_RemiseNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_ARTICLE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ARTICLE");

            entity.Property(e => e.AR_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_CodeFiscal)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.AR_Coef).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_CoefNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_EdiCode)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais01FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais02FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais03FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Langue1)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_Langue2)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AR_Photo)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.AR_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixAch).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixAchNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixVen).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixVenNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_QteComp).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_QteOperatoire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Substitut)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AS_MontSto).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.AS_QteCom).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.AS_QteMaxi).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.AS_QteMini).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.AS_QtePrepa).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.AS_QteRes).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.AS_QteSto).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CL_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CL_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateBL_Achat).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBL_Vente).HasColumnType("datetime");
            entity.Property(e => e.DL_Dernier_MontantHT_Achat).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_Dernier_MontantHT_Vente).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_Dernier_MontantTTC_Achat).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_Dernier_MontantTTC_Vente).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_Dernier_Qte_Achat).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_Dernier_Qte_Vente).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantHT_Achat).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantHT_Vente).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantTTC_Achat).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantTTC_Vente).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_PU_Achat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PU_Vente).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Qte_Achat).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_Qte_Vente).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.EC_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EtatStock)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.EtatStockMin)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.FR_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.FR_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.QteCD).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.RP_CodeDefaut)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.SommeilIntitule)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.SuiviStockIntitule)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.U_Intitule)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_ARTICLEMVT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ARTICLEMVT");

            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixAch).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateBL).HasColumnType("datetime");
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PieceBL)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DomaineIntitule)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Mvt).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Sense)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.TiersIntitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TypeIntitule)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.U_Intitule)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_ARTICLESTOCK>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ARTICLESTOCK");

            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AS_MontSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteCom).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteMaxi).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteMini).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QtePrepa).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteRes).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DE_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_ATTACHEMENT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ATTACHEMENT");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDecompte).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantCumul).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantReste).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantTTC).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroAppelOffre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDecompte)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SiteIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TauxRabais).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.VilleIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_AUDIT_F_COMPTET>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AUDIT_F_COMPTET");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumPrinc)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Adresse)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ape)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Classement)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodePostal)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodeRegion)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Coface)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Commentaire)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Complement)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Contact)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCode)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCodeSage)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Identifiant)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_LangueISO2)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Pays)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Qualite)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Raccourci)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentInt)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentNIF)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CT_Siret)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Site)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique06)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique07)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique08)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique09)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique10)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_SvCotation)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvEffectif)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvFormeJuri)
                .HasMaxLength(33)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvObjetMaj)
                .HasMaxLength(61)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvRegul)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.Controle)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.SommeilIntitule)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
            entity.Property(e => e.id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<API_V_AUDIT_F_CREGLEMENT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AUDIT_F_CREGLEMENT");

            entity.Property(e => e.Annee).HasMaxLength(4000);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Type)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Credit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Debit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Echeance)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.JO_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.Mois).HasMaxLength(4000);
            entity.Property(e => e.MoisAnnee).HasMaxLength(4000);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RG_Date).HasColumnType("datetime");
            entity.Property(e => e.RG_DateEcheance).HasMaxLength(4000);
            entity.Property(e => e.RG_Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RG_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RG_Reference)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.R_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_AUDIT_F_DOCENTETE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AUDIT_F_DOCENTETE");

            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord01)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord02)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord03)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord04)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_FactureFrs)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DO_Motif)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DO_NoWeb)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_PieceOrig)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Tiers)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DomaineIntitule)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TF_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
            entity.Property(e => e.TypeIntitule)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_AUDIT_F_DOCLIGNE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AUDIT_F_DOCLIGNE");

            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBC).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBL).HasColumnType("datetime");
            entity.Property(e => e.DL_DatePL).HasColumnType("datetime");
            entity.Property(e => e.DL_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_NoColis)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PieceBC)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PieceBL)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PiecePL)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DomaineIntitule)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.MontantTVA).HasColumnType("numeric(25, 6)");
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PUNet).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.PUTTC).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.QteMvt).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
            entity.Property(e => e.TypeIntitule)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_AUDIT_F_ECRITUREC>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_AUDIT_F_ECRITUREC");

            entity.Property(e => e.CG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCont)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Credit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Debit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Date).HasColumnType("datetime");
            entity.Property(e => e.EC_DateCloture).HasColumnType("datetime");
            entity.Property(e => e.EC_DateOp).HasColumnType("datetime");
            entity.Property(e => e.EC_DatePenal).HasColumnType("datetime");
            entity.Property(e => e.EC_DateRappro).HasColumnType("datetime");
            entity.Property(e => e.EC_DateRegle).HasColumnType("datetime");
            entity.Property(e => e.EC_DateRelance).HasColumnType("datetime");
            entity.Property(e => e.EC_Devise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Echeance).HasColumnType("datetime");
            entity.Property(e => e.EC_Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EC_Lettrage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_LettrageQ)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_MontantRegle).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Parite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Piece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EC_Pointage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_RefPiece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EC_Reference)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EC_TresoPiece)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Host_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.JM_Date).HasColumnType("datetime");
            entity.Property(e => e.JO_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.MV_Date).HasColumnType("datetime");
            entity.Property(e => e.Operation)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Sage_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Suser_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_BALANCEAGEECLIENT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_BALANCEAGEECLIENT");

            entity.Property(e => e.AN).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Encours).HasColumnType("numeric(38, 6)");
            entity.Property(e => e._120J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("120J");
            entity.Property(e => e._150J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("150J");
            entity.Property(e => e._30J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("30J");
            entity.Property(e => e._60J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("60J");
            entity.Property(e => e._90J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("90J");
        });

        modelBuilder.Entity<API_V_BALANCEAGEEFOURNISSEUR>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_BALANCEAGEEFOURNISSEUR");

            entity.Property(e => e.AN).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Encours).HasColumnType("numeric(38, 6)");
            entity.Property(e => e._120J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("120J");
            entity.Property(e => e._150J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("150J");
            entity.Property(e => e._30J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("30J");
            entity.Property(e => e._60J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("60J");
            entity.Property(e => e._90J)
                .HasColumnType("numeric(38, 6)")
                .HasColumnName("90J");
        });

        modelBuilder.Entity<API_V_BORDEREAU>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_BORDEREAU");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CoutTotale).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Marge).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MargeP).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantMarche).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantTTC).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroAppelOffre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Rabais).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SiteIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.VilleIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_CAISSEENTETE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_CAISSEENTETE");

            entity.Property(e => e.AffectationIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CIN)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumProjet)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateNaissance).HasColumnType("smalldatetime");
            entity.Property(e => e.Immatricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.MaterielIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Matricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantLettre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Numero)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.PersonnelIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Reference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Remarque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_CBSESSION>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_CBSESSION");

            entity.Property(e => e.App)
                .IsRequired()
                .HasMaxLength(18)
                .IsUnicode(false);
            entity.Property(e => e.CB_Creator)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CB_Type)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.cbUserName).HasMaxLength(128);
        });

        modelBuilder.Entity<API_V_CERTIFENTETE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_CERTIFENTETE");

            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateLivraison).HasColumnType("smalldatetime");
            entity.Property(e => e.FactureDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FactureNum)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroRapportMission)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.S_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Statut)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_COLLABORATEUR>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_COLLABORATEUR");

            entity.Property(e => e.CO_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CO_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CO_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CO_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Matricule)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Service)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.MontantFrais).HasColumnType("decimal(38, 6)");
            entity.Property(e => e.MontantTTC).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCO_Fonction).HasMaxLength(36);
            entity.Property(e => e.cbCO_Matricule).HasMaxLength(12);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_COMPTET>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_COMPTET");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumPrinc)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ape)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Coface)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Commentaire)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCode)
                .HasMaxLength(23)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCodeSage)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Identifiant)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_LangueISO2)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Qualite)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentInt)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentNIF)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Siret)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.CT_Site)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique06)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique07)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique08)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique09)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique10)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_SvCotation)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvEffectif)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvFormeJuri)
                .HasMaxLength(33)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvObjetMaj)
                .HasMaxLength(61)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvRegul)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Collaborateur)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.Controle)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateBL).HasColumnType("datetime");
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.D_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.EtatSolde)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.RG_Montant).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.SoldeCommercial).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.SoldeComptable).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.SommeilIntitule)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_CREGLEMENT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_CREGLEMENT");

            entity.Property(e => e.Annee).HasMaxLength(4000);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Type)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Credit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DateDepot).HasColumnType("smalldatetime");
            entity.Property(e => e.DateEcheance).HasColumnType("datetime");
            entity.Property(e => e.DatePaie).HasColumnType("smalldatetime");
            entity.Property(e => e.Debit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Echeance)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.EtatLettrage)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.EtatReglement)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.JO_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.M01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M07).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M08).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M09).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M10).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M11).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.M12).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Mois).HasMaxLength(4000);
            entity.Property(e => e.MoisAnnee).HasMaxLength(4000);
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RG_Date).HasColumnType("datetime");
            entity.Property(e => e.RG_DateEcheance).HasMaxLength(4000);
            entity.Property(e => e.RG_Libelle)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RG_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.RG_Reference)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.R_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Remarque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_DOCENTETE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_DOCENTETE");

            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DL_MontantTVA).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DO_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord01)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord02)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord03)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord04)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_FactureFrs)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DO_Motif)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DO_NetAPayer).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DO_NoWeb)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DO_PieceOrig)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Tiers)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_TotalHTNet).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DO_TotalTTC).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DateEcheance).HasColumnType("datetime");
            entity.Property(e => e.DomaineIntitule)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Echeance)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.EtatReglement)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RC_Montant).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.Reste).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.TF_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TypeIntitule)
                .IsRequired()
                .HasMaxLength(65)
                .IsUnicode(false);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_DOCLIGNE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_DOCLIGNE");

            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBC).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBL).HasColumnType("datetime");
            entity.Property(e => e.DL_DatePL).HasColumnType("datetime");
            entity.Property(e => e.DL_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_NoColis)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PieceBC)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_PieceBL)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_PiecePL)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DomaineIntitule)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.MontantTVA).HasColumnType("numeric(25, 6)");
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PUNet).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.PUTTC).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.QteMvt).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TypeIntitule)
                .IsRequired()
                .HasMaxLength(65)
                .IsUnicode(false);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");
        });

        modelBuilder.Entity<API_V_ECRITUREC>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_ECRITUREC");

            entity.Property(e => e.CG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCont)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Credit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Debit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateOp).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DatePenal).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateRappro).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateRegle).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateRelance).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_Devise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Echeance).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.EC_Lettrage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_LettrageQ)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_MontantRegle).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Parite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EC_Pointage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_RefPiece)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.EC_Reference)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.EC_TresoPiece)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.JM_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.JO_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.MV_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.PROT_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.cbCreation).HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<API_V_FRAISENTETE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_FRAISENTETE");

            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_HISTORIQUECONNEXION>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_HISTORIQUECONNEXION");

            entity.Property(e => e.AdressIP)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.App)
                .IsRequired()
                .HasMaxLength(18)
                .IsUnicode(false);
            entity.Property(e => e.CB_Type)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Computer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DateOP).HasColumnType("datetime");
            entity.Property(e => e.SessionWindows)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TypeOP)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Utilisateur)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_MARGE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_MARGE");

            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.Annee).HasMaxLength(4000);
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CMUP).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CMUPCoutTotal).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CMUPMarge).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CMUPMargeP).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CO_Nom)
                .IsRequired()
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTVA).HasColumnType("numeric(25, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DPCoutTotal).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DPMarge).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DPMargeP).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DernierPUAchat).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.FA_CodeFamille)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Mois).HasMaxLength(4000);
            entity.Property(e => e.MoisAnnee).HasMaxLength(4000);
            entity.Property(e => e.PACoutTotal).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.PAMarge).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.PAMargeP).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.PU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PUAchat).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.PUNet).HasColumnType("numeric(38, 14)");
            entity.Property(e => e.Remise1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Remise2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Remise3).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<API_V_MATERIEL>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_MATERIEL");

            entity.Property(e => e.BDG)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CarburantIntitule)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CarteGriseDebut).HasColumnType("datetime");
            entity.Property(e => e.CarteGriseFin).HasColumnType("datetime");
            entity.Property(e => e.Chassis)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Consommation).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DMC)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DR)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DateAchat).HasColumnType("datetime");
            entity.Property(e => e.DateLocation).HasColumnType("datetime");
            entity.Property(e => e.Fournisseur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.INC)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Immatricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ImmatriculeWW)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MarqueIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MarqueVH)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Modele)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Nom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroContrat)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PTA)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PermisDateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.PermisDateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.PermisNum)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PermisType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Puissance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RC)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TIERCE)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TypeAchatIntitule)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.TypeIntitule)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.TypeMoteur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TypeVH)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Usage)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.VOL)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ValeurAchat).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurGlage).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurLeasing).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.ValeurLocation).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.ValeurNeuf).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurPTA).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.ValeurVenale).HasColumnType("decimal(27, 6)");
        });

        modelBuilder.Entity<API_V_MATERIELENTRETIEN>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_MATERIELENTRETIEN");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.DatePaiement).HasColumnType("smalldatetime");
            entity.Property(e => e.DateSuivante).HasColumnType("smalldatetime");
            entity.Property(e => e.DateValidite).HasColumnType("smalldatetime");
            entity.Property(e => e.Fichier).HasColumnType("text");
            entity.Property(e => e.Fournisseur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Immatricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Intitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Kilometrage).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.KilometrageSuivant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Libelle).HasColumnType("text");
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.Nom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroQuittance)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.Piece)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Qte).HasColumnType("decimal(38, 6)");
        });

        modelBuilder.Entity<API_V_PERSONNEL>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_PERSONNEL");

            entity.Property(e => e.AMO).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Activite)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Adresse)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.AgenceIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Anc).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Banque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.BanqueID)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CIMR)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CIN)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CMR).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.CNSS).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.CleID)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CompteID)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.ContratIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DateEmbauche).HasColumnType("smalldatetime");
            entity.Property(e => e.DateEmbouche).HasColumnType("smalldatetime");
            entity.Property(e => e.DateNaissance).HasColumnType("smalldatetime");
            entity.Property(e => e.DateSortie).HasColumnType("smalldatetime");
            entity.Property(e => e.DepartementIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Diplome)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ExpirationCIN).HasColumnType("smalldatetime");
            entity.Property(e => e.FonctionIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.GuichetID)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.IR).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Intitule)
                .HasMaxLength(201)
                .IsUnicode(false);
            entity.Property(e => e.LieuNaissance)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Matricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModePaiementIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NationaliteIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Nom)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumCNSS)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PermisDateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.PermisDateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.PermisNum)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PermisType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Prenom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RIB)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RefContrat)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SalaireBase).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.SalaireBaseHoraire).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SalaireBaseJournalier).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SalaireBaseMensuel).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.SalaireNet).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.SituationFamilialeIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TauxAnc).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TauxRepos).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelephoneAutre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelephonePerso)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelephonePro)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ZoneIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_POINTAGEDETAIL>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_POINTAGEDETAIL");

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CIN)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DateNaissance).HasColumnType("smalldatetime");
            entity.Property(e => e.Immatricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MaterielIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Matricule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Montant).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NbrHeure).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.PU).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.PersonnelIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ResponsableIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_PROJET>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_PROJET");

            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoutMarchePrevisionnel).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.DateEnregistrement).HasColumnType("datetime");
            entity.Property(e => e.DateEnregistrementCPS).HasColumnType("datetime");
            entity.Property(e => e.DateEnregistrementExemplaire).HasColumnType("datetime");
            entity.Property(e => e.DateExemplaireUnique).HasColumnType("datetime");
            entity.Property(e => e.DateOrdreNotification).HasColumnType("datetime");
            entity.Property(e => e.DateOrdreService).HasColumnType("datetime");
            entity.Property(e => e.DateOuverturePils).HasColumnType("datetime");
            entity.Property(e => e.DatePublication).HasColumnType("datetime");
            entity.Property(e => e.DateReceptionDefinitiveEffective).HasColumnType("datetime");
            entity.Property(e => e.DateReceptionDefinitivePrevue).HasColumnType("datetime");
            entity.Property(e => e.ModeSoumissionIntitule)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.MontantAppelOffreEstime).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.MontantRetenueGarantie).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.NumeroAppelOffre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroMarche)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objet).HasColumnType("text");
            entity.Property(e => e.ObjetDetail).HasColumnType("text");
            entity.Property(e => e.PeriodeExecutionDetail).HasColumnType("text");
            entity.Property(e => e.PeriodeExecutionResume)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PhaseMarcheIntitule)
                .HasMaxLength(26)
                .IsUnicode(false);
            entity.Property(e => e.ResultatMarcheIntitule)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ResultatMarchePV).HasColumnType("text");
            entity.Property(e => e.SituationMarcheIntitule)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.TauxRetenueGarantie).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TauxRetenueGarantieDecompte).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TotalMarcheHT).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TotalMarcheTTC).HasColumnType("decimal(27, 6)");
            entity.Property(e => e.TypeAppelOffreIntitule)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.TypeMarcheIntitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Utilisateur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.VilleIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ZoneIntitule)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_REGLECH>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_REGLECH");

            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.RC_Montant).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<API_V_REGLEMENTT>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_REGLEMENTT");

            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.RT_VRepart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<API_V_RELEVE>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("API_V_RELEVE");

            entity.Property(e => e.BL).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.CT_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Credit).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.DE_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_Echeance).HasColumnType("datetime");
            entity.Property(e => e.DO_Libelle)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DateEcheance).HasColumnType("datetime");
            entity.Property(e => e.Debit).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.EtatLettrage)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.EtatReglement)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.Groupe)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.MontantRegle).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.MontantTTC).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.RG_Montant).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Repre)
                .HasMaxLength(71)
                .IsUnicode(false);
            entity.Property(e => e.Reste).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.Solde).HasColumnType("numeric(38, 6)");
            entity.Property(e => e.TypeIntitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TypeTiers)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
        });

        modelBuilder.Entity<F_ABOENTETE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABOENTETE");

            entity.HasIndex(e => e.AB_No, "UKA_F_ABOENTETE_AB_No").IsUnique();

            entity.Property(e => e.AE_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AE_Coord01)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.AE_Coord02)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.AE_Coord03)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.AE_Coord04)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.AE_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AE_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.AE_TxEscompte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_Num],'')))", false);
            entity.Property(e => e.cbCT_NumCentrale)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumCentrale],'')))", false);
            entity.Property(e => e.cbCT_NumPayeur)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeur],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AB_NoNavigation).WithOne(p => p.F_ABOENTETE)
                .HasPrincipalKey<F_ABONNEMENT>(p => p.AB_No)
                .HasForeignKey<F_ABOENTETE>(d => d.AB_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOENTETE_AB_No");

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_ABOENTETE)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .HasConstraintName("FKA_CPTAF_ABOENTETE_CG_Num");

            entity.HasOne(d => d.CT_NumCentraleNavigation).WithMany(p => p.F_ABOENTETECT_NumCentraleNavigation)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_NumCentrale)
                .HasConstraintName("FKA_CPTAF_ABOENTETE_CT_NumCentrale");

            entity.HasOne(d => d.CT_NumPayeurNavigation).WithMany(p => p.F_ABOENTETECT_NumPayeurNavigation)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_NumPayeur)
                .HasConstraintName("FKA_CPTAF_ABOENTETE_CT_NumPayeur");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_ABOENTETE)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOENTETE_DE_No");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_ABOENTETE)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_ABOENTETE_CO_No");

            entity.HasOne(d => d.cbLI_NoNavigation).WithMany(p => p.F_ABOENTETE)
                .HasPrincipalKey(p => p.LI_No)
                .HasForeignKey(d => d.cbLI_No)
                .HasConstraintName("FKA_CPTAF_ABOENTETE_LI_No");
        });

        modelBuilder.Entity<F_ABOENTETEINFOS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABOENTETEINFOS");

            entity.HasIndex(e => new { e.AB_No, e.cbAI_Code }, "IAI_CODE").IsUnique();

            entity.Property(e => e.AI_Code)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.AI_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AI_Valeur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbAI_Code)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[AI_Code]))", false);
            entity.Property(e => e.cbAI_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[AI_Intitule]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AB_NoNavigation).WithMany(p => p.F_ABOENTETEINFOS)
                .HasPrincipalKey(p => p.AB_No)
                .HasForeignKey(d => d.AB_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOENTETEINFOS_AB_No");
        });

        modelBuilder.Entity<F_ABOLIGNE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABOLIGNE");

            entity.HasIndex(e => e.AL_No, "IAL_NO").IsUnique();

            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AL_CMUP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.AL_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.AL_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.AL_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.AL_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AL_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.AL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_No).IsRequired();
            entity.Property(e => e.AL_PUDevise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_PUTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_PrixRU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_PrixUnitaire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.AL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AL_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAF_RefFourniss)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AF_RefFourniss],'')))", false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Ref],'')))", false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRP_Code)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([RP_Code],'')))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AB_NoNavigation).WithMany(p => p.F_ABOLIGNE)
                .HasPrincipalKey(p => p.AB_No)
                .HasForeignKey(d => d.AB_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOLIGNE_AB_No");

            entity.HasOne(d => d.AL_CodeTaxe1Navigation).WithMany(p => p.F_ABOLIGNEAL_CodeTaxe1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.AL_CodeTaxe1)
                .HasConstraintName("FKA_CPTAF_ABOLIGNE_AL_CodeTaxe1");

            entity.HasOne(d => d.AL_CodeTaxe2Navigation).WithMany(p => p.F_ABOLIGNEAL_CodeTaxe2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.AL_CodeTaxe2)
                .HasConstraintName("FKA_CPTAF_ABOLIGNE_AL_CodeTaxe2");

            entity.HasOne(d => d.AL_CodeTaxe3Navigation).WithMany(p => p.F_ABOLIGNEAL_CodeTaxe3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.AL_CodeTaxe3)
                .HasConstraintName("FKA_CPTAF_ABOLIGNE_AL_CodeTaxe3");

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ABOLIGNE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("FKA_F_ABOLIGNE_AR_Ref");

            entity.HasOne(d => d.RP_CodeNavigation).WithMany(p => p.F_ABOLIGNE)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_Code)
                .HasConstraintName("FKA_F_ABOLIGNE_RP_Code");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_ABOLIGNE)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_ABOLIGNE_CO_No");

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_ABOLIGNE)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_ABOLIGNE_DE_No");
        });

        modelBuilder.Entity<F_ABOLIGNEINFOS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABOLIGNEINFOS");

            entity.HasIndex(e => new { e.AL_No, e.cbAC_Code }, "IAC_CODE").IsUnique();

            entity.Property(e => e.AC_Code)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.AC_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AC_Valeur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbAC_Code)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[AC_Code]))", false);
            entity.Property(e => e.cbAC_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[AC_Intitule]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AL_NoNavigation).WithMany(p => p.F_ABOLIGNEINFOS)
                .HasPrincipalKey(p => p.AL_No)
                .HasForeignKey(d => d.AL_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOLIGNEINFOS_AL_No");
        });

        modelBuilder.Entity<F_ABONNEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABONNEMENT");

            entity.HasIndex(e => e.AB_No, "IAB_NO").IsUnique();

            entity.Property(e => e.AB_Contrat)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AB_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.AB_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.AB_FinAbo).HasColumnType("smalldatetime");
            entity.Property(e => e.AB_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AB_Modele)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.AB_No).IsRequired();
            entity.Property(e => e.AB_Resiliation).HasColumnType("smalldatetime");
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbAB_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([AB_Intitule],'')))", false);
            entity.Property(e => e.cbAB_Modele)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([AB_Modele],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_ABONNEMENT)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("FKA_CPTAF_ABONNEMENT_CT_Num");
        });

        modelBuilder.Entity<F_ABOPERIODE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABOPERIODE");

            entity.Property(e => e.PE_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.PE_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.PE_Generation).HasColumnType("smalldatetime");
            entity.Property(e => e.PE_Livraison).HasColumnType("smalldatetime");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AB_NoNavigation).WithMany(p => p.F_ABOPERIODE)
                .HasPrincipalKey(p => p.AB_No)
                .HasForeignKey(d => d.AB_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOPERIODE_AB_No");
        });

        modelBuilder.Entity<F_ABOREGLEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ABOREGLEMENT");

            entity.HasIndex(e => new { e.AB_No, e.RA_NbJour, e.N_Reglement }, "IRA_NBJOUR").IsUnique();

            entity.Property(e => e.RA_VRepart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AB_NoNavigation).WithMany(p => p.F_ABOREGLEMENT)
                .HasPrincipalKey(p => p.AB_No)
                .HasForeignKey(d => d.AB_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ABOREGLEMENT_AB_No");
        });

        modelBuilder.Entity<F_AFFICHEUR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_AFFICHEUR");

            entity.Property(e => e.AF_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_AFFICHEURCAISSE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_AFFICHEURCAISSE");

            entity.Property(e => e.AC_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CA_NoNavigation).WithMany(p => p.F_AFFICHEURCAISSE)
                .HasPrincipalKey(p => p.CA_No)
                .HasForeignKey(d => d.CA_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_AFFICHEURCAISSE_CA_No");
        });

        modelBuilder.Entity<F_AGENDA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_AGENDA");

            entity.HasIndex(e => e.AD_No, "IAG_NOINT").IsUnique();

            entity.Property(e => e.AD_Evenem)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AG_Comment)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AG_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.AG_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.AG_HeureDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AG_HeureFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AG_Interes)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAG_Interes)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AG_Interes],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_AGENDA)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_AGENDA_DE_No");

            entity.HasOne(d => d.cbDL_NoNavigation).WithMany(p => p.F_AGENDA)
                .HasPrincipalKey(p => p.DL_No)
                .HasForeignKey(d => d.cbDL_No)
                .HasConstraintName("FKA_F_AGENDA_DL_No");

            entity.HasOne(d => d.cbPP_NoNavigation).WithMany(p => p.F_AGENDA)
                .HasPrincipalKey(p => p.PP_No)
                .HasForeignKey(d => d.cbPP_No)
                .HasConstraintName("FKA_F_AGENDA_PP_No");
        });

        modelBuilder.Entity<F_AGENDADET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_AGENDADET");

            entity.HasIndex(e => new { e.AD_Champ, e.cbAD_Evenem }, "IAD_EVENEM").IsUnique();

            entity.Property(e => e.AD_Evenem)
                .IsRequired()
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbAD_Evenem)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),[AD_Evenem]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_ARTCLIENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTCLIENT");

            entity.Property(e => e.AC_Coef).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_CoefNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_DateApplication).HasColumnType("smalldatetime");
            entity.Property(e => e.AC_PrixDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixDevNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixVen).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_PrixVenNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AC_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AC_RemiseNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbAC_RefClient)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AC_RefClient],'')))", false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTCLIENT)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTCLIENT_AR_Ref");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_ARTCLIENT)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("FKA_CPTAF_ARTCLIENT_CT_Num");
        });

        modelBuilder.Entity<F_ARTCOMPO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTCOMPO");

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AT_Description)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.AT_Operation)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.AT_OperationChevauche)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.AT_Temps)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AT_ValeurChevauche).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbAT_Operation)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([AT_Operation],'')))", false);
            entity.Property(e => e.cbAT_OperationChevauche)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([AT_OperationChevauche],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRP_Code)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([RP_Code],'')))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTCOMPO)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTCOMPO_AR_Ref");

            entity.HasOne(d => d.RP_CodeNavigation).WithMany(p => p.F_ARTCOMPO)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_Code)
                .HasConstraintName("FKA_F_ARTCOMPO_RP_Code");
        });

        modelBuilder.Entity<F_ARTCOMPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTCOMPTA");

            entity.HasIndex(e => new { e.cbAR_Ref, e.ACP_TypeFacture, e.ACP_Type, e.ACP_Champ }, "IACP_REF").IsUnique();

            entity.Property(e => e.ACP_ComptaCPT_CompteA)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_CompteG)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_Date1).HasColumnType("smalldatetime");
            entity.Property(e => e.ACP_ComptaCPT_Date2).HasColumnType("smalldatetime");
            entity.Property(e => e.ACP_ComptaCPT_Date3).HasColumnType("smalldatetime");
            entity.Property(e => e.ACP_ComptaCPT_Taxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_Taxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_Taxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_TaxeAnc1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_TaxeAnc2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ACP_ComptaCPT_TaxeAnc3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.ACP_ComptaCPT_CompteGNavigation).WithMany(p => p.F_ARTCOMPTA)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.ACP_ComptaCPT_CompteG)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_COMPTEG");

            entity.HasOne(d => d.ACP_ComptaCPT_Taxe1Navigation).WithMany(p => p.F_ARTCOMPTAACP_ComptaCPT_Taxe1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.ACP_ComptaCPT_Taxe1)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_Taxe1");

            entity.HasOne(d => d.ACP_ComptaCPT_Taxe2Navigation).WithMany(p => p.F_ARTCOMPTAACP_ComptaCPT_Taxe2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.ACP_ComptaCPT_Taxe2)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_Taxe2");

            entity.HasOne(d => d.ACP_ComptaCPT_Taxe3Navigation).WithMany(p => p.F_ARTCOMPTAACP_ComptaCPT_Taxe3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.ACP_ComptaCPT_Taxe3)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_Taxe3");

            entity.HasOne(d => d.ACP_ComptaCPT_TaxeAnc1Navigation).WithMany(p => p.F_ARTCOMPTAACP_ComptaCPT_TaxeAnc1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.ACP_ComptaCPT_TaxeAnc1)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_TaxeAnc1");

            entity.HasOne(d => d.ACP_ComptaCPT_TaxeAnc2Navigation).WithMany(p => p.F_ARTCOMPTAACP_ComptaCPT_TaxeAnc2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.ACP_ComptaCPT_TaxeAnc2)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_TaxeAnc2");

            entity.HasOne(d => d.ACP_ComptaCPT_TaxeAnc3Navigation).WithMany(p => p.F_ARTCOMPTAACP_ComptaCPT_TaxeAnc3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.ACP_ComptaCPT_TaxeAnc3)
                .HasConstraintName("FKA_CPTAF_ARTCOMPTA_ACP_C_TaxeAnc3");

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTCOMPTA)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTCOMPTA_AR_Ref");
        });

        modelBuilder.Entity<F_ARTENUMREF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTENUMREF");

            entity.HasIndex(e => new { e.AR_Ref, e.AG_No1, e.AG_No2 }, "UKA_F_ARTENUMREF_AE_REFGAM").IsUnique();

            entity.Property(e => e.AE_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AE_EdiCode)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.AE_PrixAch).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AE_PrixAchNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AE_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAE_CodeBarre)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AE_CodeBarre],'')))", false);
            entity.Property(e => e.cbAE_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AE_Ref],'')))", false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTENUMREF)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTENUMREF_AR_Ref");
        });

        modelBuilder.Entity<F_ARTFOURNISS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTFOURNISS");

            entity.HasIndex(e => new { e.cbAR_Ref, e.cbCT_Num }, "IAF_REF").IsUnique();

            entity.Property(e => e.AF_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_Colisage).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_ConvDiv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_Conversion).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_DateApplication).HasColumnType("smalldatetime");
            entity.Property(e => e.AF_PrixAch).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_PrixAchNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_PrixDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_PrixDevNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_QteMini).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AF_RemiseNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbAF_CodeBarre)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AF_CodeBarre],'')))", false);
            entity.Property(e => e.cbAF_RefFourniss)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AF_RefFourniss],'')))", false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTFOURNISS)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTFOURNISS_AR_Ref");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_ARTFOURNISS)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_ARTFOURNISS_CT_Num");
        });

        modelBuilder.Entity<F_ARTGAMME>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTGAMME");

            entity.HasIndex(e => new { e.cbAR_Ref, e.AG_Type, e.cbEG_Enumere }, "IAG_ENUMERE").IsUnique();

            entity.HasIndex(e => e.AG_No, "IAG_NO").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.EG_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEG_Enumere)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([EG_Enumere],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTGAMME)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTGAMME_AR_Ref");
        });

        modelBuilder.Entity<F_ARTGLOSS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTGLOSS");

            entity.HasIndex(e => new { e.cbAR_Ref, e.GL_No }, "IAGL_REF").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTGLOSS)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTGLOSS_AR_Ref");

            entity.HasOne(d => d.GL_NoNavigation).WithMany(p => p.F_ARTGLOSS)
                .HasPrincipalKey(p => p.GL_No)
                .HasForeignKey(d => d.GL_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTGLOSS_GL_No");
        });

        modelBuilder.Entity<F_ARTICLE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTICLE");

            entity.HasIndex(e => e.cbAR_Ref, "IAR_REF").IsUnique();

            entity.HasIndex(e => e.AR_Ref, "UKA_F_ARTICLE_AR_Ref").IsUnique();

            entity.Property(e => e.AR_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_CodeFiscal)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.AR_Coef).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_CoefNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_DateApplication).HasColumnType("datetime");
            entity.Property(e => e.AR_DateModif).HasColumnType("datetime");
            entity.Property(e => e.AR_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_EdiCode)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais01FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais02FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais03FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Langue1)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_Langue2)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.AR_Photo)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.AR_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixAch).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixAchNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixVen).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PrixVenNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_QteComp).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_QteOperatoire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Stat05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.AR_Substitut)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.RP_CodeDefaut)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_CodeBarre)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_CodeBarre],'')))", false);
            entity.Property(e => e.cbAR_Design)
                .HasMaxLength(70)
                .HasComputedColumnSql("(CONVERT([varbinary](70),isnull([AR_Design],'')))", false);
            entity.Property(e => e.cbAR_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([AR_Raccourci],'')))", false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbAR_Substitut)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Substitut],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_SubstitutNavigation).WithMany(p => p.InverseAR_SubstitutNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Substitut)
                .HasConstraintName("FKA_F_ARTICLE_AR_Ref");

            entity.HasOne(d => d.RP_CodeDefautNavigation).WithMany(p => p.F_ARTICLE)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_CodeDefaut)
                .HasConstraintName("FKA_F_ARTICLE_RP_Code");

            entity.HasOne(d => d.cbCL_No1Navigation).WithMany(p => p.F_ARTICLEcbCL_No1Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No1)
                .HasConstraintName("FKA_F_ARTICLE_CL_No1");

            entity.HasOne(d => d.cbCL_No2Navigation).WithMany(p => p.F_ARTICLEcbCL_No2Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No2)
                .HasConstraintName("FKA_F_ARTICLE_CL_No2");

            entity.HasOne(d => d.cbCL_No3Navigation).WithMany(p => p.F_ARTICLEcbCL_No3Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No3)
                .HasConstraintName("FKA_F_ARTICLE_CL_No3");

            entity.HasOne(d => d.cbCL_No4Navigation).WithMany(p => p.F_ARTICLEcbCL_No4Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No4)
                .HasConstraintName("FKA_F_ARTICLE_CL_No4");
        });

        modelBuilder.Entity<F_ARTICLEMEDIA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTICLEMEDIA");

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.ME_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ME_Fichier)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTICLEMEDIA)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTICLEMEDIA_AR_Ref");
        });

        modelBuilder.Entity<F_ARTICLERESSOURCE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTICLERESSOURCE");

            entity.HasIndex(e => new { e.cbAR_Ref, e.cbRP_Code }, "IRA_REF").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.RP_Code)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRP_Code)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[RP_Code]))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTICLERESSOURCE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTICLERESSOURCE_AR_Ref");

            entity.HasOne(d => d.RP_CodeNavigation).WithMany(p => p.F_ARTICLERESSOURCE)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_Code)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTICLERESSOURCE_RP_Code");
        });

        modelBuilder.Entity<F_ARTMODELE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTMODELE");

            entity.HasIndex(e => new { e.cbAR_Ref, e.AM_Domaine }, "IAM_CODE").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTMODELE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTMODELE_AR_Ref");

            entity.HasOne(d => d.MO_NoNavigation).WithMany(p => p.F_ARTMODELE)
                .HasPrincipalKey(p => p.MO_No)
                .HasForeignKey(d => d.MO_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTMODELE_MO_No");
        });

        modelBuilder.Entity<F_ARTPRIX>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTPRIX");

            entity.HasIndex(e => new { e.AR_Ref, e.AG_No1, e.AG_No2 }, "UKA_F_ARTPRIX_AR_PRIX").IsUnique();

            entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTPRIX)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTPRIX_AR_Ref");
        });

        modelBuilder.Entity<F_ARTSTOCK>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTSTOCK");

            entity.HasIndex(e => new { e.cbAR_Ref, e.DE_No }, "IAS_REF").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AS_MontSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteAControler).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteCom).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteComCM).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteMaxi).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteMini).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QtePrepa).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteRes).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteResCM).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AS_QteSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTSTOCK)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTSTOCK_AR_Ref");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_ARTSTOCK)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTSTOCK_DE_No");

            entity.HasOne(d => d.cbDP_NoControleNavigation).WithMany(p => p.F_ARTSTOCKcbDP_NoControleNavigation)
                .HasPrincipalKey(p => p.DP_No)
                .HasForeignKey(d => d.cbDP_NoControle)
                .HasConstraintName("FKA_F_ARTSTOCK_DP_NoControle");

            entity.HasOne(d => d.cbDP_NoPrincipalNavigation).WithMany(p => p.F_ARTSTOCKcbDP_NoPrincipalNavigation)
                .HasPrincipalKey(p => p.DP_No)
                .HasForeignKey(d => d.cbDP_NoPrincipal)
                .HasConstraintName("FKA_F_ARTSTOCK_DP_NoPrincipal");
        });

        modelBuilder.Entity<F_ARTSTOCKEMPL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ARTSTOCKEMPL");

            entity.HasIndex(e => new { e.cbAR_Ref, e.DE_No, e.DP_No }, "IAE_REFDEP").IsUnique();

            entity.Property(e => e.AE_QteAControler).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AE_QtePrepa).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AE_QteSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_ARTSTOCKEMPL)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTSTOCKEMPL_AR_Ref");

            entity.HasOne(d => d.F_DEPOTEMPL).WithMany(p => p.F_ARTSTOCKEMPL)
                .HasPrincipalKey(p => new { p.DE_No, p.DP_No })
                .HasForeignKey(d => new { d.DE_No, d.DP_No })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ARTSTOCKEMPL_ARTDENO_DPNO");
        });

        modelBuilder.Entity<F_BILLETPIECE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_BILLETPIECE");

            entity.Property(e => e.BI_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.BI_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_BONAPAYERHISTO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_BONAPAYERHISTO");

            entity.Property(e => e.BP_Commentaire)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BP_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.EC_NoNavigation).WithMany(p => p.F_BONAPAYERHISTO)
                .HasPrincipalKey(p => p.EC_No)
                .HasForeignKey(d => d.EC_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_BONAPAYERHISTO_EC_No");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_BONAPAYERHISTO)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_F_BONAPAYERHISTO_CO_No");
        });

        modelBuilder.Entity<F_BONAPAYERHISTOCIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_BONAPAYERHISTOCIAL");

            entity.Property(e => e.BP_Commentaire)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BP_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_BUDGET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_BUDGET");

            entity.HasIndex(e => e.BD_No, "IBD_NO").IsUnique();

            entity.HasIndex(e => e.cbBD_Num, "IBD_NUM").IsUnique();

            entity.Property(e => e.BD_Dotation0101).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0102).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0103).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0104).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0105).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0106).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0107).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0108).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0109).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0110).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0111).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0112).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0113).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0114).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0115).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0116).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0117).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0118).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0119).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0120).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0121).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0122).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0123).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0124).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0125).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0126).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0127).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0128).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0129).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0130).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0131).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0132).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0133).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0134).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0135).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0136).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0201).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0202).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0203).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0204).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0205).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0206).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0207).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0208).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0209).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0210).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0211).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0212).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0213).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0214).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0215).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0216).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0217).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0218).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0219).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0220).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0221).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0222).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0223).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0224).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0225).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0226).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0227).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0228).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0229).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0230).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0231).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0232).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0233).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0234).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0235).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0236).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0301).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0302).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0303).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0304).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0305).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0306).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0307).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0308).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0309).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0310).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0311).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0312).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0313).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0314).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0315).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0316).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0317).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0318).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0319).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0320).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0321).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0322).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0323).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0324).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0325).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0326).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0327).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0328).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0329).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0330).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0331).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0332).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0333).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0334).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0335).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0336).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0401).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0402).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0403).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0404).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0405).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0406).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0407).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0408).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0409).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0410).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0411).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0412).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0413).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0414).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0415).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0416).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0417).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0418).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0419).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0420).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0421).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0422).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0423).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0424).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0425).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0426).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0427).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0428).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0429).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0430).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0431).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0432).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0433).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0434).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0435).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0436).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0501).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0502).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0503).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0504).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0505).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0506).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0507).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0508).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0509).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0510).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0511).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0512).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0513).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0514).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0515).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0516).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0517).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0518).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0519).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0520).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0521).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0522).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0523).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0524).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0525).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0526).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0527).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0528).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0529).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0530).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0531).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0532).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0533).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0534).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0535).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0536).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0601).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0602).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0603).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0604).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0605).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0606).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0607).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0608).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0609).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0610).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0611).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0612).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0613).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0614).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0615).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0616).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0617).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0618).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0619).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0620).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0621).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0622).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0623).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0624).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0625).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0626).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0627).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0628).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0629).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0630).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0631).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0632).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0633).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0634).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0635).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Dotation0636).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0101).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0102).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0103).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0104).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0105).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0106).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0107).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0108).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0109).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0110).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0111).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0112).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0113).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0114).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0115).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0116).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0117).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0118).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0119).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0120).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0121).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0122).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0123).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0124).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0125).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0126).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0127).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0128).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0129).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0130).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0131).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0132).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0133).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0134).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0135).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0136).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0201).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0202).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0203).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0204).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0205).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0206).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0207).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0208).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0209).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0210).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0211).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0212).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0213).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0214).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0215).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0216).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0217).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0218).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0219).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0220).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0221).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0222).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0223).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0224).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0225).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0226).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0227).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0228).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0229).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0230).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0231).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0232).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0233).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0234).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0235).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0236).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0301).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0302).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0303).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0304).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0305).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0306).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0307).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0308).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0309).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0310).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0311).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0312).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0313).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0314).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0315).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0316).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0317).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0318).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0319).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0320).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0321).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0322).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0323).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0324).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0325).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0326).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0327).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0328).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0329).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0330).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0331).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0332).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0333).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0334).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0335).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0336).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0401).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0402).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0403).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0404).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0405).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0406).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0407).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0408).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0409).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0410).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0411).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0412).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0413).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0414).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0415).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0416).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0417).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0418).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0419).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0420).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0421).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0422).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0423).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0424).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0425).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0426).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0427).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0428).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0429).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0430).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0431).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0432).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0433).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0434).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0435).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0436).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0501).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0502).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0503).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0504).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0505).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0506).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0507).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0508).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0509).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0510).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0511).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0512).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0513).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0514).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0515).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0516).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0517).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0518).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0519).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0520).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0521).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0522).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0523).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0524).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0525).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0526).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0527).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0528).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0529).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0530).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0531).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0532).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0533).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0534).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0535).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0536).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0601).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0602).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0603).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0604).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0605).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0606).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0607).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0608).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0609).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0610).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0611).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0612).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0613).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0614).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0615).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0616).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0617).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0618).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0619).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0620).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0621).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0622).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0623).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0624).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0625).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0626).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0627).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0628).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0629).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0630).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0631).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0632).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0633).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0634).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0635).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_DotationQ0636).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.BD_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.BD_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.BD_NumCentr)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.BD_VRepart)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbBD_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([BD_Intitule],'')))", false);
            entity.Property(e => e.cbBD_Num)
                .HasMaxLength(15)
                .HasComputedColumnSql("(CONVERT([varbinary](15),[BD_Num]+'z'))", false);
            entity.Property(e => e.cbBD_NumCentr)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([BD_NumCentr],'')))", false);
            entity.Property(e => e.cbBD_VRepart)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([BD_VRepart],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_CAISSE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CAISSE");

            entity.HasIndex(e => e.cbCA_Intitule, "ICS_INTITULE").IsUnique();

            entity.HasIndex(e => e.CA_No, "ICS_NO").IsUnique();

            entity.Property(e => e.CA_DateCreation).HasColumnType("smalldatetime");
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_No).IsRequired();
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CA_Intitule],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_CAISSE)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_CAISSE_CT_Num");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_CAISSE)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_CAISSE_DE_No");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_CAISSEcbCO_NoNavigation)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_CAISSE_RE_NO");

            entity.HasOne(d => d.cbCO_NoCaissierNavigation).WithMany(p => p.F_CAISSEcbCO_NoCaissierNavigation)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_NoCaissier)
                .HasConstraintName("FKA_CPTAF_CAISSE_RE_NOCAI");
        });

        modelBuilder.Entity<F_CAISSECAISSIER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CAISSECAISSIER");

            entity.HasIndex(e => new { e.CA_No, e.CO_No }, "ICC_CAISSE").IsUnique();

            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CA_NoNavigation).WithMany(p => p.F_CAISSECAISSIER)
                .HasPrincipalKey(p => p.CA_No)
                .HasForeignKey(d => d.CA_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_CAISSECAISSIER_CA_No");

            entity.HasOne(d => d.CO_NoNavigation).WithMany(p => p.F_CAISSECAISSIER)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.CO_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_CAISSECAISSIER_RE_NO");
        });

        modelBuilder.Entity<F_CALENDRIER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CALENDRIER");

            entity.HasIndex(e => e.cbCAL_Intitule, "ICAL_INTITULE").IsUnique();

            entity.HasIndex(e => e.CAL_No, "ICAL_NO").IsUnique();

            entity.Property(e => e.CAL_Horaire0101CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0101CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0102CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0102CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0201CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0201CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0202CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0202CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0301CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0301CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0302CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0302CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0401CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0401CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0402CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0402CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0501CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0501CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0502CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0502CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0601CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0601CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0602CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0602CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0701CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0701CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0702CAL_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Horaire0702CAL_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CAL_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CAL_No).IsRequired();
            entity.Property(e => e.cbCAL_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[CAL_Intitule]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_CATALOGUE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CATALOGUE");

            entity.HasIndex(e => e.CL_No, "ICL_NO").IsUnique();

            entity.HasIndex(e => new { e.CL_NoParent, e.cbCL_Intitule }, "ICL_PARENTINTIT").IsUnique();

            entity.Property(e => e.CL_Code)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CL_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CL_No).IsRequired();
            entity.Property(e => e.cbCL_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[CL_Intitule]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.cbCL_NoParentNavigation).WithMany(p => p.InversecbCL_NoParentNavigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_NoParent)
                .HasConstraintName("FKA_F_CATALOGUE_CL_NoParent");
        });

        modelBuilder.Entity<F_CLAVIER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CLAVIER");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Ref],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_CLAVIER)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("FKA_F_CLAVIER_AR_Ref");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_CLAVIER)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_CLAVIER_RE_NO");
        });

        modelBuilder.Entity<F_CMLIEN>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CMLIEN");

            entity.Property(e => e.CM_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_COLLABORATEUR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COLLABORATEUR");

            entity.HasIndex(e => e.CO_No, "ICO_CONO").IsUnique();

            entity.HasIndex(e => new { e.cbCO_Nom, e.cbCO_Prenom }, "ICO_NOM").IsUnique();

            entity.Property(e => e.CO_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CO_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CO_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CO_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Matricule)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CO_No).IsRequired();
            entity.Property(e => e.CO_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Service)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCO_Fonction)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CO_Fonction],'')))", false);
            entity.Property(e => e.cbCO_Matricule)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([CO_Matricule],'')))", false);
            entity.Property(e => e.cbCO_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CO_Nom],'')))", false);
            entity.Property(e => e.cbCO_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CO_Prenom],'')))", false);
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");

            entity.HasOne(d => d.cbPROT_NoNavigation).WithMany(p => p.F_COLLABORATEUR)
                .HasPrincipalKey(p => p.PROT_No)
                .HasForeignKey(d => d.cbPROT_No)
                .HasConstraintName("FKA_F_COLLABORATEUR_PROT_No");
        });

        modelBuilder.Entity<F_COMMPLANIFIE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMMPLANIFIE");

            entity.HasIndex(e => e.CP_No, "ICP_NO").IsUnique();

            entity.Property(e => e.AR_DateCreationA).HasColumnType("smalldatetime");
            entity.Property(e => e.AR_DateCreationDe).HasColumnType("smalldatetime");
            entity.Property(e => e.AR_DateModifA).HasColumnType("smalldatetime");
            entity.Property(e => e.AR_DateModifDe).HasColumnType("smalldatetime");
            entity.Property(e => e.AR_RefA)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefDe)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CP_DateInven).HasColumnType("smalldatetime");
            entity.Property(e => e.CP_DateRgltA).HasColumnType("smalldatetime");
            entity.Property(e => e.CP_DateRgltDe).HasColumnType("smalldatetime");
            entity.Property(e => e.CP_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CP_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_DateCreateA).HasColumnType("smalldatetime");
            entity.Property(e => e.CT_DateCreateDe).HasColumnType("smalldatetime");
            entity.Property(e => e.CT_NumA)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumDe)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DE_IntituleA)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_IntituleDe)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamilleA)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamilleDe)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbCP_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CP_Intitule],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_COMPTEA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEA");

            entity.HasIndex(e => new { e.N_Analytique, e.cbCA_Num }, "ICA_NUM").IsUnique();

            entity.HasIndex(e => new { e.N_Analytique, e.CA_Num }, "UKA_F_COMPTEA_CA_Num").IsUnique();

            entity.HasIndex(e => e.CA_Num, "Unq_F_COMPTEA_CA_Num").IsUnique();

            entity.Property(e => e.CA_Achat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CA_DateAcceptAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_DateCreationAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_DateDebutAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_DateFinAffaire).HasColumnType("datetime");
            entity.Property(e => e.CA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CA_Vente).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCA_Classement)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CA_Classement],'')))", false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(15)
                .HasComputedColumnSql("(CONVERT([varbinary](15),[CA_Num]+'z'))", false);
            entity.Property(e => e.cbCA_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([CA_Raccourci],'')))", false);
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbModification).HasColumnType("datetime");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_COMPTEA)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_F_COMPTEA_CO_No");
        });

        modelBuilder.Entity<F_COMPTEABUDGET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEABUDGET");

            entity.HasIndex(e => new { e.N_Analytique, e.cbCA_Num }, "ICA_BUDGET").IsUnique();

            entity.HasIndex(e => new { e.N_Analytique, e.CA_Num }, "UKA_F_COMPTEABUDGET_CA_Num").IsUnique();

            entity.Property(e => e.CA_BDotation0101).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0102).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0103).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0104).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0105).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0106).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0107).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0108).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0109).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0110).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0111).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0112).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0113).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0114).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0115).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0116).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0117).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0118).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0119).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0120).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0121).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0122).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0123).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0124).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0125).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0126).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0127).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0128).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0129).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0130).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0131).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0132).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0133).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0134).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0135).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0136).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0201).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0202).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0203).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0204).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0205).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0206).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0207).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0208).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0209).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0210).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0211).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0212).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0213).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0214).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0215).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0216).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0217).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0218).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0219).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0220).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0221).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0222).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0223).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0224).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0225).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0226).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0227).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0228).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0229).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0230).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0231).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0232).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0233).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0234).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0235).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0236).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0301).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0302).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0303).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0304).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0305).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0306).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0307).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0308).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0309).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0310).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0311).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0312).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0313).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0314).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0315).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0316).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0317).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0318).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0319).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0320).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0321).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0322).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0323).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0324).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0325).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0326).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0327).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0328).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0329).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0330).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0331).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0332).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0333).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0334).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0335).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0336).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0401).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0402).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0403).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0404).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0405).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0406).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0407).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0408).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0409).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0410).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0411).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0412).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0413).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0414).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0415).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0416).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0417).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0418).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0419).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0420).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0421).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0422).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0423).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0424).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0425).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0426).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0427).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0428).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0429).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0430).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0431).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0432).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0433).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0434).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0435).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0436).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0501).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0502).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0503).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0504).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0505).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0506).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0507).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0508).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0509).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0510).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0511).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0512).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0513).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0514).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0515).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0516).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0517).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0518).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0519).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0520).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0521).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0522).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0523).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0524).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0525).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0526).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0527).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0528).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0529).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0530).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0531).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0532).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0533).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0534).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0535).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0536).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0601).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0602).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0603).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0604).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0605).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0606).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0607).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0608).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0609).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0610).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0611).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0612).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0613).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0614).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0615).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0616).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0617).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0618).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0619).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0620).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0621).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0622).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0623).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0624).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0625).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0626).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0627).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0628).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0629).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0630).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0631).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0632).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0633).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0634).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0635).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotation0636).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0101).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0102).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0103).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0104).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0105).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0106).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0107).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0108).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0109).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0110).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0111).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0112).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0113).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0114).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0115).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0116).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0117).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0118).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0119).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0120).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0121).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0122).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0123).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0124).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0125).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0126).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0127).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0128).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0129).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0130).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0131).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0132).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0133).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0134).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0135).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0136).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0201).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0202).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0203).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0204).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0205).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0206).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0207).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0208).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0209).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0210).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0211).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0212).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0213).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0214).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0215).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0216).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0217).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0218).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0219).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0220).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0221).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0222).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0223).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0224).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0225).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0226).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0227).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0228).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0229).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0230).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0231).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0232).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0233).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0234).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0235).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0236).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0301).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0302).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0303).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0304).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0305).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0306).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0307).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0308).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0309).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0310).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0311).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0312).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0313).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0314).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0315).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0316).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0317).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0318).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0319).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0320).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0321).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0322).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0323).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0324).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0325).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0326).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0327).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0328).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0329).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0330).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0331).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0332).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0333).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0334).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0335).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0336).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0401).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0402).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0403).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0404).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0405).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0406).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0407).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0408).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0409).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0410).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0411).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0412).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0413).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0414).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0415).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0416).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0417).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0418).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0419).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0420).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0421).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0422).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0423).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0424).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0425).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0426).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0427).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0428).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0429).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0430).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0431).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0432).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0433).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0434).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0435).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0436).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0501).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0502).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0503).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0504).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0505).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0506).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0507).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0508).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0509).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0510).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0511).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0512).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0513).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0514).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0515).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0516).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0517).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0518).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0519).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0520).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0521).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0522).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0523).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0524).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0525).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0526).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0527).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0528).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0529).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0530).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0531).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0532).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0533).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0534).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0535).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0536).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0601).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0602).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0603).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0604).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0605).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0606).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0607).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0608).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0609).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0610).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0611).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0612).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0613).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0614).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0615).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0616).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0617).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0618).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0619).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0620).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0621).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0622).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0623).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0624).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0625).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0626).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0627).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0628).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0629).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0630).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0631).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0632).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0633).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0634).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0635).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BDotationQ0636).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.F_COMPTEA).WithOne(p => p.F_COMPTEABUDGET)
                .HasPrincipalKey<F_COMPTEA>(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey<F_COMPTEABUDGET>(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEABUDGET_CA_Num");
        });

        modelBuilder.Entity<F_COMPTEABUDGETG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEABUDGETG");

            entity.HasIndex(e => new { e.N_Analytique, e.cbCA_Num, e.cbCG_Num }, "ICA_BUDGETGCANUM").IsUnique();

            entity.Property(e => e.CA_BGVRepart01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepart02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepart03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepart04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepart05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepart06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepartQ01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepartQ02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepartQ03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepartQ04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepartQ05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_BGVRepartQ06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_COMPTEABUDGETG)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEABUDGETG_CG_Num");

            entity.HasOne(d => d.F_COMPTEABUDGET).WithMany(p => p.F_COMPTEABUDGETG)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEABUDGETG_BUDGET");
        });

        modelBuilder.Entity<F_COMPTEAMEDIA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEAMEDIA");

            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ME_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ME_Fichier)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_COMPTEAMEDIA)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEAMEDIA_CA_Num");
        });

        modelBuilder.Entity<F_COMPTEG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEG");

            entity.HasIndex(e => e.cbCG_Num, "ICG_NUM").IsUnique();

            entity.HasIndex(e => e.CG_Num, "UKA_F_COMPTEG_CG_Num").IsUnique();

            entity.Property(e => e.CG_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CR_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Classement)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CG_Classement],'')))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(15)
                .HasComputedColumnSql("(CONVERT([varbinary](15),[CG_Num]+'z'))", false);
            entity.Property(e => e.cbCG_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([CG_Raccourci],'')))", false);
            entity.Property(e => e.cbCR_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CR_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTA_Code)
                .HasMaxLength(6)
                .HasComputedColumnSql("(CONVERT([varbinary](6),isnull([TA_Code],'')))", false);

            entity.HasOne(d => d.CR_NumNavigation).WithMany(p => p.F_COMPTEG)
                .HasPrincipalKey(p => p.CR_Num)
                .HasForeignKey(d => d.CR_Num)
                .HasConstraintName("FKA_F_COMPTEG_CR_Num");

            entity.HasOne(d => d.TA_CodeNavigation).WithMany(p => p.F_COMPTEG)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code)
                .HasConstraintName("FKA_F_COMPTEG_TA_Code");
        });

        modelBuilder.Entity<F_COMPTEGA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEGA");

            entity.HasIndex(e => new { e.cbCG_Num, e.N_Analytique, e.cbCA_Num }, "ICG_ACGNUM").IsUnique();

            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_AVRepart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_COMPTEGA)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEGA_CG_Num");

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_COMPTEGA)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEGA_CA_Num");
        });

        modelBuilder.Entity<F_COMPTEGBUDGET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEGBUDGET");

            entity.HasIndex(e => e.cbCG_Num, "ICG_BUDGET").IsUnique();

            entity.HasIndex(e => e.CG_Num, "UKA_F_COMPTEGBUDGET_CG_Num").IsUnique();

            entity.Property(e => e.CG_BDotation0101).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0102).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0103).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0104).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0105).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0106).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0107).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0108).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0109).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0110).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0111).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0112).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0113).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0114).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0115).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0116).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0117).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0118).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0119).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0120).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0121).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0122).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0123).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0124).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0125).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0126).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0127).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0128).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0129).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0130).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0131).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0132).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0133).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0134).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0135).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0136).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0201).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0202).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0203).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0204).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0205).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0206).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0207).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0208).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0209).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0210).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0211).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0212).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0213).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0214).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0215).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0216).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0217).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0218).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0219).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0220).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0221).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0222).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0223).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0224).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0225).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0226).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0227).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0228).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0229).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0230).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0231).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0232).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0233).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0234).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0235).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0236).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0301).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0302).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0303).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0304).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0305).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0306).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0307).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0308).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0309).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0310).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0311).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0312).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0313).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0314).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0315).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0316).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0317).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0318).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0319).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0320).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0321).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0322).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0323).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0324).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0325).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0326).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0327).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0328).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0329).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0330).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0331).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0332).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0333).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0334).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0335).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0336).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0401).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0402).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0403).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0404).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0405).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0406).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0407).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0408).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0409).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0410).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0411).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0412).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0413).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0414).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0415).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0416).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0417).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0418).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0419).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0420).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0421).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0422).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0423).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0424).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0425).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0426).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0427).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0428).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0429).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0430).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0431).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0432).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0433).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0434).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0435).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0436).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0501).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0502).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0503).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0504).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0505).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0506).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0507).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0508).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0509).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0510).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0511).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0512).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0513).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0514).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0515).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0516).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0517).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0518).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0519).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0520).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0521).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0522).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0523).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0524).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0525).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0526).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0527).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0528).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0529).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0530).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0531).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0532).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0533).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0534).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0535).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0536).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0601).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0602).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0603).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0604).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0605).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0606).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0607).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0608).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0609).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0610).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0611).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0612).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0613).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0614).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0615).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0616).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0617).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0618).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0619).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0620).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0621).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0622).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0623).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0624).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0625).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0626).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0627).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0628).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0629).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0630).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0631).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0632).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0633).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0634).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0635).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotation0636).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0101).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0102).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0103).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0104).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0105).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0106).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0107).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0108).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0109).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0110).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0111).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0112).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0113).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0114).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0115).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0116).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0117).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0118).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0119).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0120).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0121).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0122).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0123).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0124).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0125).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0126).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0127).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0128).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0129).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0130).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0131).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0132).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0133).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0134).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0135).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0136).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0201).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0202).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0203).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0204).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0205).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0206).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0207).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0208).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0209).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0210).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0211).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0212).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0213).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0214).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0215).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0216).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0217).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0218).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0219).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0220).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0221).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0222).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0223).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0224).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0225).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0226).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0227).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0228).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0229).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0230).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0231).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0232).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0233).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0234).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0235).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0236).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0301).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0302).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0303).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0304).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0305).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0306).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0307).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0308).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0309).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0310).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0311).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0312).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0313).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0314).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0315).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0316).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0317).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0318).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0319).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0320).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0321).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0322).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0323).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0324).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0325).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0326).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0327).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0328).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0329).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0330).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0331).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0332).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0333).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0334).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0335).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0336).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0401).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0402).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0403).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0404).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0405).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0406).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0407).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0408).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0409).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0410).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0411).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0412).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0413).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0414).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0415).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0416).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0417).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0418).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0419).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0420).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0421).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0422).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0423).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0424).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0425).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0426).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0427).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0428).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0429).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0430).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0431).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0432).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0433).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0434).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0435).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0436).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0501).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0502).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0503).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0504).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0505).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0506).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0507).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0508).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0509).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0510).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0511).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0512).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0513).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0514).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0515).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0516).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0517).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0518).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0519).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0520).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0521).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0522).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0523).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0524).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0525).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0526).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0527).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0528).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0529).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0530).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0531).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0532).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0533).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0534).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0535).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0536).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0601).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0602).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0603).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0604).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0605).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0606).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0607).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0608).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0609).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0610).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0611).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0612).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0613).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0614).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0615).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0616).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0617).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0618).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0619).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0620).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0621).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0622).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0623).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0624).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0625).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0626).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0627).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0628).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0629).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0630).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0631).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0632).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0633).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0634).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0635).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BDotationQ0636).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithOne(p => p.F_COMPTEGBUDGET)
                .HasPrincipalKey<F_COMPTEG>(p => p.CG_Num)
                .HasForeignKey<F_COMPTEGBUDGET>(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEGBUDGET_CG_Num");
        });

        modelBuilder.Entity<F_COMPTEGBUDGETA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEGBUDGETA");

            entity.HasIndex(e => new { e.cbCG_Num, e.N_Analytique, e.cbCA_Num }, "ICG_BUDGETACGNUM").IsUnique();

            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_BAVRepart01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepart02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepart03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepart04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepart05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepart06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepartQ01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepartQ02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepartQ03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepartQ04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepartQ05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_BAVRepartQ06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_COMPTEGBUDGETA)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEGBUDGETA_BUDGET");

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_COMPTEGBUDGETA)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEGBUDGETA_CA_Num");
        });

        modelBuilder.Entity<F_COMPTEGNOTE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTEGNOTE");

            entity.HasIndex(e => e.cbCG_Num, "ICG_NOTE").IsUnique();

            entity.Property(e => e.CG_Note)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_COMPTEGNOTE)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTEGNOTE_CG_Num");
        });

        modelBuilder.Entity<F_COMPTER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTER");

            entity.HasIndex(e => e.cbCR_Num, "ICR_NUM").IsUnique();

            entity.HasIndex(e => e.CR_Num, "UKA_F_COMPTER_CR_Num").IsUnique();

            entity.Property(e => e.CR_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CR_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCR_Classement)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CR_Classement],'')))", false);
            entity.Property(e => e.cbCR_Num)
                .HasMaxLength(15)
                .HasComputedColumnSql("(CONVERT([varbinary](15),[CR_Num]+'z'))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_COMPTET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTET");

            entity.HasIndex(e => e.CT_Num, "UKA_F_COMPTET_CT_Num").IsUnique();

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumPrinc)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ape)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Classement)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CT_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Coface)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Commentaire)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_DateFermeDebut).HasColumnType("datetime");
            entity.Property(e => e.CT_DateFermeFin).HasColumnType("datetime");
            entity.Property(e => e.CT_DateMAJ).HasColumnType("datetime");
            entity.Property(e => e.CT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCode)
                .HasMaxLength(23)
                .IsUnicode(false);
            entity.Property(e => e.CT_EdiCodeSage)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Identifiant)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_LangueISO2)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Qualite)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentInt)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_RepresentNIF)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CT_Siret)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.CT_Site)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique06)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique07)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique08)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique09)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Statistique10)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_SvCotation)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvDateBilan).HasColumnType("datetime");
            entity.Property(e => e.CT_SvDateCreate).HasColumnType("datetime");
            entity.Property(e => e.CT_SvDateIncid).HasColumnType("datetime");
            entity.Property(e => e.CT_SvDateMaj).HasColumnType("datetime");
            entity.Property(e => e.CT_SvEffectif)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvFormeJuri)
                .HasMaxLength(33)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvObjetMaj)
                .HasMaxLength(61)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvRegul)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);
            entity.Property(e => e.cbCT_Classement)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Classement],'')))", false);
            entity.Property(e => e.cbCT_CodePostal)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),isnull([CT_CodePostal],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCT_NumCentrale)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumCentrale],'')))", false);
            entity.Property(e => e.cbCT_NumPayeur)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeur],'')))", false);
            entity.Property(e => e.cbCT_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([CT_Raccourci],'')))", false);
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");

            entity.HasOne(d => d.CG_NumPrincNavigation).WithMany(p => p.F_COMPTET)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_NumPrinc)
                .HasConstraintName("FKA_F_COMPTET_CG_Num");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_COMPTET)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_F_COMPTET_CO_No");

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_COMPTET)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_CIALF_COMPTET_DE_No");

            entity.HasOne(d => d.cbMR_NoNavigation).WithMany(p => p.F_COMPTET)
                .HasPrincipalKey(p => p.MR_No)
                .HasForeignKey(d => d.cbMR_No)
                .HasConstraintName("FKA_F_COMPTET_MR_No");

            entity.HasOne(d => d.cbPI_NoEchangeNavigation).WithMany(p => p.F_COMPTET)
                .HasPrincipalKey(p => p.PI_No)
                .HasForeignKey(d => d.cbPI_NoEchange)
                .HasConstraintName("FKA_F_COMPTET_PI_NoEchange");

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_COMPTETF_COMPTEA)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .HasConstraintName("FKA_F_COMPTET_CA_Num");

            entity.HasOne(d => d.F_COMPTEANavigation).WithMany(p => p.F_COMPTETF_COMPTEANavigation)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_AnalytiqueIFRS, d.CA_NumIFRS })
                .HasConstraintName("FKA_F_COMPTET_CA_NumIFRS");
        });

        modelBuilder.Entity<F_COMPTETG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTETG");

            entity.HasIndex(e => new { e.cbCT_Num, e.cbCG_Num }, "ICT_CTNUM").IsUnique();

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_COMPTETG)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTETG_CG_Num");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_COMPTETG)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTETG_CT_Num");
        });

        modelBuilder.Entity<F_COMPTETINFOS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTETINFOS");

            entity.HasIndex(e => new { e.cbCT_Num, e.cbCI_Code }, "ICI_CODE").IsUnique();

            entity.Property(e => e.CI_Code)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CI_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CI_Valeur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbCI_Code)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CI_Code]))", false);
            entity.Property(e => e.cbCI_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[CI_Intitule]))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_COMPTETINFOS)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_COMPTETINFOS_CT_Num");
        });

        modelBuilder.Entity<F_COMPTETMEDIA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTETMEDIA");

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.ME_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ME_Fichier)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_COMPTETMEDIA)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTETMEDIA_CT_Num");
        });

        modelBuilder.Entity<F_COMPTETMODELE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTETMODELE");

            entity.Property(e => e.CM_Modele)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_COMPTETMODELE)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTETMODELE_CT_Num");
        });

        modelBuilder.Entity<F_COMPTETRAPPEL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_COMPTETRAPPEL");

            entity.Property(e => e.CR_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.CR_Echeance).HasColumnType("smalldatetime");
            entity.Property(e => e.CR_Impayes).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CR_Penal).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CR_SoldeRelance).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_COMPTETRAPPEL)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_COMPTETRAPPEL_CT_Num");
        });

        modelBuilder.Entity<F_CONDITION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CONDITION");

            entity.HasIndex(e => new { e.cbAR_Ref, e.cbEC_Enumere, e.EC_Quantite }, "ICO_ENUMERE").IsUnique();

            entity.HasIndex(e => e.CO_No, "ICO_NO").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CO_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CO_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.EC_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCO_CodeBarre)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([CO_CodeBarre],'')))", false);
            entity.Property(e => e.cbCO_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([CO_Ref],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEC_Enumere)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([EC_Enumere],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_CONDITION)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_CONDITION_AR_Ref");
        });

        modelBuilder.Entity<F_CONTACTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CONTACTA");

            entity.HasIndex(e => e.CA_No, "ICA_NO").IsUnique();

            entity.HasIndex(e => new { e.N_Analytique, e.cbCA_Num, e.cbCA_Nom, e.cbCA_Prenom }, "ICA_NOM").IsUnique();

            entity.Property(e => e.CA_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CA_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CA_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CA_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CA_Nom],'')))", false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCA_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CA_Prenom],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_CONTACTA)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_CONTACTA_CA_Num");
        });

        modelBuilder.Entity<F_CONTACTB>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CONTACTB");

            entity.HasIndex(e => e.CB_No, "ICB_NO").IsUnique();

            entity.HasIndex(e => new { e.BQ_No, e.cbCB_Nom, e.cbCB_Prenom }, "ICB_NOM").IsUnique();

            entity.Property(e => e.CB_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CB_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CB_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CB_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CB_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CB_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CB_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCB_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CB_Nom],'')))", false);
            entity.Property(e => e.cbCB_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CB_Prenom],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_CONTACTD>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CONTACTD");

            entity.HasIndex(e => e.CD_No, "ICD_NO").IsUnique();

            entity.HasIndex(e => new { e.cbCD_Nom, e.cbCD_Prenom }, "ICD_NOM").IsUnique();

            entity.Property(e => e.CD_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CD_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CD_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CD_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CD_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CD_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CD_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CD_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CD_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CD_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CD_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CD_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CD_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCD_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CD_Nom],'')))", false);
            entity.Property(e => e.cbCD_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CD_Prenom],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_CONTACTR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CONTACTR");

            entity.HasIndex(e => e.CR_No, "ICR_NO").IsUnique();

            entity.HasIndex(e => new { e.cbDR_Num, e.cbCR_Nom, e.cbCR_Prenom }, "ICR_NOM").IsUnique();

            entity.Property(e => e.CR_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CR_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.CR_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CR_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CR_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CR_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CR_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CR_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DR_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCR_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CR_Nom],'')))", false);
            entity.Property(e => e.cbCR_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CR_Prenom],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDR_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[DR_Num]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DR_NumNavigation).WithMany(p => p.F_CONTACTR)
                .HasPrincipalKey(p => p.DR_Num)
                .HasForeignKey(d => d.DR_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_CONTACTR_DR_Num");
        });

        modelBuilder.Entity<F_CONTACTT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CONTACTT");

            entity.HasIndex(e => e.CT_No, "ICT_NO").IsUnique();

            entity.HasIndex(e => new { e.cbCT_Num, e.cbCT_Nom, e.cbCT_Prenom }, "ICT_NOM").IsUnique();

            entity.Property(e => e.CT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CT_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_No).IsRequired();
            entity.Property(e => e.CT_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CT_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CT_Nom],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCT_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CT_Prenom],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_CONTACTT)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_CONTACTT_CT_Num");
        });

        modelBuilder.Entity<F_CREGLEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CREGLEMENT");

            entity.HasIndex(e => e.RG_No, "IRG_NO").IsUnique();

            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumEcart)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeurOrig)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DateDepot).HasColumnType("smalldatetime");
            entity.Property(e => e.DatePaie).HasColumnType("smalldatetime");
            entity.Property(e => e.Depose).HasDefaultValue(false);
            entity.Property(e => e.Encaiss).HasDefaultValue(false);
            entity.Property(e => e.Impaye).HasDefaultValue(false);
            entity.Property(e => e.Incorpore).HasDefaultValue(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumEcart)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.RG_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_Date).HasColumnType("datetime");
            entity.Property(e => e.RG_DateEchCont).HasColumnType("datetime");
            entity.Property(e => e.RG_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RG_Impaye).HasColumnType("datetime");
            entity.Property(e => e.RG_Libelle)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RG_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_MontantDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_MontantEcart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RG_No).IsRequired();
            entity.Property(e => e.RG_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.RG_Reference)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Rappro).HasDefaultValue(false);
            entity.Property(e => e.Remarque)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_Num],'')))", false);
            entity.Property(e => e.cbCG_NumCont)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_NumCont],'')))", false);
            entity.Property(e => e.cbCG_NumEcart)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_NumEcart],'')))", false);
            entity.Property(e => e.cbCT_NumPayeur)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeur],'')))", false);
            entity.Property(e => e.cbCT_NumPayeurOrig)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeurOrig],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRG_Piece)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len(isnull([RG_Piece],''))+(1)))+isnull([RG_Piece],'')))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_CREGLEMENTCG_NumNavigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .HasConstraintName("FKA_CPTAF_CREGLEMENT_CG_Num");

            entity.HasOne(d => d.CG_NumContNavigation).WithMany(p => p.F_CREGLEMENTCG_NumContNavigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_NumCont)
                .HasConstraintName("FKA_CPTAF_CREGLEMENT_CG_NumCont");

            entity.HasOne(d => d.CG_NumEcartNavigation).WithMany(p => p.F_CREGLEMENTCG_NumEcartNavigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_NumEcart)
                .HasConstraintName("FKA_CPTAF_CREGLEMENT_CG_NumEcart");

            entity.HasOne(d => d.CT_NumPayeurNavigation).WithMany(p => p.F_CREGLEMENTCT_NumPayeurNavigation)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_NumPayeur)
                .HasConstraintName("FKA_CPTAF_CREGLEMENT_CT_NumPayeur");

            entity.HasOne(d => d.CT_NumPayeurOrigNavigation).WithMany(p => p.F_CREGLEMENTCT_NumPayeurOrigNavigation)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_NumPayeurOrig)
                .HasConstraintName("FKA_CPTAF_CREGLEMENT_CT_NumPayeurOrig");

            entity.HasOne(d => d.cbCA_NoNavigation).WithMany(p => p.F_CREGLEMENT)
                .HasPrincipalKey(p => p.CA_No)
                .HasForeignKey(d => d.cbCA_No)
                .HasConstraintName("FKA_F_CREGLEMENT_CA_No");

            entity.HasOne(d => d.cbCO_NoCaissierNavigation).WithMany(p => p.F_CREGLEMENT)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_NoCaissier)
                .HasConstraintName("FKA_CPTAF_CREGLEMENT_RE_NOCAISSIER");
        });

        modelBuilder.Entity<F_CYCLECONS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CYCLECONS");

            entity.Property(e => e.CC_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.CC_Controleur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CC_DateControl).HasColumnType("smalldatetime");
            entity.Property(e => e.CC_DateRevis).HasColumnType("smalldatetime");
            entity.Property(e => e.CC_Reviseur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CO_Num)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CY_Num)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbCO_Num)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([CO_Num],'')))", false);
            entity.Property(e => e.cbCY_Num)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([CY_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_CYCLEOBS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_CYCLEOBS");

            entity.HasIndex(e => new { e.cbCY_Num, e.CO_Exercice }, "ICO_CYNUM").IsUnique();

            entity.Property(e => e.CO_Obs).IsUnicode(false);
            entity.Property(e => e.CY_Num)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbCY_Num)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([CY_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_DEPOT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DEPOT");

            entity.HasIndex(e => e.cbDE_Intitule, "IDE_INTITULE").IsUnique();

            entity.HasIndex(e => e.DE_No, "IDE_NO").IsUnique();

            entity.Property(e => e.DE_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_Code)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DE_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DE_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DE_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_No).IsRequired();
            entity.Property(e => e.DE_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DE_Region)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DE_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.DE_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.DE_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDE_Code)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),isnull([DE_Code],'')))", false);
            entity.Property(e => e.cbDE_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[DE_Intitule]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.cbDP_NoDefautNavigation).WithMany(p => p.F_DEPOT)
                .HasPrincipalKey(p => p.DP_No)
                .HasForeignKey(d => d.cbDP_NoDefaut)
                .HasConstraintName("FKA_F_DEPOT_DP_NoDefaut");
        });

        modelBuilder.Entity<F_DEPOTCONTACT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DEPOTCONTACT");

            entity.HasIndex(e => e.DC_No, "IDC_NOCONT").IsUnique();

            entity.HasIndex(e => new { e.DE_No, e.cbDC_Nom, e.cbDC_Prenom }, "IDC_NOM").IsUnique();

            entity.Property(e => e.DC_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DC_Fonction)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DC_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DC_Prenom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DC_TelPortable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.DC_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.DC_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDC_Nom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([DC_Nom],'')))", false);
            entity.Property(e => e.cbDC_Prenom)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([DC_Prenom],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_DEPOTCONTACT)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DEPOTCONTACT_DE_No");
        });

        modelBuilder.Entity<F_DEPOTEMPL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DEPOTEMPL");

            entity.HasIndex(e => new { e.DE_No, e.cbDP_Code }, "IDP_CODE").IsUnique();

            entity.HasIndex(e => e.DP_No, "IDP_NO").IsUnique();

            entity.HasIndex(e => new { e.DE_No, e.DP_No }, "UKA_F_DEPOTEMPL_DENO_DPNO").IsUnique();

            entity.Property(e => e.DP_Code)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.DP_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DP_No).IsRequired();
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDP_Code)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([DP_Code],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_DEPOTEMPL)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DEPOTEMPL_DE_No");
        });

        modelBuilder.Entity<F_DOCCURRENTPIECE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCCURRENTPIECE");

            entity.HasIndex(e => new { e.DC_Domaine, e.DC_IdCol, e.DC_Souche }, "IDC_DOCUMENT").IsUnique();

            entity.Property(e => e.DC_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_DOCENTETE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCENTETE");

            entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece }, "IDO_TPIECE").IsUnique();

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CA_NumIFRS)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCentrale)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumOld)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumPayeur)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.ChefChantier)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DO_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord01)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord02)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord03)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Coord04)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_FactureFrs)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");
            entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");
            entity.Property(e => e.DO_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DO_Motif)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DO_NetAPayer).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DO_NoWeb)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DO_PieceOrig)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Tiers)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_TotalHTNet).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DO_TotalTTC).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.Demandeur)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_Num],'')))", false);
            entity.Property(e => e.cbCT_NumCentrale)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumCentrale],'')))", false);
            entity.Property(e => e.cbCT_NumPayeur)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeur],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbDO_FactureFrs)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([DO_FactureFrs],'')))", false);
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbDO_Tiers)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([DO_Tiers],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_DOCENTETE)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_CG_Num");

            entity.HasOne(d => d.CT_NumCentraleNavigation).WithMany(p => p.F_DOCENTETECT_NumCentraleNavigation)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_NumCentrale)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_CT_NumCentrale");

            entity.HasOne(d => d.CT_NumPayeurNavigation).WithMany(p => p.F_DOCENTETECT_NumPayeurNavigation)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_NumPayeur)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_CT_NumPayeur");

            entity.HasOne(d => d.DO_CodeTaxe1Navigation).WithMany(p => p.F_DOCENTETEDO_CodeTaxe1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.DO_CodeTaxe1)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_DO_CodeTaxe1");

            entity.HasOne(d => d.DO_CodeTaxe2Navigation).WithMany(p => p.F_DOCENTETEDO_CodeTaxe2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.DO_CodeTaxe2)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_DO_CodeTaxe2");

            entity.HasOne(d => d.DO_CodeTaxe3Navigation).WithMany(p => p.F_DOCENTETEDO_CodeTaxe3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.DO_CodeTaxe3)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_DO_CodeTaxe3");

            entity.HasOne(d => d.cbCA_NoNavigation).WithMany(p => p.F_DOCENTETE)
                .HasPrincipalKey(p => p.CA_No)
                .HasForeignKey(d => d.cbCA_No)
                .HasConstraintName("FKA_F_DOCENTETE_CA_No");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_DOCENTETEcbCO_NoNavigation)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_RE_NO");

            entity.HasOne(d => d.cbCO_NoCaissierNavigation).WithMany(p => p.F_DOCENTETEcbCO_NoCaissierNavigation)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_NoCaissier)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_RE_NOCAISSIER");

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_DOCENTETE)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_DOCENTETE_DE_No");

            entity.HasOne(d => d.cbLI_NoNavigation).WithMany(p => p.F_DOCENTETE)
                .HasPrincipalKey(p => p.LI_No)
                .HasForeignKey(d => d.cbLI_No)
                .HasConstraintName("FKA_CPTAF_DOCENTETE_LI_No");
        });

        modelBuilder.Entity<F_DOCENTETEINFOS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCENTETEINFOS");

            entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece, e.cbDI_Code }, "IDI_CODE").IsUnique();

            entity.Property(e => e.DI_Code)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.DI_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DI_Valeur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDI_Code)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[DI_Code]))", false);
            entity.Property(e => e.cbDI_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[DI_Intitule]))", false);
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_DOCENTETETEXT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCENTETETEXT");

            entity.HasIndex(e => e.ET_No, "IET_NO").IsUnique();

            entity.Property(e => e.ET_Text)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_DOCLIGNE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCLIGNE");

            entity.HasIndex(e => e.DL_No, "IDL_NO").IsUnique();

            entity.Property(e => e.AC_RefClient)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AF_RefFourniss)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_CodeTaxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_CodeTaxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBC).HasColumnType("datetime");
            entity.Property(e => e.DL_DateBL).HasColumnType("datetime");
            entity.Property(e => e.DL_DateDE).HasColumnType("datetime");
            entity.Property(e => e.DL_DatePL).HasColumnType("datetime");
            entity.Property(e => e.DL_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_No).IsRequired();
            entity.Property(e => e.DL_NoColis)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PieceBC)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_PieceBL)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_PieceDE)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.DL_PiecePL)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteDE).HasColumnType("decimal(24, 6)");
            entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DO_Date).HasColumnType("datetime");
            entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");
            entity.Property(e => e.DO_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DO_Ref)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAF_RefFourniss)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AF_RefFourniss],'')))", false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Ref],'')))", false);
            entity.Property(e => e.cbAR_RefCompose)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_RefCompose],'')))", false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbDL_PieceBC)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DL_PieceBC],''))+(1)))+isnull([DL_PieceBC],'')))", false);
            entity.Property(e => e.cbDL_PieceBL)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DL_PieceBL],''))+(1)))+isnull([DL_PieceBL],'')))", false);
            entity.Property(e => e.cbDL_PiecePL)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DL_PiecePL],''))+(1)))+isnull([DL_PiecePL],'')))", false);
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([DO_Piece])+(1)))+[DO_Piece]))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbPF_Num)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([PF_Num])+(1)))+[PF_Num]))", false);
            entity.Property(e => e.cbRP_Code)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([RP_Code],'')))", false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_DOCLIGNE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("FKA_F_DOCLIGNE_AR_Ref");

            entity.HasOne(d => d.DL_CodeTaxe1Navigation).WithMany(p => p.F_DOCLIGNEDL_CodeTaxe1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.DL_CodeTaxe1)
                .HasConstraintName("FKA_CPTAF_DOCLIGNE_DL_CodeTaxe1");

            entity.HasOne(d => d.DL_CodeTaxe2Navigation).WithMany(p => p.F_DOCLIGNEDL_CodeTaxe2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.DL_CodeTaxe2)
                .HasConstraintName("FKA_CPTAF_DOCLIGNE_DL_CodeTaxe2");

            entity.HasOne(d => d.DL_CodeTaxe3Navigation).WithMany(p => p.F_DOCLIGNEDL_CodeTaxe3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.DL_CodeTaxe3)
                .HasConstraintName("FKA_CPTAF_DOCLIGNE_DL_CodeTaxe3");

            entity.HasOne(d => d.RP_CodeNavigation).WithMany(p => p.F_DOCLIGNE)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_Code)
                .HasConstraintName("FKA_F_DOCLIGNE_RP_Code");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_DOCLIGNE)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_DOCLIGNE_RE_NO");

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_DOCLIGNE)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_DOCLIGNE_DE_No");

            entity.HasOne(d => d.cbDL_NoLinkNavigation).WithMany(p => p.InversecbDL_NoLinkNavigation)
                .HasPrincipalKey(p => p.DL_No)
                .HasForeignKey(d => d.cbDL_NoLink)
                .HasConstraintName("FKA_F_DOCLIGNE_DL_NoLink");
        });

        modelBuilder.Entity<F_DOCLIGNEEMPL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCLIGNEEMPL");

            entity.HasIndex(e => new { e.DL_No, e.DP_No }, "IDL_LIGNEEMPL").IsUnique();

            entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DL_QteAControler).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DL_NoNavigation).WithMany(p => p.F_DOCLIGNEEMPL)
                .HasPrincipalKey(p => p.DL_No)
                .HasForeignKey(d => d.DL_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DOCLIGNEEMPL_DL_No");

            entity.HasOne(d => d.DP_NoNavigation).WithMany(p => p.F_DOCLIGNEEMPL)
                .HasPrincipalKey(p => p.DP_No)
                .HasForeignKey(d => d.DP_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DOCLIGNEEMPL_DP_No");
        });

        modelBuilder.Entity<F_DOCLIGNEINFOS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCLIGNEINFOS");

            entity.HasIndex(e => new { e.DL_No, e.cbDC_Code }, "IDC_CODE").IsUnique();

            entity.Property(e => e.DC_Code)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.DC_Intitule)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DC_Valeur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDC_Code)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[DC_Code]))", false);
            entity.Property(e => e.cbDC_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),[DC_Intitule]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DL_NoNavigation).WithMany(p => p.F_DOCLIGNEINFOS)
                .HasPrincipalKey(p => p.DL_No)
                .HasForeignKey(d => d.DL_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DOCLIGNEINFOS_DL_No");
        });

        modelBuilder.Entity<F_DOCLIGNETEXT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCLIGNETEXT");

            entity.HasIndex(e => e.DT_No, "IDT_NO").IsUnique();

            entity.Property(e => e.DT_Text).IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_DOCREGL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DOCREGL");

            entity.HasIndex(e => e.DR_No, "IDR_NO").IsUnique();

            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.DR_Date).HasColumnType("datetime");
            entity.Property(e => e.DR_Libelle)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.DR_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DR_MontantDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DR_No).IsRequired();
            entity.Property(e => e.DR_Pourcent).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_DRECOUVREMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DRECOUVREMENT");

            entity.HasIndex(e => e.cbDR_Num, "IDR_NUM").IsUnique();

            entity.HasIndex(e => e.DR_Num, "UKA_F_DRECOUVREMENT_DR_Num").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DR_Commentaire)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DR_DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.DR_DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.DR_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.DR_PerteProbable).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DR_Provision).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.DR_Resume)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDR_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DR_Num])+(1)))+[DR_Num]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_DRECOUVREMENT)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DRECOUVREMENT_CT_Num");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_DRECOUVREMENT)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_F_DRECOUVREMENT_CO_No");

            entity.HasOne(d => d.cbCT_NoNavigation).WithMany(p => p.F_DRECOUVREMENT)
                .HasPrincipalKey(p => p.CT_No)
                .HasForeignKey(d => d.cbCT_No)
                .HasConstraintName("FKA_F_DRECOUVREMENT_CT_No");
        });

        modelBuilder.Entity<F_DRECOUVREMENTEC>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DRECOUVREMENTEC");

            entity.HasIndex(e => e.EC_No, "IDE_ECNO").IsUnique();

            entity.Property(e => e.DR_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EC_DateTiersDouteux).HasColumnType("smalldatetime");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDR_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[DR_Num]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DR_NumNavigation).WithMany(p => p.F_DRECOUVREMENTEC)
                .HasPrincipalKey(p => p.DR_Num)
                .HasForeignKey(d => d.DR_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DRECOUVREMENTEC_DR_Num");

            entity.HasOne(d => d.EC_NoNavigation).WithOne(p => p.F_DRECOUVREMENTEC)
                .HasPrincipalKey<F_ECRITUREC>(p => p.EC_No)
                .HasForeignKey<F_DRECOUVREMENTEC>(d => d.EC_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DRECOUVREMENTEC_EC_No");
        });

        modelBuilder.Entity<F_DRECOUVREMENTIV>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_DRECOUVREMENTIV");

            entity.Property(e => e.DR_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.IV_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.IV_DateAlerte).HasColumnType("smalldatetime");
            entity.Property(e => e.IV_DatePromesse).HasColumnType("smalldatetime");
            entity.Property(e => e.IV_Document)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.IV_FraiImpaye).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.IV_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IV_Modele)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.IV_Penalite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.IV_PerteProbable).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.IV_Raison)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.IV_User)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDR_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[DR_Num]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DR_NumNavigation).WithMany(p => p.F_DRECOUVREMENTIV)
                .HasPrincipalKey(p => p.DR_Num)
                .HasForeignKey(d => d.DR_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_DRECOUVREMENTIV_DR_Num");

            entity.HasOne(d => d.cbES_NoNavigation).WithMany(p => p.F_DRECOUVREMENTIV)
                .HasPrincipalKey(p => p.ES_No)
                .HasForeignKey(d => d.cbES_No)
                .HasConstraintName("FKA_F_DRECOUVREMENTIV_ES_No");
        });

        modelBuilder.Entity<F_EBUDGET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_EBUDGET");

            entity.HasIndex(e => new { e.BD_No, e.cbCG_Num }, "IEB_BDNO").IsUnique();

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.BD_NoNavigation).WithMany(p => p.F_EBUDGET)
                .HasPrincipalKey(p => p.BD_No)
                .HasForeignKey(d => d.BD_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EBUDGET_BD_No");

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_EBUDGET)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EBUDGET_CG_Num");
        });

        modelBuilder.Entity<F_ECALENDRIER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ECALENDRIER");

            entity.HasIndex(e => new { e.CAL_No, e.ECAL_Date }, "IECAL_DATE").IsUnique();

            entity.Property(e => e.ECAL_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ECAL_Motif)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CAL_NoNavigation).WithMany(p => p.F_ECALENDRIER)
                .HasPrincipalKey(p => p.CAL_No)
                .HasForeignKey(d => d.CAL_No)
                .HasConstraintName("FKA_F_ECALENDRIER_CAL_No");
        });

        modelBuilder.Entity<F_ECRITUREA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ECRITUREA");

            entity.HasIndex(e => new { e.EC_No, e.N_Analytique, e.EA_Ligne }, "IEA_LIGNE").IsUnique();

            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EA_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EA_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.EC_NoNavigation).WithMany(p => p.F_ECRITUREA)
                .HasPrincipalKey(p => p.EC_No)
                .HasForeignKey(d => d.EC_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITUREA_EC_No");

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_ECRITUREA)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITUREA_CA_Num");
        });

        modelBuilder.Entity<F_ECRITUREC>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ECRITUREC");

            entity.HasIndex(e => e.EC_No, "IEC_ECNO").IsUnique();

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCont)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.EC_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateOp).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DatePenal).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateRappro).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateRegle).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_DateRelance).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_Devise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Echeance).HasColumnType("smalldatetime");
            entity.Property(e => e.EC_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.EC_Lettrage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_LettrageQ)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_MontantRegle).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Parite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EC_Pointage)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EC_RefPiece)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.EC_Reference)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.EC_TresoPiece)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.JM_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbCreation)
                .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))")
                .HasColumnType("datetime");
            entity.Property(e => e.cbEC_Piece)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len(isnull([EC_Piece],''))+(1)))+isnull([EC_Piece],'')))", false);
            entity.Property(e => e.cbEC_RefPiece)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([EC_RefPiece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJO_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),[JO_Num]))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTA_Code)
                .HasMaxLength(6)
                .HasComputedColumnSql("(CONVERT([varbinary](6),isnull([TA_Code],'')))", false);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_ECRITUREC)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITUREC_EC_CG_NUM");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_ECRITUREC)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("FKA_F_ECRITUREC_EC_CT_NUM");

            entity.HasOne(d => d.TA_CodeNavigation).WithMany(p => p.F_ECRITUREC)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code)
                .HasConstraintName("FKA_F_ECRITUREC_EC_TA_CODE");
        });

        modelBuilder.Entity<F_ECRITURECMEDIA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ECRITURECMEDIA");

            entity.Property(e => e.EM_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.EM_Fichier)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.EC_NoNavigation).WithMany(p => p.F_ECRITURECMEDIA)
                .HasPrincipalKey(p => p.EC_No)
                .HasForeignKey(d => d.EC_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITURECMEDIA_EC_No");
        });

        modelBuilder.Entity<F_ECRITUREF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ECRITUREF");

            entity.HasIndex(e => e.EF_No, "IEF_EFNO").IsUnique();

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EF_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.EF_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.EF_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EF_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEF_Piece)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len(isnull([EF_Piece],''))+(1)))+isnull([EF_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_ECRITUREF)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITUREF_CG_Num");
        });

        modelBuilder.Entity<F_ECRITURER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ECRITURER");

            entity.HasIndex(e => e.ER_No, "IER_ERNO").IsUnique();

            entity.Property(e => e.CA_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ER_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ER_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.ER_MontantA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ER_Piece)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ER_QuantiteA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ER_RefPiece)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.JA_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CA_Num]))", false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbER_Piece)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([ER_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJA_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),[JA_Num]))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_ECRITURER)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITURER_CG_Num");

            entity.HasOne(d => d.F_COMPTEA).WithMany(p => p.F_ECRITURER)
                .HasPrincipalKey(p => new { p.N_Analytique, p.CA_Num })
                .HasForeignKey(d => new { d.N_Analytique, d.CA_Num })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ECRITURER_CA_Num");
        });

        modelBuilder.Entity<F_EMODELEA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_EMODELEA");

            entity.HasIndex(e => new { e.MA_No, e.EA_Date }, "IEA_DATE").IsUnique();

            entity.Property(e => e.EA_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.EA_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.MA_NoNavigation).WithMany(p => p.F_EMODELEA)
                .HasPrincipalKey(p => p.MA_No)
                .HasForeignKey(d => d.MA_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EMODELEA_MA_No");
        });

        modelBuilder.Entity<F_EMODELEG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_EMODELEG");

            entity.HasIndex(e => new { e.MG_No, e.N_Analytique, e.cbCX_Num }, "IEG_MGNO").IsUnique();

            entity.Property(e => e.CX_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.EG_VRepart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCX_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CX_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.MG_NoNavigation).WithMany(p => p.F_EMODELEG)
                .HasPrincipalKey(p => p.MG_No)
                .HasForeignKey(d => d.MG_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EMODELEG_MG_No");
        });

        modelBuilder.Entity<F_EMODELER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_EMODELER");

            entity.HasIndex(e => new { e.MR_No, e.ER_NbJour, e.N_Reglement }, "IER_NBJOUR").IsUnique();

            entity.Property(e => e.ER_VRepart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.MR_NoNavigation).WithMany(p => p.F_EMODELER)
                .HasPrincipalKey(p => p.MR_No)
                .HasForeignKey(d => d.MR_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EMODELER_MR_No");
        });

        modelBuilder.Entity<F_ENUMCOND>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ENUMCOND");

            entity.HasIndex(e => new { e.EC_Champ, e.cbEC_Enumere, e.EC_Quantite }, "IEC_ENUMERE").IsUnique();

            entity.Property(e => e.EC_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EC_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEC_Enumere)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([EC_Enumere],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_ENUMGAMME>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ENUMGAMME");

            entity.Property(e => e.EG_BorneSup).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.EG_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEG_Enumere)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([EG_Enumere],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_ENUMLIBRECIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ENUMLIBRECIAL");

            entity.HasIndex(e => new { e.N_File, e.N_Info, e.cbEL_Intitule }, "IELCIAL_INT").IsUnique();

            entity.Property(e => e.EL_Intitule)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEL_Intitule)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([EL_Intitule],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_ENUMLIBRECPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ENUMLIBRECPTA");

            entity.HasIndex(e => new { e.N_File, e.N_Info, e.cbEL_Intitule }, "IELCPTA_INT").IsUnique();

            entity.Property(e => e.EL_Intitule)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbEL_Intitule)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([EL_Intitule],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_ENUMSTAT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ENUMSTAT");

            entity.HasIndex(e => new { e.N_Statistique, e.cbES_Intitule }, "IES_INT").IsUnique();

            entity.Property(e => e.ES_Intitule)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbES_Intitule)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),isnull([ES_Intitule],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_ENUMSTATART>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ENUMSTATART");

            entity.HasIndex(e => new { e.SA_Champ, e.cbSA_Enumere }, "ISA_ENUMERE").IsUnique();

            entity.Property(e => e.SA_Enumere)
                .IsRequired()
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbSA_Enumere)
                .HasMaxLength(22)
                .HasComputedColumnSql("(CONVERT([varbinary](22),[SA_Enumere]))", false);
        });

        modelBuilder.Entity<F_EPROTECTIONCIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_EPROTECTIONCIAL");

            entity.HasIndex(e => new { e.PROT_No, e.EPROT_Cmd }, "IEPROTCIAL_CMD").IsUnique();

            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.PROT_NoNavigation).WithMany(p => p.F_EPROTECTIONCIAL)
                .HasPrincipalKey(p => p.PROT_No)
                .HasForeignKey(d => d.PROT_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EPROTECTIONCIAL_PROT_No");
        });

        modelBuilder.Entity<F_EPROTECTIONCPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_EPROTECTIONCPTA");

            entity.HasIndex(e => new { e.PROT_No, e.EPROT_Cmd }, "IEPROTCPTA_CMD").IsUnique();

            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.PROT_NoNavigation).WithMany(p => p.F_EPROTECTIONCPTA)
                .HasPrincipalKey(p => p.PROT_No)
                .HasForeignKey(d => d.PROT_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_EPROTECTIONCPTA_PROT_No");
        });

        modelBuilder.Entity<F_ESCENARIO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ESCENARIO");

            entity.HasIndex(e => new { e.SC_No, e.ES_Ligne }, "IES_LIGNE").IsUnique();

            entity.HasIndex(e => e.ES_No, "IES_NO").IsUnique();

            entity.Property(e => e.ES_Document)
                .HasMaxLength(259)
                .IsUnicode(false);
            entity.Property(e => e.ES_FraiImpaye).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ES_Intitule)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ES_No).IsRequired();
            entity.Property(e => e.ES_PerteProbable).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.SC_NoNavigation).WithMany(p => p.F_ESCENARIO)
                .HasPrincipalKey(p => p.SC_No)
                .HasForeignKey(d => d.SC_No)
                .HasConstraintName("FKA_F_ESCENARIO_SC_No");
        });

        modelBuilder.Entity<F_ETABLEAU>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ETABLEAU");

            entity.HasIndex(e => new { e.cbCY_Num, e.cbTB_Num, e.ET_Exercice, e.ET_Ligne }, "IET_LIGNE").IsUnique();

            entity.Property(e => e.CY_Num)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne01ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne01ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne01ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne02ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne02ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne02ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne03ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne03ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne03ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne04ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne04ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne04ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne05ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne05ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne05ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne06ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne06ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne06ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne07ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne07ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne07ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne08ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne08ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne08ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne09ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne09ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne09ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne10ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne10ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne10ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne11ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne11ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne11ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne12ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne12ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne12ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne13ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne13ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne13ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne14ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne14ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne14ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne15ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne15ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne15ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne16ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne16ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne16ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne17ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne17ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne17ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne18ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne18ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne18ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne19ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne19ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne19ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.ET_Colonne20ET_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.ET_Colonne20ET_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.ET_Colonne20ET_Texte)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.TB_Num)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbCY_Num)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([CY_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTB_Num)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([TB_Num],'')))", false);
        });

        modelBuilder.Entity<F_ETAXE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_ETAXE");

            entity.HasIndex(e => new { e.TA_No, e.cbCG_Num }, "IET_TANO").IsUnique();

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_ETAXE)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ETAXE_CG_Num");

            entity.HasOne(d => d.TA_NoNavigation).WithMany(p => p.F_ETAXE)
                .HasPrincipalKey(p => p.TA_No)
                .HasForeignKey(d => d.TA_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_ETAXE_TA_No");
        });

        modelBuilder.Entity<F_FAMCLIENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMCLIENT");

            entity.HasIndex(e => new { e.cbFA_CodeFamille, e.cbCT_Num }, "IFC_FAMCLI").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FC_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_FAMCLIENT)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_FAMCLIENT_CT_Num");
        });

        modelBuilder.Entity<F_FAMCOMPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMCOMPTA");

            entity.HasIndex(e => new { e.cbFA_CodeFamille, e.FCP_TypeFacture, e.FCP_Type, e.FCP_Champ }, "IFCP_CODE").IsUnique();

            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_CompteA)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_CompteG)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_Date1).HasColumnType("smalldatetime");
            entity.Property(e => e.FCP_ComptaCPT_Date2).HasColumnType("smalldatetime");
            entity.Property(e => e.FCP_ComptaCPT_Date3).HasColumnType("smalldatetime");
            entity.Property(e => e.FCP_ComptaCPT_Taxe1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_Taxe2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_Taxe3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_TaxeAnc1)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_TaxeAnc2)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.FCP_ComptaCPT_TaxeAnc3)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.FCP_ComptaCPT_CompteGNavigation).WithMany(p => p.F_FAMCOMPTA)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.FCP_ComptaCPT_CompteG)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_COMPTEG");

            entity.HasOne(d => d.FCP_ComptaCPT_Taxe1Navigation).WithMany(p => p.F_FAMCOMPTAFCP_ComptaCPT_Taxe1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.FCP_ComptaCPT_Taxe1)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_Taxe1");

            entity.HasOne(d => d.FCP_ComptaCPT_Taxe2Navigation).WithMany(p => p.F_FAMCOMPTAFCP_ComptaCPT_Taxe2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.FCP_ComptaCPT_Taxe2)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_Taxe2");

            entity.HasOne(d => d.FCP_ComptaCPT_Taxe3Navigation).WithMany(p => p.F_FAMCOMPTAFCP_ComptaCPT_Taxe3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.FCP_ComptaCPT_Taxe3)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_Taxe3");

            entity.HasOne(d => d.FCP_ComptaCPT_TaxeAnc1Navigation).WithMany(p => p.F_FAMCOMPTAFCP_ComptaCPT_TaxeAnc1Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.FCP_ComptaCPT_TaxeAnc1)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_TaxeAnc1");

            entity.HasOne(d => d.FCP_ComptaCPT_TaxeAnc2Navigation).WithMany(p => p.F_FAMCOMPTAFCP_ComptaCPT_TaxeAnc2Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.FCP_ComptaCPT_TaxeAnc2)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_TaxeAnc2");

            entity.HasOne(d => d.FCP_ComptaCPT_TaxeAnc3Navigation).WithMany(p => p.F_FAMCOMPTAFCP_ComptaCPT_TaxeAnc3Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.FCP_ComptaCPT_TaxeAnc3)
                .HasConstraintName("FKA_CPTAF_FAMCOMPTA_FCP_C_TaxeAnc3");
        });

        modelBuilder.Entity<F_FAMFOURNISS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMFOURNISS");

            entity.HasIndex(e => new { e.cbFA_CodeFamille, e.cbCT_Num }, "IFF_REF").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FF_Colisage).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FF_ConvDiv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FF_Conversion).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FF_QteMini).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FF_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_FAMFOURNISS)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_FAMFOURNISS_CT_Num");
        });

        modelBuilder.Entity<F_FAMILLE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMILLE");

            entity.HasIndex(e => new { e.cbFA_CodeFamille, e.FA_Type }, "IFA_CODE").IsUnique();

            entity.Property(e => e.FA_Central)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FA_CodeFiscal)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.FA_Coef).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais01FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais02FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais03FR_Denomination)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.FA_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.FA_RacineCB)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.FA_RacineRef)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.FA_Stat01)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Stat02)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Stat03)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Stat04)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.FA_Stat05)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_Central)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([FA_Central],'')))", false);
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(13)
                .HasComputedColumnSql("(CONVERT([varbinary](13),[FA_CodeFamille]+'z'))", false);
            entity.Property(e => e.cbFA_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([FA_Intitule],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.cbCL_No1Navigation).WithMany(p => p.F_FAMILLEcbCL_No1Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No1)
                .HasConstraintName("FKA_F_FAMILLE_CL_No1");

            entity.HasOne(d => d.cbCL_No2Navigation).WithMany(p => p.F_FAMILLEcbCL_No2Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No2)
                .HasConstraintName("FKA_F_FAMILLE_CL_No2");

            entity.HasOne(d => d.cbCL_No3Navigation).WithMany(p => p.F_FAMILLEcbCL_No3Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No3)
                .HasConstraintName("FKA_F_FAMILLE_CL_No3");

            entity.HasOne(d => d.cbCL_No4Navigation).WithMany(p => p.F_FAMILLEcbCL_No4Navigation)
                .HasPrincipalKey(p => p.CL_No)
                .HasForeignKey(d => d.cbCL_No4)
                .HasConstraintName("FKA_F_FAMILLE_CL_No4");
        });

        modelBuilder.Entity<F_FAMMODELE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMMODELE");

            entity.HasIndex(e => new { e.cbFA_CodeFamille, e.FM_Domaine }, "IFM_CODE").IsUnique();

            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.MO_NoNavigation).WithMany(p => p.F_FAMMODELE)
                .HasPrincipalKey(p => p.MO_No)
                .HasForeignKey(d => d.MO_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_FAMMODELE_MO_No");
        });

        modelBuilder.Entity<F_FAMTARIF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMTARIF");

            entity.HasIndex(e => new { e.cbFA_CodeFamille, e.FT_Categorie }, "IFT_REF").IsUnique();

            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FT_Coef).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FT_Remise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_FAMTARIFQTE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FAMTARIFQTE");

            entity.Property(e => e.FA_CodeFamille)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.FQ_BorneSup).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FQ_RefCF)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.FQ_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FQ_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.FQ_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFA_CodeFamille)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);
            entity.Property(e => e.cbFQ_RefCF)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([FQ_RefCF],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_FOURCHETTERESULTAT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_FOURCHETTERESULTAT");

            entity.HasIndex(e => new { e.N_Resultat, e.cbCG_NumDe }, "IFR_CGNUM").IsUnique();

            entity.Property(e => e.CG_NumA)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumDe)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_NumDe)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_NumDe],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_GAMSTOCK>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_GAMSTOCK");

            entity.HasIndex(e => new { e.cbAR_Ref, e.DE_No, e.AG_No1, e.AG_No2 }, "IGS_NODEP").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GS_MontSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteAControler).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteCom).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteComCM).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteMaxi).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteMini).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QtePrepa).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteRes).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteResCM).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GS_QteSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_GAMSTOCK)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_GAMSTOCK_AR_Ref");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_GAMSTOCK)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_GAMSTOCK_DE_No");

            entity.HasOne(d => d.cbDP_NoControleNavigation).WithMany(p => p.F_GAMSTOCKcbDP_NoControleNavigation)
                .HasPrincipalKey(p => p.DP_No)
                .HasForeignKey(d => d.cbDP_NoControle)
                .HasConstraintName("FKA_F_GAMSTOCK_DP_NoControle");

            entity.HasOne(d => d.cbDP_NoPrincipalNavigation).WithMany(p => p.F_GAMSTOCKcbDP_NoPrincipalNavigation)
                .HasPrincipalKey(p => p.DP_No)
                .HasForeignKey(d => d.cbDP_NoPrincipal)
                .HasConstraintName("FKA_F_GAMSTOCK_DP_NoPrincipal");
        });

        modelBuilder.Entity<F_GAMSTOCKEMPL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_GAMSTOCKEMPL");

            entity.HasIndex(e => new { e.cbAR_Ref, e.DE_No, e.AG_No1, e.AG_No2, e.DP_No }, "IGE_NODEP").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GE_QteAControler).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GE_QtePrepa).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.GE_QteSto).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_GAMSTOCKEMPL)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_GAMSTOCKEMPL_AR_Ref");

            entity.HasOne(d => d.F_DEPOTEMPL).WithMany(p => p.F_GAMSTOCKEMPL)
                .HasPrincipalKey(p => new { p.DE_No, p.DP_No })
                .HasForeignKey(d => new { d.DE_No, d.DP_No })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_GAMSTOCKEMPL_GAMDENO_DPNO");
        });

        modelBuilder.Entity<F_GLOSSAIRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_GLOSSAIRE");

            entity.HasIndex(e => e.GL_No, "IGL_NO").IsUnique();

            entity.Property(e => e.GL_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.GL_No).IsRequired();
            entity.Property(e => e.GL_PeriodeDeb).HasColumnType("smalldatetime");
            entity.Property(e => e.GL_PeriodeFin).HasColumnType("smalldatetime");
            entity.Property(e => e.GL_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.GL_Text).IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbGL_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([GL_Intitule],'')))", false);
            entity.Property(e => e.cbGL_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([GL_Raccourci],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_INTERBANCAIRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_INTERBANCAIRE");

            entity.HasIndex(e => new { e.cbIB_AFB, e.IB_Sens }, "IIB_AFB").IsUnique();

            entity.HasIndex(e => new { e.IB_AFB, e.IB_Sens }, "UKA_F_INTERBANCAIRE_IB_AFB").IsUnique();

            entity.Property(e => e.IB_AFB)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.IB_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.IB_Nature)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.IB_RapproAFB)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbIB_AFB)
                .HasMaxLength(4)
                .HasComputedColumnSql("(CONVERT([varbinary](4),[IB_AFB]))", false);
            entity.Property(e => e.cbIB_RapproAFB)
                .HasMaxLength(4)
                .HasComputedColumnSql("(CONVERT([varbinary](4),isnull([IB_RapproAFB],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_JMOUV>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_JMOUV");

            entity.HasIndex(e => new { e.cbJO_Num, e.JM_Date }, "IJM_JONUM").IsUnique();

            entity.Property(e => e.JM_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.JM_DateCloture).HasColumnType("smalldatetime");
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJO_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),[JO_Num]))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_JOURNAUX>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_JOURNAUX");

            entity.HasIndex(e => e.cbJO_Num, "IJO_NUM").IsUnique();

            entity.Property(e => e.CG_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.JO_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJO_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([JO_Intitule],'')))", false);
            entity.Property(e => e.cbJO_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),[JO_Num]))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_JOURNAUX)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .HasConstraintName("FKA_F_JOURNAUX_CG_Num");
        });

        modelBuilder.Entity<F_JOURNAUXA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_JOURNAUXA");

            entity.HasIndex(e => e.cbJA_Num, "IJA_NUM").IsUnique();

            entity.Property(e => e.JA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JA_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJA_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([JA_Intitule],'')))", false);
            entity.Property(e => e.cbJA_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),[JA_Num]))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_LIBELLE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_LIBELLE");

            entity.HasIndex(e => e.cbLB_Raccourci, "ILB_RACC").IsUnique();

            entity.Property(e => e.LB_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.LB_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbLB_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([LB_Intitule],'')))", false);
            entity.Property(e => e.cbLB_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([LB_Raccourci],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_LIENRECTIF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_LIENRECTIF");

            entity.Property(e => e.LR_Rectificative)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.LR_Rectifiee)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbLR_Rectificative)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([LR_Rectificative],''))+(1)))+isnull([LR_Rectificative],'')))", false);
            entity.Property(e => e.cbLR_Rectifiee)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([LR_Rectifiee],''))+(1)))+isnull([LR_Rectifiee],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_LIGNEARCHIVE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_LIGNEARCHIVE");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.EU_Enumere)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_CMUP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Design)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.LA_PUTTC).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_PoidsNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_PrixRU).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_PrixUnitaire).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Taxe1).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Taxe2).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LA_Taxe3).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LS_Complement)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.LS_NoSerie)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.TA_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Ref],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTA_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([TA_Piece])+(1)))+[TA_Piece]))", false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_LIGNEARCHIVE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("FKA_F_LIGNEARCHIVE_AR_Ref");

            entity.HasOne(d => d.TA_PieceNavigation).WithMany(p => p.F_LIGNEARCHIVE)
                .HasPrincipalKey(p => p.TA_Piece)
                .HasForeignKey(d => d.TA_Piece)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_LIGNEARCHIVE_TA_Piece");

            entity.HasOne(d => d.cbCO_NoNavigation).WithMany(p => p.F_LIGNEARCHIVE)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_No)
                .HasConstraintName("FKA_CPTAF_LIGNEARCHIVE_RE_NO");
        });

        modelBuilder.Entity<F_LIVRAISON>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_LIVRAISON");

            entity.HasIndex(e => e.LI_No, "ILI_NO").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.LI_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.LI_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.LI_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.LI_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.LI_Contact)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.LI_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.LI_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.LI_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.LI_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.LI_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.LI_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbLI_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([LI_Intitule],'')))", false);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_LIVRAISON)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_LIVRAISON_CT_Num");
        });

        modelBuilder.Entity<F_LOTFIFO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_LOTFIFO");

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.LF_DateBL).HasColumnType("smalldatetime");
            entity.Property(e => e.LF_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LF_QteRestant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_LOTFIFO)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_LOTFIFO_AR_Ref");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_LOTFIFO)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_LOTFIFO_DE_No");
        });

        modelBuilder.Entity<F_LOTSERIE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_LOTSERIE");

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.LS_Complement)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.LS_Fabrication).HasColumnType("smalldatetime");
            entity.Property(e => e.LS_NoSerie)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.LS_Peremption).HasColumnType("smalldatetime");
            entity.Property(e => e.LS_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LS_QteRes).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.LS_QteRestant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbLS_NoSerie)
                .HasMaxLength(32)
                .HasComputedColumnSql("(CONVERT([varbinary](32),isnull([LS_NoSerie],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_LOTSERIE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_LOTSERIE_AR_Ref");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_LOTSERIE)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_LOTSERIE_DE_No");
        });

        modelBuilder.Entity<F_MANDAT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_MANDAT");

            entity.HasIndex(e => e.MD_No, "IMD_NO").IsUnique();

            entity.HasIndex(e => e.cbMD_Reference, "IMD_REFERENCE").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.MD_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.MD_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.MD_Reference)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbMD_Reference)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([MD_Reference],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_MODELE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_MODELE");

            entity.HasIndex(e => e.cbMO_Intitule, "IMO_INTITULE").IsUnique();

            entity.HasIndex(e => e.MO_No, "IMO_NO").IsUnique();

            entity.Property(e => e.MO_Calcul).IsUnicode(false);
            entity.Property(e => e.MO_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.MO_No).IsRequired();
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbMO_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([MO_Intitule],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_MODELEA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_MODELEA");

            entity.HasIndex(e => e.cbMA_Intitule, "IMA_INT").IsUnique();

            entity.HasIndex(e => e.MA_No, "IMA_NO").IsUnique();

            entity.Property(e => e.JO_Num)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.MA_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.MA_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.MA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.MA_Piece)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJO_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),[JO_Num]))", false);
            entity.Property(e => e.cbMA_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([MA_Intitule],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.PI_NoNavigation).WithMany(p => p.F_MODELEA)
                .HasPrincipalKey(p => p.PI_No)
                .HasForeignKey(d => d.PI_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_MODELEA_PI_No");
        });

        modelBuilder.Entity<F_MODELEG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_MODELEG");

            entity.HasIndex(e => e.cbMG_Intitule, "IMG_INT").IsUnique();

            entity.HasIndex(e => e.MG_No, "IMG_NO").IsUnique();

            entity.Property(e => e.MG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.MG_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbMG_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([MG_Intitule],'')))", false);
            entity.Property(e => e.cbMG_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([MG_Raccourci],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_MODELER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_MODELER");

            entity.HasIndex(e => e.cbMR_Intitule, "IMR_INT").IsUnique();

            entity.HasIndex(e => e.MR_No, "IMR_NO").IsUnique();

            entity.Property(e => e.MR_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbMR_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([MR_Intitule],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_NOMENCLAT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_NOMENCLAT");

            entity.HasIndex(e => new { e.cbAR_Ref, e.AG_No1Comp, e.AG_No2Comp, e.cbNO_RefDet, e.AG_No1, e.AG_No2, e.cbNO_Operation }, "INO_REF").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.NO_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.NO_Operation)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.NO_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.NO_RefDet)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.NO_Repartition).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbNO_Operation)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([NO_Operation],'')))", false);
            entity.Property(e => e.cbNO_RefDet)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[NO_RefDet]))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_NOMENCLATAR_RefNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_NOMENCLAT_AR_Ref");

            entity.HasOne(d => d.NO_RefDetNavigation).WithMany(p => p.F_NOMENCLATNO_RefDetNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.NO_RefDet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_NOMENCLAT_NO_RefDet");

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_NOMENCLAT)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_NOMENCLAT_DE_No");
        });

        modelBuilder.Entity<F_PAYS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PAYS");

            entity.HasIndex(e => e.cbPA_Intitule, "IPA_INTITULE").IsUnique();

            entity.Property(e => e.PA_Assurance).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PA_Code)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.PA_CodeEdi)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.PA_CodeISO2)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.PA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PA_Transport).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbPA_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([PA_Intitule],'')))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_PIECE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PIECE");

            entity.HasIndex(e => e.cbPI_Intitule, "IPI_INT").IsUnique();

            entity.HasIndex(e => e.PI_No, "IPI_NO").IsUnique();

            entity.Property(e => e.JO_Num)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.PI_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PI_Raccourci)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbJO_Num)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([JO_Num],'')))", false);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbPI_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([PI_Intitule],'')))", false);
            entity.Property(e => e.cbPI_Raccourci)
                .HasMaxLength(8)
                .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([PI_Raccourci],'')))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_PIECEA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PIECEA");

            entity.HasIndex(e => new { e.PI_No, e.PG_Ligne, e.N_Analytique, e.PA_Ligne }, "IPA_LIGNE").IsUnique();

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.PA_VMontant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PA_VQuantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.F_PIECEG).WithMany(p => p.F_PIECEA)
                .HasPrincipalKey(p => new { p.PI_No, p.PG_Ligne })
                .HasForeignKey(d => new { d.PI_No, d.PG_Ligne })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PIECEA_PI_LIGNE");
        });

        modelBuilder.Entity<F_PIECEG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PIECEG");

            entity.HasIndex(e => new { e.PI_No, e.PG_Ligne }, "IPG_LIGNE").IsUnique();

            entity.Property(e => e.CG_Num)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumCont)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CT_NumCont)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Devise)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Echeance)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL01)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL02)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL03)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL04)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL05)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL06)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL07)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL08)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL09)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL10)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL11)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL12)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL13)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL14)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL15)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL16)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL17)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL18)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL19)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL20)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL21)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL22)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL23)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL24)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL25)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL26)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL27)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL28)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL29)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL30)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL31)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL32)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL33)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL34)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL35)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL36)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL37)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL38)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL39)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL40)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL41)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL42)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL43)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL44)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL45)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL46)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL47)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL48)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL49)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL50)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL51)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL52)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL53)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL54)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL55)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL56)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL57)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL58)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL59)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL60)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL61)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL62)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL63)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_InfoL64)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Jour)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Montant)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Parite)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Piece)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Quantite)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_RefPiece)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PG_Reference)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.PI_NoNavigation).WithMany(p => p.F_PIECEG)
                .HasPrincipalKey(p => p.PI_No)
                .HasForeignKey(d => d.PI_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PIECEG_PI_No");
        });

        modelBuilder.Entity<F_PREVISION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PREVISION");

            entity.HasIndex(e => new { e.cbAR_Ref, e.AG_No1Comp, e.AG_No2Comp, e.DE_No, e.PV_Date }, "IPV_DEPOTDATE").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.PV_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.PV_Qte).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_PREVISION)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PREVISION_AR_Ref");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_PREVISION)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PREVISION_DE_No");
        });

        modelBuilder.Entity<F_PROJETFABRICATION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PROJETFABRICATION");

            entity.HasIndex(e => new { e.PF_Type, e.cbPF_Num }, "IPF_NUM").IsUnique();

            entity.HasIndex(e => e.PF_Num, "UKA_F_PROJETFABRICATION_PF_Num").IsUnique();

            entity.Property(e => e.CA_Num)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.PF_DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.PF_DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.PF_Intitule)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCA_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbPF_Intitule)
                .HasMaxLength(70)
                .HasComputedColumnSql("(CONVERT([varbinary](70),isnull([PF_Intitule],'')))", false);
            entity.Property(e => e.cbPF_Num)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([PF_Num])+(1)))+[PF_Num]))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_PROJETFABRICATION)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_PROJETFABRICATION_DE_No");
        });

        modelBuilder.Entity<F_PROJETHISTO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PROJETHISTO");

            entity.Property(e => e.AR_RefComposant)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.PH_CoutRealise).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PH_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.PH_Intitule)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PH_QteRealisee).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PH_QteReservee).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PH_TempsRealise)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PP_Operation)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_RefComposant)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_RefComposant],'')))", false);
            entity.Property(e => e.cbAR_RefCompose)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_RefCompose]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbPF_Num)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([PF_Num])+(1)))+[PF_Num]))", false);
            entity.Property(e => e.cbPP_Operation)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([PP_Operation],'')))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefComposantNavigation).WithMany(p => p.F_PROJETHISTOAR_RefComposantNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_RefComposant)
                .HasConstraintName("FKA_F_PROJETHISTO_AR_RefComposant");

            entity.HasOne(d => d.AR_RefComposeNavigation).WithMany(p => p.F_PROJETHISTOAR_RefComposeNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_RefCompose)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PROJETHISTO_AR_RefCompose");

            entity.HasOne(d => d.PF_NumNavigation).WithMany(p => p.F_PROJETHISTO)
                .HasPrincipalKey(p => p.PF_Num)
                .HasForeignKey(d => d.PF_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PROJETHISTO_PF_Num");

            entity.HasOne(d => d.PP_NoNavigation).WithMany(p => p.F_PROJETHISTO)
                .HasPrincipalKey(p => p.PP_No)
                .HasForeignKey(d => d.PP_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PROJETHISTO_PP_No");
        });

        modelBuilder.Entity<F_PROJETLIGNE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PROJETLIGNE");

            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbPF_Num)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([PF_Num])+(1)))+[PF_Num]))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DL_NoNavigation).WithMany(p => p.F_PROJETLIGNE)
                .HasPrincipalKey(p => p.DL_No)
                .HasForeignKey(d => d.DL_No)
                .HasConstraintName("FKA_F_PROJETLIGNE_DL_No");

            entity.HasOne(d => d.PF_NumNavigation).WithMany(p => p.F_PROJETLIGNE)
                .HasPrincipalKey(p => p.PF_Num)
                .HasForeignKey(d => d.PF_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PROJETLIGNE_PF_Num");
        });

        modelBuilder.Entity<F_PROJETPLANNING>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PROJETPLANNING");

            entity.HasIndex(e => e.PP_No, "IPP_LIGNE").IsUnique();

            entity.Property(e => e.AR_RefComposant)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_RefCompose)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.PF_Num)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.PP_CoutStd).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PP_DateDebut).HasColumnType("smalldatetime");
            entity.Property(e => e.PP_DateFin).HasColumnType("smalldatetime");
            entity.Property(e => e.PP_HeureDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PP_HeureFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PP_Intitule)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PP_No).IsRequired();
            entity.Property(e => e.PP_Operation)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.PP_OperationChevauche)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.PP_PUHT).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PP_QteAffectee).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PP_QteRealisee).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PP_QteReservee).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PP_Quantite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PP_Temps)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PP_TempsAffecte)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PP_TempsRealise)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PP_ValeurChevauche).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RP_Code)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_RefComposant)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_RefComposant],'')))", false);
            entity.Property(e => e.cbAR_RefCompose)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_RefCompose]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbPF_Num)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([PF_Num])+(1)))+[PF_Num]))", false);
            entity.Property(e => e.cbPP_Operation)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([PP_Operation],'')))", false);
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRP_Code)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([RP_Code],'')))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefComposantNavigation).WithMany(p => p.F_PROJETPLANNINGAR_RefComposantNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_RefComposant)
                .HasConstraintName("FKA_F_PROJETPLANNING_AR_RefComposant");

            entity.HasOne(d => d.AR_RefComposeNavigation).WithMany(p => p.F_PROJETPLANNINGAR_RefComposeNavigation)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_RefCompose)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PROJETPLANNING_AR_RefCompose");

            entity.HasOne(d => d.PF_NumNavigation).WithMany(p => p.F_PROJETPLANNING)
                .HasPrincipalKey(p => p.PF_Num)
                .HasForeignKey(d => d.PF_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_PROJETPLANNING_PF_Num");

            entity.HasOne(d => d.RP_CodeNavigation).WithMany(p => p.F_PROJETPLANNING)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_Code)
                .HasConstraintName("FKA_F_PROJETPLANNING_RP_Code");

            entity.HasOne(d => d.cbDE_NoNavigation).WithMany(p => p.F_PROJETPLANNING)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.cbDE_No)
                .HasConstraintName("FKA_F_PROJETPLANNING_DE_No");
        });

        modelBuilder.Entity<F_PROTECTIONCIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PROTECTIONCIAL");

            entity.HasIndex(e => e.PROT_No, "IPROTCIAL_NO").IsUnique();

            entity.HasIndex(e => e.cbCIPROT_User, "IPROTCIAL_USER").IsUnique();

            entity.Property(e => e.PROT_DatePwd).HasColumnType("smalldatetime");
            entity.Property(e => e.PROT_Description)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PROT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PROT_LastLoginDate).HasColumnType("smalldatetime");
            entity.Property(e => e.PROT_LastLoginTime)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PROT_No).IsRequired();
            entity.Property(e => e.PROT_User)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCIPROT_User)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),upper([PROT_User])))", false);

            entity.HasOne(d => d.cbPROT_UserProfilNavigation).WithMany(p => p.InversecbPROT_UserProfilNavigation)
                .HasPrincipalKey(p => p.PROT_No)
                .HasForeignKey(d => d.cbPROT_UserProfil)
                .HasConstraintName("FKA_F_PROTECTIONCIAL_PROT_UserProfil");
        });

        modelBuilder.Entity<F_PROTECTIONCPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_PROTECTIONCPTA");

            entity.HasIndex(e => e.PROT_No, "IPROTCPTA_NO").IsUnique();

            entity.HasIndex(e => e.cbCIPROT_User, "IPROTCPTA_USER").IsUnique();

            entity.Property(e => e.PROT_DatePwd).HasColumnType("smalldatetime");
            entity.Property(e => e.PROT_Description)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PROT_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PROT_LastLoginDate).HasColumnType("smalldatetime");
            entity.Property(e => e.PROT_LastLoginTime)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PROT_No).IsRequired();
            entity.Property(e => e.PROT_User)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCIPROT_User)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),upper([PROT_User])))", false);

            entity.HasOne(d => d.cbPROT_UserProfilNavigation).WithMany(p => p.InversecbPROT_UserProfilNavigation)
                .HasPrincipalKey(p => p.PROT_No)
                .HasForeignKey(d => d.cbPROT_UserProfil)
                .HasConstraintName("FKA_F_PROTECTIONCPTA_PROT_UserProfil");
        });

        modelBuilder.Entity<F_RECTIFICATIONMOTIF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_RECTIFICATIONMOTIF");

            entity.HasIndex(e => e.cbRM_Intitule, "IRM_INTITULE").IsUnique();

            entity.Property(e => e.RM_Code)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.RM_Intitule)
                .IsRequired()
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRM_Intitule)
                .HasMaxLength(70)
                .HasComputedColumnSql("(CONVERT([varbinary](70),[RM_Intitule]))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
        });

        modelBuilder.Entity<F_REGLEARCHIVE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_REGLEARCHIVE");

            entity.Property(e => e.RA_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.RA_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RA_MontantDev).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTA_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([TA_Piece])+(1)))+[TA_Piece]))", false);

            entity.HasOne(d => d.TA_PieceNavigation).WithMany(p => p.F_REGLEARCHIVE)
                .HasPrincipalKey(p => p.TA_Piece)
                .HasForeignKey(d => d.TA_Piece)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REGLEARCHIVE_TA_Piece");

            entity.HasOne(d => d.cbCA_NoNavigation).WithMany(p => p.F_REGLEARCHIVE)
                .HasPrincipalKey(p => p.CA_No)
                .HasForeignKey(d => d.cbCA_No)
                .HasConstraintName("FKA_F_REGLEARCHIVE_CA_No");
        });

        modelBuilder.Entity<F_REGLECH>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_REGLECH");

            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.RC_Montant).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.DR_NoNavigation).WithMany(p => p.F_REGLECH)
                .HasPrincipalKey(p => p.DR_No)
                .HasForeignKey(d => d.DR_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REGLECH_DR_No");

            entity.HasOne(d => d.RG_NoNavigation).WithMany(p => p.F_REGLECH)
                .HasPrincipalKey(p => p.RG_No)
                .HasForeignKey(d => d.RG_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REGLECH_RG_No");
        });

        modelBuilder.Entity<F_REGLEMENTT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_REGLEMENTT");

            entity.HasIndex(e => new { e.cbCT_Num, e.RT_NbJour, e.N_Reglement }, "IRT_NBJOUR").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.RT_VRepart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_REGLEMENTT)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REGLEMENTT_CT_Num");
        });

        modelBuilder.Entity<F_REGREVISION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_REGREVISION");

            entity.HasIndex(e => e.EC_No, "IRR_ECNO").IsUnique();

            entity.Property(e => e.RR_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RR_Controleur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RR_DateCont).HasColumnType("smalldatetime");
            entity.Property(e => e.RR_DateRev).HasColumnType("smalldatetime");
            entity.Property(e => e.RR_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.RR_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.RR_Reviseur)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.EC_NoNavigation).WithOne(p => p.F_REGREVISION)
                .HasPrincipalKey<F_ECRITUREC>(p => p.EC_No)
                .HasForeignKey<F_REGREVISION>(d => d.EC_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REGREVISION_EC_No");
        });

        modelBuilder.Entity<F_REGTAXE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_REGTAXE");

            entity.HasIndex(e => e.EC_No, "IRT_ECNO").IsUnique();

            entity.Property(e => e.CG_Num01)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num02)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num03)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num04)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num05)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num06)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num07)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num08)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num09)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_Num10)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.JM_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.RT_Base01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base07).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base08).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base09).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Base10).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_DatePiece).HasColumnType("smalldatetime");
            entity.Property(e => e.RT_DateReg).HasColumnType("smalldatetime");
            entity.Property(e => e.RT_FactureRectif)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RT_Montant01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant07).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant08).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant09).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Montant10).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RT_Motif)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RT_NbFactures)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.RT_NumeroA)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.RT_NumeroDe)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code01)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code02)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code03)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code04)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code05)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code06)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code07)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code08)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code09)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Code10)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Taux01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux05).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux06).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux07).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux08).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux09).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Taux10).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CG_Num01Navigation).WithMany(p => p.F_REGTAXECG_Num01Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num01)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM01");

            entity.HasOne(d => d.CG_Num02Navigation).WithMany(p => p.F_REGTAXECG_Num02Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num02)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM02");

            entity.HasOne(d => d.CG_Num03Navigation).WithMany(p => p.F_REGTAXECG_Num03Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num03)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM03");

            entity.HasOne(d => d.CG_Num04Navigation).WithMany(p => p.F_REGTAXECG_Num04Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num04)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM04");

            entity.HasOne(d => d.CG_Num05Navigation).WithMany(p => p.F_REGTAXECG_Num05Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num05)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM05");

            entity.HasOne(d => d.CG_Num06Navigation).WithMany(p => p.F_REGTAXECG_Num06Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num06)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM06");

            entity.HasOne(d => d.CG_Num07Navigation).WithMany(p => p.F_REGTAXECG_Num07Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num07)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM07");

            entity.HasOne(d => d.CG_Num08Navigation).WithMany(p => p.F_REGTAXECG_Num08Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num08)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM08");

            entity.HasOne(d => d.CG_Num09Navigation).WithMany(p => p.F_REGTAXECG_Num09Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num09)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM09");

            entity.HasOne(d => d.CG_Num10Navigation).WithMany(p => p.F_REGTAXECG_Num10Navigation)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num10)
                .HasConstraintName("FKA_F_REGTAXE_CG_NUM10");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_REGTAXE)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("FKA_F_REGTAXE_CT_Num");

            entity.HasOne(d => d.EC_NoNavigation).WithOne(p => p.F_REGTAXE)
                .HasPrincipalKey<F_ECRITUREC>(p => p.EC_No)
                .HasForeignKey<F_REGTAXE>(d => d.EC_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REGTAXE_EC_No");

            entity.HasOne(d => d.TA_Code01Navigation).WithMany(p => p.F_REGTAXETA_Code01Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code01)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE01");

            entity.HasOne(d => d.TA_Code02Navigation).WithMany(p => p.F_REGTAXETA_Code02Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code02)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE02");

            entity.HasOne(d => d.TA_Code03Navigation).WithMany(p => p.F_REGTAXETA_Code03Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code03)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE03");

            entity.HasOne(d => d.TA_Code04Navigation).WithMany(p => p.F_REGTAXETA_Code04Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code04)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE04");

            entity.HasOne(d => d.TA_Code05Navigation).WithMany(p => p.F_REGTAXETA_Code05Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code05)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE05");

            entity.HasOne(d => d.TA_Code06Navigation).WithMany(p => p.F_REGTAXETA_Code06Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code06)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE06");

            entity.HasOne(d => d.TA_Code07Navigation).WithMany(p => p.F_REGTAXETA_Code07Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code07)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE07");

            entity.HasOne(d => d.TA_Code08Navigation).WithMany(p => p.F_REGTAXETA_Code08Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code08)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE08");

            entity.HasOne(d => d.TA_Code09Navigation).WithMany(p => p.F_REGTAXETA_Code09Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code09)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE09");

            entity.HasOne(d => d.TA_Code10Navigation).WithMany(p => p.F_REGTAXETA_Code10Navigation)
                .HasPrincipalKey(p => p.TA_Code)
                .HasForeignKey(d => d.TA_Code10)
                .HasConstraintName("FKA_F_REGTAXE_TA_CODE10");
        });

        modelBuilder.Entity<F_REPCOM>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_REPCOM");

            entity.HasIndex(e => new { e.CO_No, e.TF_No }, "IRC_REP").IsUnique();

            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.CO_NoNavigation).WithMany(p => p.F_REPCOM)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.CO_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_REPCOM_RE_NO");

            entity.HasOne(d => d.TF_NoNavigation).WithMany(p => p.F_REPCOM)
                .HasPrincipalKey(p => p.TF_No)
                .HasForeignKey(d => d.TF_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_REPCOM_TF_No");
        });

        modelBuilder.Entity<F_RESSCENTRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_RESSCENTRE");

            entity.HasIndex(e => new { e.cbRP_CodeRessource, e.cbRP_CodeCentre }, "IRC_RESSOURCE").IsUnique();

            entity.Property(e => e.RP_CodeCentre)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.RP_CodeRessource)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRP_CodeCentre)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[RP_CodeCentre]))", false);
            entity.Property(e => e.cbRP_CodeRessource)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[RP_CodeRessource]))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.RP_CodeCentreNavigation).WithMany(p => p.F_RESSCENTRERP_CodeCentreNavigation)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_CodeCentre)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_RESSCENTRE_RP_CodeCentre");

            entity.HasOne(d => d.RP_CodeRessourceNavigation).WithMany(p => p.F_RESSCENTRERP_CodeRessourceNavigation)
                .HasPrincipalKey(p => p.RP_Code)
                .HasForeignKey(d => d.RP_CodeRessource)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_RESSCENTRE_RP_CodeRessource");
        });

        modelBuilder.Entity<F_RESSOURCEPROD>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_RESSOURCEPROD");

            entity.HasIndex(e => e.cbRP_Code, "IRP_CODE").IsUnique();

            entity.HasIndex(e => e.RP_Code, "UKA_F_RESSOURCEPROD_RP_Code").IsUnique();

            entity.Property(e => e.AR_RefDefaut)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.RP_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RP_Central)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.RP_Code)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.RP_CodeExterne)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.RP_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.RP_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RP_Complement)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RP_ComplementAdresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RP_CoutStd).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.RP_DateCreation).HasColumnType("smalldatetime");
            entity.Property(e => e.RP_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RP_Horaire0101RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0101RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0102RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0102RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0201RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0201RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0202RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0202RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0301RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0301RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0302RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0302RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0401RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0401RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0402RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0402RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0501RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0501RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0502RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0502RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0601RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0601RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0602RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0602RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0701RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0701RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0702RP_PlageDebut)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Horaire0702RP_PlageFin)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Intitule)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.RP_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RP_Portable)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.RP_Region)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RP_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.RP_Temps)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RP_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.RP_Visite).HasColumnType("smalldatetime");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbRP_Central)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([RP_Central],'')))", false);
            entity.Property(e => e.cbRP_Code)
                .HasMaxLength(12)
                .HasComputedColumnSql("(CONVERT([varbinary](12),[RP_Code]))", false);
            entity.Property(e => e.cbRP_Intitule)
                .HasMaxLength(70)
                .HasComputedColumnSql("(CONVERT([varbinary](70),isnull([RP_Intitule],'')))", false);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.AR_RefDefautNavigation).WithMany(p => p.F_RESSOURCEPROD)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_RefDefaut)
                .HasConstraintName("FKA_F_RESSOURCEPROD_AR_Ref");

            entity.HasOne(d => d.CAL_NoNavigation).WithMany(p => p.F_RESSOURCEPROD)
                .HasPrincipalKey(p => p.CAL_No)
                .HasForeignKey(d => d.CAL_No)
                .HasConstraintName("FKA_CPTAF_RESSOURCEPROD_CAL_No");

            entity.HasOne(d => d.DE_NoNavigation).WithMany(p => p.F_RESSOURCEPROD)
                .HasPrincipalKey(p => p.DE_No)
                .HasForeignKey(d => d.DE_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_RESSOURCEPROD_DE_No");
        });

        modelBuilder.Entity<F_SCENARIO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_SCENARIO");

            entity.HasIndex(e => e.cbSC_Intitule, "ISC_INTITULE").IsUnique();

            entity.HasIndex(e => e.SC_No, "ISC_NO").IsUnique();

            entity.Property(e => e.SC_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.SC_No).IsRequired();
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbSC_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([SC_Intitule],'')))", false);
        });

        modelBuilder.Entity<F_TARIF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TARIF");

            entity.HasIndex(e => new { e.TF_Type, e.cbTF_Intitule, e.TF_Interes }, "ITF_INTITULE").IsUnique();

            entity.HasIndex(e => e.TF_No, "ITF_NO").IsUnique();

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.TF_Debut).HasColumnType("smalldatetime");
            entity.Property(e => e.TF_Fin).HasColumnType("smalldatetime");
            entity.Property(e => e.TF_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TF_No).IsRequired();
            entity.Property(e => e.TF_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TF_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TF_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Ref],'')))", false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTF_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([TF_Intitule],'')))", false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_TARIF)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .HasConstraintName("FKA_F_TARIF_AR_Ref");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_TARIF)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .HasConstraintName("FKA_CPTAF_TARIF_CT_Num");
        });

        modelBuilder.Entity<F_TARIFCOND>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TARIFCOND");

            entity.HasIndex(e => new { e.AR_Ref, e.TC_RefCF, e.CO_No }, "UKA_F_TARIFCOND_TC_RefCF").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.TC_Prix).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TC_PrixNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TC_RefCF)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTC_RefCF)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([TC_RefCF],'')))", false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_TARIFCOND)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TARIFCOND_AR_Ref");
        });

        modelBuilder.Entity<F_TARIFGAM>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TARIFGAM");

            entity.HasIndex(e => new { e.AR_Ref, e.TG_RefCF, e.AG_No1, e.AG_No2 }, "UKA_F_TARIFGAM_TG_REFGAM").IsUnique();

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.TG_CodeBarre)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.TG_Prix).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TG_PrixNouv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TG_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.TG_RefCF)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTG_CodeBarre)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([TG_CodeBarre],'')))", false);
            entity.Property(e => e.cbTG_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([TG_Ref],'')))", false);
            entity.Property(e => e.cbTG_RefCF)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([TG_RefCF],'')))", false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_TARIFGAM)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TARIFGAM_AR_Ref");
        });

        modelBuilder.Entity<F_TARIFQTE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TARIFQTE");

            entity.Property(e => e.AR_Ref)
                .IsRequired()
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.TQ_BorneSup).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TQ_PrixNet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TQ_RefCF)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.TQ_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TQ_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TQ_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbAR_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTQ_RefCF)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([TQ_RefCF],'')))", false);

            entity.HasOne(d => d.AR_RefNavigation).WithMany(p => p.F_TARIFQTE)
                .HasPrincipalKey(p => p.AR_Ref)
                .HasForeignKey(d => d.AR_Ref)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TARIFQTE_AR_Ref");
        });

        modelBuilder.Entity<F_TARIFREMISE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TARIFREMISE");

            entity.HasIndex(e => new { e.TF_No, e.TR_BorneSup }, "ITR_BORNE").IsUnique();

            entity.Property(e => e.TR_BorneSup).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TR_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TR_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TR_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);

            entity.HasOne(d => d.TF_NoNavigation).WithMany(p => p.F_TARIFREMISE)
                .HasPrincipalKey(p => p.TF_No)
                .HasForeignKey(d => d.TF_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TARIFREMISE_TF_No");
        });

        modelBuilder.Entity<F_TARIFSELECT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TARIFSELECT");

            entity.HasIndex(e => new { e.TF_No, e.TS_Interes, e.TS_Ref }, "UKA_F_TARIFSELECT_TS_Ref").IsUnique();

            entity.Property(e => e.TS_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTS_Ref)
                .HasMaxLength(20)
                .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([TS_Ref],'')))", false);

            entity.HasOne(d => d.TF_NoNavigation).WithMany(p => p.F_TARIFSELECT)
                .HasPrincipalKey(p => p.TF_No)
                .HasForeignKey(d => d.TF_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TARIFSELECT_TF_No");
        });

        modelBuilder.Entity<F_TAXE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TAXE");

            entity.HasIndex(e => e.cbTA_Code, "ITA_CODE").IsUnique();

            entity.HasIndex(e => e.TA_No, "ITA_NO").IsUnique();

            entity.HasIndex(e => e.TA_Code, "UKA_F_TAXE_TA_Code").IsUnique();

            entity.Property(e => e.CG_Num)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.TA_Assujet).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.TA_Code)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_EdiCode)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.TA_GrilleBase)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.TA_GrilleTaxe)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.TA_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.TA_Regroup)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.TA_Taux).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.cbCG_Num)
                .HasMaxLength(14)
                .HasComputedColumnSql("(CONVERT([varbinary](14),[CG_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification).HasColumnType("datetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTA_Code)
                .HasMaxLength(6)
                .HasComputedColumnSql("(CONVERT([varbinary](6),[TA_Code]))", false);
            entity.Property(e => e.cbTA_Intitule)
                .HasMaxLength(36)
                .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([TA_Intitule],'')))", false);
            entity.Property(e => e.cbTA_Regroup)
                .HasMaxLength(6)
                .HasComputedColumnSql("(CONVERT([varbinary](6),isnull([TA_Regroup],'')))", false);

            entity.HasOne(d => d.CG_NumNavigation).WithMany(p => p.F_TAXE)
                .HasPrincipalKey(p => p.CG_Num)
                .HasForeignKey(d => d.CG_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TAXE_CG_Num");
        });

        modelBuilder.Entity<F_TICKETARCHIVE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_F_TICKETARCHIVE");

            entity.HasIndex(e => e.TA_Piece, "UKA_F_TICKETARCHIVE_TA_Piece").IsUnique();

            entity.Property(e => e.CT_Num)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DO_Piece)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.TA_Date).HasColumnType("smalldatetime");
            entity.Property(e => e.TA_Heure)
                .HasMaxLength(9)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TA_Piece)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.cbCT_Num)
                .HasMaxLength(18)
                .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);
            entity.Property(e => e.cbCreateur)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("CSQL")
                .IsFixedLength();
            entity.Property(e => e.cbDO_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len(isnull([DO_Piece],''))+(1)))+isnull([DO_Piece],'')))", false);
            entity.Property(e => e.cbFlag).HasDefaultValue((short)0);
            entity.Property(e => e.cbModification)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime");
            entity.Property(e => e.cbProt).HasDefaultValue((short)0);
            entity.Property(e => e.cbReplication).HasDefaultValue(0);
            entity.Property(e => e.cbTA_Piece)
                .HasMaxLength(10)
                .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([TA_Piece])+(1)))+[TA_Piece]))", false);

            entity.HasOne(d => d.CA_NoNavigation).WithMany(p => p.F_TICKETARCHIVE)
                .HasPrincipalKey(p => p.CA_No)
                .HasForeignKey(d => d.CA_No)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_F_TICKETARCHIVE_CA_No");

            entity.HasOne(d => d.CT_NumNavigation).WithMany(p => p.F_TICKETARCHIVE)
                .HasPrincipalKey(p => p.CT_Num)
                .HasForeignKey(d => d.CT_Num)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FKA_CPTAF_TICKETARCHIVE_CT_Num");

            entity.HasOne(d => d.cbCO_NoCaissierNavigation).WithMany(p => p.F_TICKETARCHIVE)
                .HasPrincipalKey(p => p.CO_No)
                .HasForeignKey(d => d.cbCO_NoCaissier)
                .HasConstraintName("FKA_CPTAF_TICKETARCHIVE_RE_NO");
        });

        modelBuilder.Entity<P_ABOCLI>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ABOCLI");
        });

        modelBuilder.Entity<P_ABOFOUR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ABOFOUR");
        });

        modelBuilder.Entity<P_ABOINT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ABOINT");
        });

        modelBuilder.Entity<P_AFFAIRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_AFFAIRE");
        });

        modelBuilder.Entity<P_AGENDAS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_AGENDAS");

            entity.Property(e => e.A_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_ARRONDI>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ARRONDI");

            entity.Property(e => e.AR_Valeur).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_AVANCEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_AVANCEMENT");
        });

        modelBuilder.Entity<P_BONAPAYER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_BONAPAYER");

            entity.Property(e => e.B_Seuil).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_CATCOMPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CATCOMPTA");

            entity.Property(e => e.CA_ComptaAch01)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch02)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch03)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch04)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch05)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch06)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch07)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch08)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch09)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch10)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch11)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch12)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch13)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch14)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch15)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch16)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch17)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch18)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch19)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch20)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch21)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch22)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch23)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch24)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch25)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch26)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch27)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch28)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch29)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch30)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch31)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch32)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch33)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch34)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch35)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch36)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch37)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch38)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch39)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch40)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch41)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch42)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch43)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch44)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch45)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch46)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch47)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch48)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch49)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaAch50)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto01)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto02)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto03)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto04)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto05)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto06)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto07)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto08)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto09)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto10)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto11)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto12)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto13)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto14)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto15)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto16)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto17)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto18)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto19)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto20)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto21)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto22)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto23)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto24)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto25)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto26)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto27)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto28)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto29)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto30)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto31)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto32)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto33)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto34)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto35)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto36)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto37)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto38)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto39)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto40)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto41)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto42)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto43)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto44)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto45)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto46)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto47)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto48)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto49)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaSto50)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen01)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen02)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen03)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen04)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen05)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen06)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen07)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen08)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen09)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen10)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen11)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen12)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen13)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen14)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen15)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen16)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen17)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen18)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen19)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen20)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen21)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen22)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen23)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen24)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen25)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen26)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen27)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen28)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen29)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen30)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen31)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen32)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen33)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen34)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen35)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen36)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen37)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen38)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen39)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen40)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen41)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen42)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen43)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen44)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen45)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen46)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen47)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen48)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen49)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CA_ComptaVen50)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_CATTARIF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CATTARIF");

            entity.Property(e => e.CT_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_CMDALIVRER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CMDALIVRER");
        });

        modelBuilder.Entity<P_CMDARTICLES>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CMDARTICLES");
        });

        modelBuilder.Entity<P_CMDDETAIL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CMDDETAIL");
        });

        modelBuilder.Entity<P_COLONNCPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_COLONNCPTA");
        });

        modelBuilder.Entity<P_COLREGLEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_COLREGLEMENT");

            entity.Property(e => e.CR_Numero01)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CR_Numero02)
                .HasMaxLength(13)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_COMMUNICATION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_COMMUNICATION");

            entity.Property(e => e.AR_RefAttente)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.CO_CdeLast)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.CO_Modele)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CO_MotPasseSite)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.CO_NomSite)
                .HasMaxLength(101)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_COMPTOIR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_COMPTOIR");

            entity.Property(e => e.C_BtnTexte01)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte02)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte03)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte04)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte05)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte06)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte07)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte08)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte09)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte10)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte11)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte12)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte13)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte14)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte15)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte16)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte17)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte18)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte19)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte20)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte21)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte22)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte23)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte24)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte25)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte26)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte27)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte28)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte29)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte30)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte31)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte32)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte33)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte34)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte35)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte36)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_BtnTexte37)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.C_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_CONDITIONNEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONDITIONNEMENT");

            entity.Property(e => e.P_Conditionnement)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_CONDLIVR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONDLIVR");

            entity.Property(e => e.C_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.C_Mode)
                .HasMaxLength(5)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_CONTACT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONTACT");

            entity.Property(e => e.C_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_CONTREMARQUECOM>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONTREMARQUECOM");
        });

        modelBuilder.Entity<P_CONTREMARQUELIV>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONTREMARQUELIV");
        });

        modelBuilder.Entity<P_CONVEUROCIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONVEUROCIAL");
        });

        modelBuilder.Entity<P_CONVEUROCPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CONVEUROCPTA");
        });

        modelBuilder.Entity<P_CRISQUE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_CRISQUE");

            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.R_Max).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.R_Min).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_DEVISE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_DEVISE");

            entity.Property(e => e.D_AncCours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_AncDate).HasColumnType("smalldatetime");
            entity.Property(e => e.D_CodeISO)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.D_CodeISONum)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.D_Cours).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_CoursClot).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_CoursP).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_Format)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.D_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_Monnaie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_Sigle)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.D_SousMonnaie)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_DOCAFFAIRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_DOCAFFAIRE");
        });

        modelBuilder.Entity<P_DOSSIER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_DOSSIER");

            entity.Property(e => e.CG_NumANBenef)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumANOuv)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumANPerte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumImportCredit)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumImportDebit)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumRappro)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.D_Adresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_Ape)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.D_ArchivePeriod).HasColumnType("smalldatetime");
            entity.Property(e => e.D_Capital).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_CloturePeriod).HasColumnType("smalldatetime");
            entity.Property(e => e.D_CodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.D_CodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.D_ComCodeExpert)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.D_ComDateSynchro).HasColumnType("smalldatetime");
            entity.Property(e => e.D_Commentaire)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.D_Complement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_DateClot).HasColumnType("smalldatetime");
            entity.Property(e => e.D_DebutExo01).HasColumnType("smalldatetime");
            entity.Property(e => e.D_DebutExo02).HasColumnType("smalldatetime");
            entity.Property(e => e.D_DebutExo03).HasColumnType("smalldatetime");
            entity.Property(e => e.D_DebutExo04).HasColumnType("smalldatetime");
            entity.Property(e => e.D_DebutExo05).HasColumnType("smalldatetime");
            entity.Property(e => e.D_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.D_EMailExpert)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.D_EMailSoc)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.D_Expert)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_FinExo01).HasColumnType("smalldatetime");
            entity.Property(e => e.D_FinExo02).HasColumnType("smalldatetime");
            entity.Property(e => e.D_FinExo03).HasColumnType("smalldatetime");
            entity.Property(e => e.D_FinExo04).HasColumnType("smalldatetime");
            entity.Property(e => e.D_FinExo05).HasColumnType("smalldatetime");
            entity.Property(e => e.D_ForfaitImpayes).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_FormatQtes)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.D_FormeJuridique)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_Identifiant)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.D_NumDoss)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.D_Pays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_PenalTaux).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_Profession)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_RaisonSoc)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.D_RappelSoldeMin).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_RapproEcart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_SeuilTVA).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.D_Siret)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.D_Site)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.D_Telecopie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_Telephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_Ville)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.JA_NumAN)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JA_NumANIFRS)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumAN)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumANIFRS)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumImpayes)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumPenal)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumRapproEscCl)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumRapproEscFr)
                .HasMaxLength(7)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_DOSSIERCIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_DOSSIERCIAL");

            entity.Property(e => e.D_ArchivePeriod).HasColumnType("smalldatetime");
            entity.Property(e => e.D_FormatPrix)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.D_FormatQte)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.D_RaisonS)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_ECHANGECIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ECHANGECIAL");

            entity.Property(e => e.AR_Ref01)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref02)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref03)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref04)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.AR_Ref05)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.E_TauxRemise01).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.E_TauxRemise02).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.E_TauxRemise03).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.E_TauxRemise04).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.E_TauxRemise05).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_EXPEDITION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_EXPEDITION");

            entity.Property(e => e.AR_Ref)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.E_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.E_Mode)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.E_ValFrais).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.E_ValFranco).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_FACTUREAFF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_FACTUREAFF");
        });

        modelBuilder.Entity<P_FILTREREV>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_FILTREREV");
        });

        modelBuilder.Entity<P_FISCAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_FISCAL");

            entity.Property(e => e.BP_CodeMAJRembours)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.CD_Nom)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumMAJApur)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumMAJCredit)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumMAJDecaisser)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumMAJEcartC)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumMAJEcartD)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumMAJRembours)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.F_Arrondissement)
                .HasMaxLength(31)
                .IsUnicode(false);
            entity.Property(e => e.F_ArrondissementCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.F_ArrondissementNum)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.F_CDI)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreAdresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreCP)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreCodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreComplement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreHoraire)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_CentrePays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreTelephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.F_CentreVille)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_Cle)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.F_DeclNom)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.F_DeclQualite)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_DeclTelephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.F_Deduction).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.F_EDIAdresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_EDICodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.F_EDICodeRegion)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.F_EDIComplement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_EDIDateRedress).HasColumnType("smalldatetime");
            entity.Property(e => e.F_EDIEMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.F_EDINumFRP)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.F_EDINumOCFI)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.F_EDIPays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_EDIRaisonSoc)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_EDISiret)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.F_EDITelephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.F_EDIVille)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_Inspection)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.F_MontantLimite).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.F_NIFExpert)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.F_NoDossier)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAAdherent)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAAdresse)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAAgrement)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.F_OGACodePostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAComplement)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAComplementSoc)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAEMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAPays)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAQualite)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGARaisonSoc)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_OGASiret)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.F_OGATelephone)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.F_OGAVille)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.F_Recette)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumMAJ)
                .HasMaxLength(7)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_GAMME>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_GAMME");

            entity.Property(e => e.G_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_GENAUTO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_GENAUTO");

            entity.Property(e => e.GE_ArtRacine)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GE_CBArtRacine)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GE_CBCondiRacine)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GE_CBGamRacine)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GE_CondiRacine)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.GE_GamRacine)
                .HasMaxLength(19)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_INTERNE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERNE");

            entity.Property(e => e.D_Intitule)
                .HasMaxLength(65)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleConfirme)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleSaisie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleValide)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_INTERROCAISSE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROCAISSE");
        });

        modelBuilder.Entity<P_INTERROCOMPTERESS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROCOMPTERESS");
        });

        modelBuilder.Entity<P_INTERRODOCREPRES>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERRODOCREPRES");
        });

        modelBuilder.Entity<P_INTERRONOMENCL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERRONOMENCL");
        });

        modelBuilder.Entity<P_INTERROREPRES>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROREPRES");
        });

        modelBuilder.Entity<P_INTERRORESS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERRORESS");
        });

        modelBuilder.Entity<P_INTERROSTO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROSTO");
        });

        modelBuilder.Entity<P_INTERROSTONOMENCL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROSTONOMENCL");
        });

        modelBuilder.Entity<P_INTERROTAR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROTAR");
        });

        modelBuilder.Entity<P_INTERROTARNOMENCL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTERROTARNOMENCL");
        });

        modelBuilder.Entity<P_INTSTATART>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_INTSTATART");

            entity.Property(e => e.P_IntStatArt)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_LETTRAGE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_LETTRAGE");

            entity.Property(e => e.JO_Num)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumChange)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumConv)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.L_MaxCredit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.L_MaxDebit).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.L_SeuilConv).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_LITIGE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_LITIGE");

            entity.Property(e => e.L_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_NATURE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_NATURE");

            entity.Property(e => e.N_Nature01N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature01N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature02N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature02N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature03N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature03N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature04N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature04N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature05N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature05N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature06N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature06N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature07N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature07N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature08N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature08N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature09N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature09N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature10N_Debut)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.N_Nature10N_Fin)
                .HasMaxLength(13)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_ORGAACH>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ORGAACH");

            entity.Property(e => e.D_LibelleConfirme)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleSaisie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleValide)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_ORGAART>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ORGAART");
        });

        modelBuilder.Entity<P_ORGASTO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ORGASTO");
        });

        modelBuilder.Entity<P_ORGATIERS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ORGATIERS");
        });

        modelBuilder.Entity<P_ORGAVEN>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_ORGAVEN");

            entity.Property(e => e.D_LibelleConfirme)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleSaisie)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.D_LibelleValide)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_PARAMETRECIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_PARAMETRECIAL");

            entity.Property(e => e.P_CreditCaisse)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.P_CreditRegl)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.P_DebitCaisse)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.P_DebitRegl)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.P_ExercicePrevision).HasColumnType("smalldatetime");
            entity.Property(e => e.P_ExonerationTVA)
                .HasMaxLength(61)
                .IsUnicode(false);
            entity.Property(e => e.P_JournEcartConv)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_JournEcartRegl)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Journal01)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Journal02)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Journal03)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Journal04)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Journal05)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Journal06)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_JournalCaisse)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.P_Libelle01)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.P_Libelle02)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.P_Libelle03)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.P_Libelle04)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.P_LibelleCondi)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibelleEntete1)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibelleEntete2)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibelleEntete3)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibelleEntete4)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibellePoidsBrut)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibellePoidsNet)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_LibelleReference)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.P_MaxEcart).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.P_MaxEcartConv).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.P_TauxEscompte).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<P_PARAMETRELIVR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_PARAMETRELIVR");
        });

        modelBuilder.Entity<P_PERIOD>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_PERIOD");

            entity.Property(e => e.P_Period)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_PREFERENCES>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_PREFERENCES");

            entity.Property(e => e.CG_NumCli)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumComptoirCredit)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumComptoirDebit)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumFrs)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumVirement)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CT_Num)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.PR_Certificat)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PR_EMail)
                .HasMaxLength(69)
                .IsUnicode(false);
            entity.Property(e => e.PR_MontantMaxTicket).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.PR_RefEsc)
                .HasMaxLength(19)
                .IsUnicode(false);
            entity.Property(e => e.PR_RefTaxeNP)
                .HasMaxLength(19)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_PROJETAFF>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_PROJETAFF");

            entity.Property(e => e.PA_Numero)
                .HasMaxLength(9)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_PROJETFAB>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_PROJETFAB");

            entity.Property(e => e.PF_Numero)
                .HasMaxLength(9)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_RAPPEL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RAPPEL");

            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_REAPPRO>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_REAPPRO");
        });

        modelBuilder.Entity<P_RECHDOC>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RECHDOC");
        });

        modelBuilder.Entity<P_RECHLIG>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RECHLIG");
        });

        modelBuilder.Entity<P_RECOUVREMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RECOUVREMENT");

            entity.Property(e => e.CG_NumDouteux)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumPerte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumProv)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.R_Modele)
                .HasMaxLength(259)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_REGISTRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_REGISTRE");
        });

        modelBuilder.Entity<P_REGLEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_REGLEMENT");

            entity.Property(e => e.IB_AFBDecaissPrinc)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.IB_AFBEncaissPrinc)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.R_Code)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.R_EdiCode)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_REGULINV>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_REGULINV");
        });

        modelBuilder.Entity<P_REGULR>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_REGULR");

            entity.Property(e => e.JO_NumExercice)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumSituation)
                .HasMaxLength(7)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_REJET>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_REJET");

            entity.Property(e => e.R_Code)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_RESILIATION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RESILIATION");

            entity.Property(e => e.R_Resiliation)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_RESOLUTION>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RESOLUTION");

            entity.Property(e => e.R_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_RESULTAT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_RESULTAT");

            entity.Property(e => e.CG_NumContrepartie)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumImposition)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.CG_NumResultat)
                .HasMaxLength(13)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_SCDCLAVIER>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SCDCLAVIER");

            entity.Property(e => e.C_Clavier)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_SCDREGLEMENT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SCDREGLEMENT");

            entity.Property(e => e.JO_NumCli)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumFour)
                .HasMaxLength(7)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_SECURITYSTRATEGYCIAL>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SECURITYSTRATEGYCIAL");
        });

        modelBuilder.Entity<P_SECURITYSTRATEGYCPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SECURITYSTRATEGYCPTA");
        });

        modelBuilder.Entity<P_SERVICECPTA>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SERVICECPTA");

            entity.Property(e => e.S_Abrege)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.S_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_SOUCHEACHAT>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SOUCHEACHAT");

            entity.Property(e => e.JO_Num)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumSituation)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.S_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_SOUCHEINTERNE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SOUCHEINTERNE");

            entity.Property(e => e.S_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_SOUCHEVENTE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_SOUCHEVENTE");

            entity.Property(e => e.JO_Num)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.JO_NumSituation)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.S_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_STATISTIQUE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_STATISTIQUE");

            entity.Property(e => e.S_Intitule)
                .HasMaxLength(35)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_TIERS>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_TIERS");

            entity.Property(e => e.T_Racine)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val01T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val01T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val02T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val02T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val03T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val03T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val04T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val04T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val05T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val05T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val06T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val06T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val07T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val07T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val08T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val08T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val09T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val09T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.T_Val10T_Compte)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.T_Val10T_Intitule)
                .HasMaxLength(17)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_TRACABILITE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_TRACABILITE");
        });

        modelBuilder.Entity<P_UNITE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_UNITE");

            entity.Property(e => e.U_EdiCode)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.U_Intitule)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<P_VALIDPLGLOBALE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_VALIDPLGLOBALE");
        });

        modelBuilder.Entity<P_VALIDPLUNITAIRE>(entity =>
        {
            entity.HasKey(e => e.cbMarq).HasName("PK_CBMARQ_P_VALIDPLUNITAIRE");
        });

        modelBuilder.Entity<cbUserSession>(entity =>
        {
            entity.HasKey(e => e.cbSession).HasName("PK_CBUSERSESSION");

            entity.Property(e => e.cbSession).ValueGeneratedNever();
            entity.Property(e => e.CB_Creator)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CB_Type)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.cbCurrentSynchroType).HasDefaultValue((short)0);
            entity.Property(e => e.cbExtCreator)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.cbLicence).HasDefaultValue((short)0);
            entity.Property(e => e.cbLockBase).HasDefaultValue((short)0);
            entity.Property(e => e.cbUserName).HasMaxLength(128);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}